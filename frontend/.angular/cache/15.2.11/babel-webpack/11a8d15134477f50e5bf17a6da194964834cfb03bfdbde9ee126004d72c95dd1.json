{"ast":null,"code":"import * as i1$2 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i1$1 from '@angular/cdk/portal';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgModule, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i3 from '@angular/material/legacy-button';\nimport { MatLegacyButtonModule } from '@angular/material/legacy-button';\nimport * as i1 from '@angular/material/snack-bar';\nimport { MAT_SNACK_BAR_DATA, _MatSnackBarContainerBase, matSnackBarAnimations, _MatSnackBarBase, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nexport { MAT_SNACK_BAR_DATA as MAT_LEGACY_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBarConfig as MatLegacySnackBarConfig, MatSnackBarRef as MatLegacySnackBarRef, _MatSnackBarBase as _MatLegacySnackBarBase, _MatSnackBarContainerBase as _MatLegacySnackBarContainerBase, matSnackBarAnimations as matLegacySnackBarAnimations } from '@angular/material/snack-bar';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport * as i3$1 from '@angular/cdk/layout';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n * @deprecated Use `SimpleSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nfunction LegacySimpleSnackBar_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function LegacySimpleSnackBar_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.action());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.data.action);\n  }\n}\nfunction MatLegacySnackBarContainer_ng_template_1_Template(rf, ctx) {}\nclass LegacySimpleSnackBar {\n  constructor(snackBarRef, data) {\n    this.snackBarRef = snackBarRef;\n    this.data = data;\n  }\n  /** Performs the action on the snack bar. */\n  action() {\n    this.snackBarRef.dismissWithAction();\n  }\n  /** If the action button should be shown. */\n  get hasAction() {\n    return !!this.data.action;\n  }\n}\nLegacySimpleSnackBar.ɵfac = function LegacySimpleSnackBar_Factory(t) {\n  return new (t || LegacySimpleSnackBar)(i0.ɵɵdirectiveInject(i1.MatSnackBarRef), i0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA));\n};\nLegacySimpleSnackBar.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegacySimpleSnackBar,\n  selectors: [[\"simple-snack-bar\"]],\n  hostAttrs: [1, \"mat-simple-snackbar\"],\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"mat-simple-snack-bar-content\"], [\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]],\n  template: function LegacySimpleSnackBar_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, LegacySimpleSnackBar_div_2_Template, 3, 1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.data.message);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatLegacyButton],\n  styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegacySimpleSnackBar, [{\n    type: Component,\n    args: [{\n      selector: 'simple-snack-bar',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-simple-snackbar'\n      },\n      template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n      styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"]\n    }]\n  }], function () {\n    return [{\n      type: i1.MatSnackBarRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SNACK_BAR_DATA]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n * @deprecated Use `MatSnackBarContainer` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarContainer extends _MatSnackBarContainerBase {\n  _afterPortalAttached() {\n    super._afterPortalAttached();\n    if (this.snackBarConfig.horizontalPosition === 'center') {\n      this._elementRef.nativeElement.classList.add('mat-snack-bar-center');\n    }\n    if (this.snackBarConfig.verticalPosition === 'top') {\n      this._elementRef.nativeElement.classList.add('mat-snack-bar-top');\n    }\n  }\n}\nMatLegacySnackBarContainer.ɵfac = /* @__PURE__ */function () {\n  let ɵMatLegacySnackBarContainer_BaseFactory;\n  return function MatLegacySnackBarContainer_Factory(t) {\n    return (ɵMatLegacySnackBarContainer_BaseFactory || (ɵMatLegacySnackBarContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatLegacySnackBarContainer)))(t || MatLegacySnackBarContainer);\n  };\n}();\nMatLegacySnackBarContainer.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatLegacySnackBarContainer,\n  selectors: [[\"snack-bar-container\"]],\n  hostAttrs: [1, \"mat-snack-bar-container\"],\n  hostVars: 1,\n  hostBindings: function MatLegacySnackBarContainer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@state.done\", function MatLegacySnackBarContainer_animation_state_done_HostBindingHandler($event) {\n        return ctx.onAnimationEnd($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 3,\n  consts: [[\"aria-hidden\", \"true\"], [\"cdkPortalOutlet\", \"\"]],\n  template: function MatLegacySnackBarContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, MatLegacySnackBarContainer_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"div\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"aria-live\", ctx._live)(\"role\", ctx._role)(\"id\", ctx._liveElementId);\n    }\n  },\n  dependencies: [i1$1.CdkPortalOutlet],\n  styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matSnackBarAnimations.snackBarState]\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacySnackBarContainer, [{\n    type: Component,\n    args: [{\n      selector: 'snack-bar-container',\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      animations: [matSnackBarAnimations.snackBarState],\n      host: {\n        'class': 'mat-snack-bar-container',\n        '[@state]': '_animationState',\n        '(@state.done)': 'onAnimationEnd($event)'\n      },\n      template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n\",\n      styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatSnackBarModule` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarModule {}\nMatLegacySnackBarModule.ɵfac = function MatLegacySnackBarModule_Factory(t) {\n  return new (t || MatLegacySnackBarModule)();\n};\nMatLegacySnackBarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatLegacySnackBarModule\n});\nMatLegacySnackBarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacySnackBarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule],\n      exports: [MatLegacySnackBarContainer, MatCommonModule],\n      declarations: [MatLegacySnackBarContainer, LegacySimpleSnackBar]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service to dispatch Material Design snack bar messages.\n * @deprecated Use `MatSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBar extends _MatSnackBarBase {\n  constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n    super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n    this.simpleSnackBarComponent = LegacySimpleSnackBar;\n    this.snackBarContainerComponent = MatLegacySnackBarContainer;\n    this.handsetCssClass = 'mat-snack-bar-handset';\n  }\n}\nMatLegacySnackBar.ɵfac = function MatLegacySnackBar_Factory(t) {\n  return new (t || MatLegacySnackBar)(i0.ɵɵinject(i1$2.Overlay), i0.ɵɵinject(i2$1.LiveAnnouncer), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i3$1.BreakpointObserver), i0.ɵɵinject(MatLegacySnackBar, 12), i0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS));\n};\nMatLegacySnackBar.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MatLegacySnackBar,\n  factory: MatLegacySnackBar.ɵfac,\n  providedIn: MatLegacySnackBarModule\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacySnackBar, [{\n    type: Injectable,\n    args: [{\n      providedIn: MatLegacySnackBarModule\n    }]\n  }], function () {\n    return [{\n      type: i1$2.Overlay\n    }, {\n      type: i2$1.LiveAnnouncer\n    }, {\n      type: i0.Injector\n    }, {\n      type: i3$1.BreakpointObserver\n    }, {\n      type: MatLegacySnackBar,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.MatSnackBarConfig,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LegacySimpleSnackBar, MatLegacySnackBar, MatLegacySnackBarContainer, MatLegacySnackBarModule };","map":{"version":3,"names":["i1$2","OverlayModule","i1$1","PortalModule","i2","CommonModule","i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","NgModule","Injectable","Optional","SkipSelf","MatCommonModule","i3","MatLegacyButtonModule","i1","MAT_SNACK_BAR_DATA","_MatSnackBarContainerBase","matSnackBarAnimations","_MatSnackBarBase","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_LEGACY_SNACK_BAR_DATA","MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBarConfig","MatLegacySnackBarConfig","MatSnackBarRef","MatLegacySnackBarRef","_MatLegacySnackBarBase","_MatLegacySnackBarContainerBase","matLegacySnackBarAnimations","i2$1","i3$1","LegacySimpleSnackBar","constructor","snackBarRef","data","action","dismissWithAction","hasAction","ɵfac","ɵcmp","NgIf","MatLegacyButton","type","args","selector","encapsulation","None","changeDetection","OnPush","host","template","styles","undefined","decorators","MatLegacySnackBarContainer","_afterPortalAttached","snackBarConfig","horizontalPosition","_elementRef","nativeElement","classList","add","verticalPosition","CdkPortalOutlet","snackBarState","Default","animations","MatLegacySnackBarModule","ɵmod","ɵinj","imports","exports","declarations","MatLegacySnackBar","overlay","live","injector","breakpointObserver","parentSnackBar","defaultConfig","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","Overlay","LiveAnnouncer","Injector","BreakpointObserver","ɵprov","providedIn"],"sources":["/Users/marieklinaeva/github/ck-board/frontend/node_modules/@angular/material/fesm2020/legacy-snack-bar.mjs"],"sourcesContent":["import * as i1$2 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i1$1 from '@angular/cdk/portal';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgModule, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i3 from '@angular/material/legacy-button';\nimport { MatLegacyButtonModule } from '@angular/material/legacy-button';\nimport * as i1 from '@angular/material/snack-bar';\nimport { MAT_SNACK_BAR_DATA, _MatSnackBarContainerBase, matSnackBarAnimations, _MatSnackBarBase, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nexport { MAT_SNACK_BAR_DATA as MAT_LEGACY_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBarConfig as MatLegacySnackBarConfig, MatSnackBarRef as MatLegacySnackBarRef, _MatSnackBarBase as _MatLegacySnackBarBase, _MatSnackBarContainerBase as _MatLegacySnackBarContainerBase, matSnackBarAnimations as matLegacySnackBarAnimations } from '@angular/material/snack-bar';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport * as i3$1 from '@angular/cdk/layout';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n * @deprecated Use `SimpleSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass LegacySimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nLegacySimpleSnackBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LegacySimpleSnackBar, deps: [{ token: i1.MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component });\nLegacySimpleSnackBar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: LegacySimpleSnackBar, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-simple-snackbar\" }, ngImport: i0, template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\", styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatLegacyButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LegacySimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-simple-snackbar',\n                    }, template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\", styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"] }]\n        }], ctorParameters: function () { return [{ type: i1.MatSnackBarRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DATA]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n * @deprecated Use `MatSnackBarContainer` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarContainer extends _MatSnackBarContainerBase {\n    _afterPortalAttached() {\n        super._afterPortalAttached();\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            this._elementRef.nativeElement.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            this._elementRef.nativeElement.classList.add('mat-snack-bar-top');\n        }\n    }\n}\nMatLegacySnackBarContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySnackBarContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatLegacySnackBarContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacySnackBarContainer, selector: \"snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mat-snack-bar-container\" }, usesInheritance: true, ngImport: i0, template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n\", styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"], dependencies: [{ kind: \"directive\", type: i1$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], host: {\n                        'class': 'mat-snack-bar-container',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n\", styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatSnackBarModule` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarModule {\n}\nMatLegacySnackBarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLegacySnackBarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySnackBarModule, declarations: [MatLegacySnackBarContainer, LegacySimpleSnackBar], imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule], exports: [MatLegacySnackBarContainer, MatCommonModule] });\nMatLegacySnackBarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySnackBarModule, imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule],\n                    exports: [MatLegacySnackBarContainer, MatCommonModule],\n                    declarations: [MatLegacySnackBarContainer, LegacySimpleSnackBar],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service to dispatch Material Design snack bar messages.\n * @deprecated Use `MatSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBar extends _MatSnackBarBase {\n    constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n        super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n        this.simpleSnackBarComponent = LegacySimpleSnackBar;\n        this.snackBarContainerComponent = MatLegacySnackBarContainer;\n        this.handsetCssClass = 'mat-snack-bar-handset';\n    }\n}\nMatLegacySnackBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySnackBar, deps: [{ token: i1$2.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$1.BreakpointObserver }, { token: MatLegacySnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable });\nMatLegacySnackBar.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySnackBar, providedIn: MatLegacySnackBarModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatLegacySnackBarModule }]\n        }], ctorParameters: function () { return [{ type: i1$2.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$1.BreakpointObserver }, { type: MatLegacySnackBar, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LegacySimpleSnackBar, MatLegacySnackBar, MatLegacySnackBarContainer, MatLegacySnackBarModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}