{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\nimport { AddPostComponent } from 'src/app/components/add-post-modal/add-post.component';\nimport { PostType } from 'src/app/models/post';\nimport { NEEDS_ATTENTION_TAG, POST_TAGGED_BORDER_THICKNESS, SocketEvent } from 'src/app/utils/constants';\nimport Converters from 'src/app/utils/converters';\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/legacy-dialog\";\nimport * as i2 from \"src/app/services/canvas.service\";\nimport * as i3 from \"src/app/services/bucket.service\";\nimport * as i4 from \"src/app/services/post.service\";\nimport * as i5 from \"src/app/services/socket.service\";\nimport * as i6 from \"src/app/utils/FabricUtils\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/legacy-button\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/legacy-form-field\";\nimport * as i12 from \"@angular/material/legacy-tooltip\";\nimport * as i13 from \"@angular/material/legacy-core\";\nimport * as i14 from \"@angular/material/legacy-select\";\nimport * as i15 from \"@angular/material/legacy-progress-spinner\";\nimport * as i16 from \"@angular/material/legacy-paginator\";\nimport * as i17 from \"../html-post/html-post.component\";\nfunction BucketsModalComponent_h3_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 12);\n    i0.ɵɵtext(1, \" No buckets created! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BucketsModalComponent_mat_form_field_9_mat_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵlistener(\"click\", function BucketsModalComponent_mat_form_field_9_mat_option_2_Template_mat_option_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const bucket_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.loadBucket(bucket_r6, $event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bucket_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", bucket_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(bucket_r6.name);\n  }\n}\nfunction BucketsModalComponent_mat_form_field_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 13)(1, \"mat-select\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function BucketsModalComponent_mat_form_field_9_Template_mat_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.activeBucketName = $event);\n    });\n    i0.ɵɵtemplate(2, BucketsModalComponent_mat_form_field_9_mat_option_2_Template, 2, 2, \"mat-option\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.activeBucketName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.buckets);\n  }\n}\nfunction BucketsModalComponent_mat_spinner_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 17);\n  }\n}\nfunction BucketsModalComponent_h3_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 12);\n    i0.ɵɵtext(1, \" No posts in bucket! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BucketsModalComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-html-post\", 18);\n    i0.ɵɵlistener(\"movePostToBoardEvent\", function BucketsModalComponent_div_16_Template_app_html_post_movePostToBoardEvent_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.movePostToBoard($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const post_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"post\", post_r11);\n  }\n}\nexport class BucketsModalComponent {\n  dialogRef;\n  canvasService;\n  bucketService;\n  postService;\n  socketService;\n  dialog;\n  fabricUtils;\n  converters;\n  data;\n  paginator;\n  board;\n  user;\n  buckets;\n  activeBucket;\n  activeBucketName;\n  posts;\n  loading = true;\n  movePostActivated;\n  Yoffset;\n  Xoffset;\n  length = 0;\n  pageSize = 8;\n  pageSizeOptions = [4, 8, 12, 16];\n  pageEvent;\n  constructor(dialogRef, canvasService, bucketService, postService, socketService, dialog, fabricUtils, converters, data) {\n    this.dialogRef = dialogRef;\n    this.canvasService = canvasService;\n    this.bucketService = bucketService;\n    this.postService = postService;\n    this.socketService = socketService;\n    this.dialog = dialog;\n    this.fabricUtils = fabricUtils;\n    this.converters = converters;\n    this.data = data;\n    this.board = data.board;\n    this.user = data.user;\n    this.Xoffset = data.centerX;\n    this.Yoffset = data.centerY;\n  }\n  ngOnInit() {\n    this.fetchBuckets();\n    this.initGroupEventsListener();\n  }\n  initGroupEventsListener() {\n    // TODO: Be able to listen to specific buckets, else this will add new posts\n    // to whichever bucket the client's viewing. Create BUCKET events.\n    // this.socketService.listen(SocketEvent.POST_CREATE, async (post: Post) => {\n    //   this.posts.push(await this.converters.toHTMLPost(post));\n    // });\n    this.socketService.listen(SocketEvent.POST_UPDATE, post => {\n      const found = this.posts.find(p => p.post.postID == post.postID);\n      if (found) found.post = post;\n    });\n    this.socketService.listen(SocketEvent.POST_DELETE, id => {\n      const found = this.posts.find(p => p.post.postID == id);\n      if (found) {\n        this.posts = this.posts.filter(post => post.post.postID != id);\n      }\n    });\n    this.socketService.listen(SocketEvent.POST_UPVOTE_ADD, result => {\n      const found = this.posts.find(p => p.post.postID == result.upvote.postID);\n      if (found) found.upvotes.push(result.upvote);\n    });\n    this.socketService.listen(SocketEvent.POST_UPVOTE_REMOVE, result => {\n      const found = this.posts.find(p => p.post.postID == result.upvote.postID);\n      if (found) found.upvotes = found.upvotes.filter(upvote => upvote.upvoteID != result.upvote.upvoteID);\n    });\n    this.socketService.listen(SocketEvent.POST_COMMENT_ADD, result => {\n      const found = this.posts.find(p => p.post.postID == result.comment.postID);\n      if (found) found.comments += 1;\n    });\n    this.socketService.listen(SocketEvent.POST_COMMENT_REMOVE, result => {\n      const found = this.posts.find(p => p.post.postID == result.comment.postID);\n      if (found) found.comments -= 1;\n    });\n    this.socketService.listen(SocketEvent.POST_TAG_ADD, ({\n      post,\n      tag\n    }) => {\n      const found = this.posts.find(p => p.post.postID == post.postID);\n      if (found) {\n        found.post = post;\n      }\n    });\n    this.socketService.listen(SocketEvent.POST_TAG_REMOVE, ({\n      post,\n      _tag\n    }) => {\n      const found = this.posts.find(p => p.post.postID == post.postID);\n      if (found) {\n        found.post = post;\n      }\n    });\n    this.socketService.listen(SocketEvent.WORKFLOW_RUN_DISTRIBUTION, ids => {\n      ids.forEach(id => {\n        const found = this.posts.find(p => p.post.postID == id);\n        if (found) {\n          this.posts = this.posts.filter(post => post.post.postID != id);\n        }\n      });\n    });\n    this.socketService.listen(SocketEvent.VOTES_CLEAR, result => {\n      const resetedPosts = [];\n      for (const upvotes of result) {\n        if (!resetedPosts.includes(upvotes.postID)) {\n          const found = this.posts.find(p => p.post.postID == upvotes.postID);\n          if (found) {\n            found.upvotes = [];\n            resetedPosts.push(upvotes.postID);\n          }\n        }\n      }\n    });\n  }\n  fetchBuckets() {\n    this.bucketService.getAllByBoard(this.board.boardID).then(buckets => {\n      this.buckets = buckets;\n      if (this.buckets.length > 0) {\n        this.loadBucket(this.buckets[0]);\n      } else {\n        this.loading = false;\n      }\n    });\n  }\n  loadBucket(bucket, event) {\n    this.activeBucket = bucket;\n    this.activeBucketName = bucket.name;\n    this.paginator.pageIndex = 0;\n    this.loadBucketPosts(bucket);\n  }\n  loadBucketPosts(bucket, event) {\n    var _this = this;\n    this.posts = [];\n    this.loading = true;\n    const size = event ? event.pageSize : this.pageSize;\n    const page = event ? event.pageIndex : 0;\n    this.postService.getAllByBucket(bucket.bucketID, {\n      page,\n      size\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* ({\n        posts,\n        count\n      }) {\n        _this.length = count;\n        _this.posts = yield _this.converters.toHTMLPosts(posts);\n        _this.loading = false;\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    return event;\n  }\n  ngOnDestroy() {\n    this.activeBucket = null;\n    this.buckets = [];\n    this.posts = [];\n  }\n  openAddPostDialog() {\n    var _this2 = this;\n    if (!this.activeBucket) {\n      return;\n    }\n    const dialogData = {\n      type: PostType.BUCKET,\n      spawnPosition: {\n        top: 150,\n        left: 150\n      },\n      board: this.board,\n      bucket: this.activeBucket,\n      user: this.user,\n      onComplete: function () {\n        var _ref2 = _asyncToGenerator(function* (post) {\n          const htmlPost = yield _this2.converters.toHTMLPost(post);\n          _this2.posts.push(htmlPost);\n        });\n        return function onComplete(_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()\n    };\n    this.dialog.open(AddPostComponent, {\n      width: '500px',\n      data: dialogData\n    });\n  }\n  movePostToBoard(postID) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const htmlPost = _this3.posts.find(p => p.post.postID == postID);\n      if (!htmlPost) return;\n      const containsAttentionTag = htmlPost.post.tags.find(tag => tag.name == NEEDS_ATTENTION_TAG.name);\n      const fill = yield _this3.fabricUtils.defaultPostColor(htmlPost.post.userID);\n      const renderAttr = {\n        position: {\n          left: _this3.Xoffset,\n          top: _this3.Yoffset\n        },\n        lock: !_this3.board.permissions.allowStudentMoveAny,\n        fillColor: fill,\n        borderColor: containsAttentionTag ? NEEDS_ATTENTION_TAG.color : undefined,\n        borderWidth: containsAttentionTag ? POST_TAGGED_BORDER_THICKNESS : undefined\n      };\n      const post = {\n        postID: postID,\n        userID: _this3.user.userID,\n        boardID: _this3.board.boardID,\n        type: PostType.BOARD,\n        contentType: htmlPost.post.contentType,\n        title: htmlPost.post.title,\n        author: _this3.user.username,\n        desc: htmlPost.post.desc,\n        tags: htmlPost.post.tags ?? [],\n        displayAttributes: renderAttr\n      };\n      yield _this3.canvasService.createBoardPostFromBucket(post);\n      htmlPost.bucketOnly = false;\n      _this3.Yoffset += 50;\n    })();\n  }\n  static ɵfac = function BucketsModalComponent_Factory(t) {\n    return new (t || BucketsModalComponent)(i0.ɵɵdirectiveInject(i1.MatLegacyDialogRef), i0.ɵɵdirectiveInject(i2.CanvasService), i0.ɵɵdirectiveInject(i3.BucketService), i0.ɵɵdirectiveInject(i4.PostService), i0.ɵɵdirectiveInject(i5.SocketService), i0.ɵɵdirectiveInject(i1.MatLegacyDialog), i0.ɵɵdirectiveInject(i6.FabricUtils), i0.ɵɵdirectiveInject(Converters), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BucketsModalComponent,\n    selectors: [[\"app-buckets-modal\"]],\n    viewQuery: function BucketsModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 18,\n    vars: 10,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Close\", 3, \"mat-dialog-close\"], [\"mat-dialog-content\", \"\"], [\"style\", \"color: grey; text-align: center\", 4, \"ngIf\"], [1, \"header\"], [\"appearance\", \"outline\", \"style\", \"font-size: 14px; margin-right: 1em\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Create Post in Bucket\", 3, \"disabled\", \"click\"], [1, \"material-icons-outlined\"], [\"class\", \"spinner\", 4, \"ngIf\"], [1, \"post-list\"], [4, \"ngFor\", \"ngForOf\"], [3, \"length\", \"pageSize\", \"pageSizeOptions\", \"showFirstLastButtons\", \"page\"], [2, \"color\", \"grey\", \"text-align\", \"center\"], [\"appearance\", \"outline\", 2, \"font-size\", \"14px\", \"margin-right\", \"1em\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"click\"], [1, \"spinner\"], [3, \"post\", \"movePostToBoardEvent\"]],\n    template: function BucketsModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0)(1, \"span\");\n        i0.ɵɵtext(2, \"CK Buckets\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1)(4, \"mat-icon\");\n        i0.ɵɵtext(5, \"close\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵtemplate(7, BucketsModalComponent_h3_7_Template, 2, 0, \"h3\", 3);\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵtemplate(9, BucketsModalComponent_mat_form_field_9_Template, 3, 2, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function BucketsModalComponent_Template_button_click_10_listener() {\n          return ctx.openAddPostDialog();\n        });\n        i0.ɵɵelementStart(11, \"mat-icon\", 7);\n        i0.ɵɵtext(12, \"note_add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(13, BucketsModalComponent_mat_spinner_13_Template, 1, 0, \"mat-spinner\", 8);\n        i0.ɵɵtemplate(14, BucketsModalComponent_h3_14_Template, 2, 0, \"h3\", 3);\n        i0.ɵɵelementStart(15, \"div\", 9);\n        i0.ɵɵtemplate(16, BucketsModalComponent_div_16_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-paginator\", 11);\n        i0.ɵɵlistener(\"page\", function BucketsModalComponent_Template_mat_paginator_page_17_listener($event) {\n          return ctx.pageEvent = ctx.loadBucketPosts(ctx.activeBucket, $event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.buckets && ctx.buckets.length === 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.buckets && ctx.buckets.length > 0 && !ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.buckets && ctx.buckets.length === 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.posts && ctx.posts.length === 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"length\", ctx.length)(\"pageSize\", ctx.pageSize)(\"pageSizeOptions\", ctx.pageSizeOptions)(\"showFirstLastButtons\", true);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i8.NgControlStatus, i8.NgModel, i9.MatLegacyButton, i10.MatIcon, i1.MatLegacyDialogClose, i1.MatLegacyDialogTitle, i1.MatLegacyDialogContent, i11.MatLegacyFormField, i12.MatLegacyTooltip, i13.MatLegacyOption, i14.MatLegacySelect, i15.MatLegacyProgressSpinner, i16.MatLegacyPaginator, i17.HtmlPostComponent],\n    styles: [\".post-list[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-gap: 1em;\\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\\n  padding-bottom: 10px;\\n}\\n\\n.mat-dialog-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.mat-dialog-content[_ngcontent-%COMP%] {\\n  max-height: 75vh;\\n}\\n\\n.mat-paginator[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.spinner[_ngcontent-%COMP%] {\\n  margin: 70px auto;\\n  background: transparent;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS9sYXlvdXQvX3Bvc3QtbGlzdC5zY3NzIiwid2VicGFjazovLy4vc3JjL2FwcC9jb21wb25lbnRzL2J1Y2tldHMtbW9kYWwvYnVja2V0cy1tb2RhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxhQUFBO0VBQ0EsNERBQUE7RUFDQSxvQkFBQTtBQ0NGOztBQUhBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7QUFNRjs7QUFIQTtFQUNFLGdCQUFBO0FBTUY7O0FBSEE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7QUFNRjs7QUFIQTtFQUNFLGlCQUFBO0VBQ0EsdUJBQUE7QUFNRjs7QUFIQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQU1GIiwic291cmNlc0NvbnRlbnQiOlsiLnBvc3QtbGlzdCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtZ2FwOiAxZW07XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDI4MHB4LCAxZnIpKTtcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XG59XG4iLCJAdXNlICcuLi8uLi8uLi9zdHlsZS9sYXlvdXQvcG9zdC1saXN0JztcblxuLm1hdC1kaWFsb2ctdGl0bGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5tYXQtZGlhbG9nLWNvbnRlbnQge1xuICBtYXgtaGVpZ2h0OiA3NXZoO1xufVxuXG4ubWF0LXBhZ2luYXRvciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uc3Bpbm5lciB7XG4gIG1hcmdpbjogNzBweCBhdXRvO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuLmhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["MAT_LEGACY_DIALOG_DATA","MAT_DIALOG_DATA","AddPostComponent","PostType","NEEDS_ATTENTION_TAG","POST_TAGGED_BORDER_THICKNESS","SocketEvent","Converters","MatLegacyPaginator","MatPaginator","i0","BucketsModalComponent","dialogRef","canvasService","bucketService","postService","socketService","dialog","fabricUtils","converters","data","paginator","board","user","buckets","activeBucket","activeBucketName","posts","loading","movePostActivated","Yoffset","Xoffset","length","pageSize","pageSizeOptions","pageEvent","constructor","centerX","centerY","ngOnInit","fetchBuckets","initGroupEventsListener","listen","POST_UPDATE","post","found","find","p","postID","POST_DELETE","id","filter","POST_UPVOTE_ADD","result","upvote","upvotes","push","POST_UPVOTE_REMOVE","upvoteID","POST_COMMENT_ADD","comment","comments","POST_COMMENT_REMOVE","POST_TAG_ADD","tag","POST_TAG_REMOVE","_tag","WORKFLOW_RUN_DISTRIBUTION","ids","forEach","VOTES_CLEAR","resetedPosts","includes","getAllByBoard","boardID","then","loadBucket","bucket","event","name","pageIndex","loadBucketPosts","size","page","getAllByBucket","bucketID","count","toHTMLPosts","ngOnDestroy","openAddPostDialog","dialogData","type","BUCKET","spawnPosition","top","left","onComplete","htmlPost","toHTMLPost","open","width","movePostToBoard","containsAttentionTag","tags","fill","defaultPostColor","userID","renderAttr","position","lock","permissions","allowStudentMoveAny","fillColor","borderColor","color","undefined","borderWidth","BOARD","contentType","title","author","username","desc","displayAttributes","createBoardPostFromBucket","bucketOnly","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/buckets-modal/buckets-modal.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/buckets-modal/buckets-modal.component.html"],"sourcesContent":["import { Component, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  MatLegacyDialog as MatDialog,\n  MatLegacyDialogRef as MatDialogRef,\n  MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA,\n} from '@angular/material/legacy-dialog';\nimport { Board } from 'src/app/models/board';\nimport User from 'src/app/models/user';\nimport { BucketService } from 'src/app/services/bucket.service';\nimport { PostService } from 'src/app/services/post.service';\nimport {\n  AddPostComponent,\n  AddPostDialog,\n} from 'src/app/components/add-post-modal/add-post.component';\nimport Post, { PostType, DisplayAttributes } from 'src/app/models/post';\nimport { FabricUtils } from 'src/app/utils/FabricUtils';\nimport {\n  NEEDS_ATTENTION_TAG,\n  POST_TAGGED_BORDER_THICKNESS,\n  SocketEvent,\n} from 'src/app/utils/constants';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { CanvasService } from 'src/app/services/canvas.service';\nimport { HTMLPost } from '../html-post/html-post.component';\nimport Converters from 'src/app/utils/converters';\nimport Upvote from 'src/app/models/upvote';\nimport { MatLegacyPaginator as MatPaginator, LegacyPageEvent as PageEvent } from '@angular/material/legacy-paginator';\n\n@Component({\n  selector: 'app-buckets-modal',\n  templateUrl: './buckets-modal.component.html',\n  styleUrls: ['./buckets-modal.component.scss'],\n})\nexport class BucketsModalComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  board: Board;\n  user: User;\n\n  buckets: any;\n  activeBucket: any;\n  activeBucketName: string;\n\n  posts: HTMLPost[];\n\n  loading = true;\n\n  movePostActivated: boolean;\n\n  Yoffset: number;\n  Xoffset: number;\n\n  length = 0;\n  pageSize = 8;\n  pageSizeOptions: number[] = [4, 8, 12, 16];\n  pageEvent: PageEvent;\n\n  constructor(\n    public dialogRef: MatDialogRef<BucketsModalComponent>,\n    public canvasService: CanvasService,\n    public bucketService: BucketService,\n    public postService: PostService,\n    public socketService: SocketService,\n    public dialog: MatDialog,\n    protected fabricUtils: FabricUtils,\n    private converters: Converters,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.board = data.board;\n    this.user = data.user;\n    this.Xoffset = data.centerX;\n    this.Yoffset = data.centerY;\n  }\n\n  ngOnInit(): void {\n    this.fetchBuckets();\n    this.initGroupEventsListener();\n  }\n\n  initGroupEventsListener() {\n    // TODO: Be able to listen to specific buckets, else this will add new posts\n    // to whichever bucket the client's viewing. Create BUCKET events.\n    // this.socketService.listen(SocketEvent.POST_CREATE, async (post: Post) => {\n    //   this.posts.push(await this.converters.toHTMLPost(post));\n    // });\n    this.socketService.listen(SocketEvent.POST_UPDATE, (post: Post) => {\n      const found = this.posts.find((p) => p.post.postID == post.postID);\n      if (found) found.post = post;\n    });\n    this.socketService.listen(SocketEvent.POST_DELETE, (id: string) => {\n      const found = this.posts.find((p) => p.post.postID == id);\n      if (found) {\n        this.posts = this.posts.filter((post) => post.post.postID != id);\n      }\n    });\n    this.socketService.listen(SocketEvent.POST_UPVOTE_ADD, (result: any) => {\n      const found = this.posts.find(\n        (p) => p.post.postID == result.upvote.postID\n      );\n      if (found) found.upvotes.push(result.upvote);\n    });\n    this.socketService.listen(SocketEvent.POST_UPVOTE_REMOVE, (result: any) => {\n      const found = this.posts.find(\n        (p) => p.post.postID == result.upvote.postID\n      );\n      if (found)\n        found.upvotes = found.upvotes.filter(\n          (upvote) => upvote.upvoteID != result.upvote.upvoteID\n        );\n    });\n    this.socketService.listen(SocketEvent.POST_COMMENT_ADD, (result: any) => {\n      const found = this.posts.find(\n        (p) => p.post.postID == result.comment.postID\n      );\n      if (found) found.comments += 1;\n    });\n    this.socketService.listen(\n      SocketEvent.POST_COMMENT_REMOVE,\n      (result: any) => {\n        const found = this.posts.find(\n          (p) => p.post.postID == result.comment.postID\n        );\n        if (found) found.comments -= 1;\n      }\n    );\n    this.socketService.listen(SocketEvent.POST_TAG_ADD, ({ post, tag }) => {\n      const found = this.posts.find((p) => p.post.postID == post.postID);\n      if (found) {\n        found.post = post;\n      }\n    });\n    this.socketService.listen(SocketEvent.POST_TAG_REMOVE, ({ post, _tag }) => {\n      const found = this.posts.find((p) => p.post.postID == post.postID);\n      if (found) {\n        found.post = post;\n      }\n    });\n    this.socketService.listen(\n      SocketEvent.WORKFLOW_RUN_DISTRIBUTION,\n      (ids: string[]) => {\n        ids.forEach((id) => {\n          const found = this.posts.find((p) => p.post.postID == id);\n          if (found) {\n            this.posts = this.posts.filter((post) => post.post.postID != id);\n          }\n        });\n      }\n    );\n    this.socketService.listen(SocketEvent.VOTES_CLEAR, (result: Upvote[]) => {\n      const resetedPosts: string[] = [];\n      for (const upvotes of result) {\n        if (!resetedPosts.includes(upvotes.postID)) {\n          const found = this.posts.find((p) => p.post.postID == upvotes.postID);\n          if (found) {\n            found.upvotes = [];\n            resetedPosts.push(upvotes.postID);\n          }\n        }\n      }\n    });\n  }\n\n  fetchBuckets(): void {\n    this.bucketService.getAllByBoard(this.board.boardID).then((buckets) => {\n      this.buckets = buckets;\n      if (this.buckets.length > 0) {\n        this.loadBucket(this.buckets[0]);\n      } else {\n        this.loading = false;\n      }\n    });\n  }\n\n  loadBucket(bucket: any, event?: any): void {\n    this.activeBucket = bucket;\n    this.activeBucketName = bucket.name;\n    this.paginator.pageIndex = 0;\n    this.loadBucketPosts(bucket);\n  }\n\n  loadBucketPosts(bucket: any, event?: any): PageEvent {\n    this.posts = [];\n    this.loading = true;\n\n    const size = event ? event.pageSize : this.pageSize;\n    const page = event ? event.pageIndex : 0;\n    this.postService\n      .getAllByBucket(bucket.bucketID, { page, size })\n      .then(async ({ posts, count }) => {\n        this.length = count;\n        this.posts = await this.converters.toHTMLPosts(posts);\n        this.loading = false;\n      });\n\n    return event;\n  }\n\n  ngOnDestroy(): void {\n    this.activeBucket = null;\n    this.buckets = [];\n    this.posts = [];\n  }\n\n  openAddPostDialog() {\n    if (!this.activeBucket) {\n      return;\n    }\n\n    const dialogData: AddPostDialog = {\n      type: PostType.BUCKET,\n      spawnPosition: {\n        top: 150,\n        left: 150,\n      },\n      board: this.board,\n      bucket: this.activeBucket,\n      user: this.user,\n      onComplete: async (post: Post) => {\n        const htmlPost = await this.converters.toHTMLPost(post);\n        this.posts.push(htmlPost);\n      },\n    };\n    this.dialog.open(AddPostComponent, {\n      width: '500px',\n      data: dialogData,\n    });\n  }\n\n  async movePostToBoard(postID: string) {\n    const htmlPost = this.posts.find((p) => p.post.postID == postID);\n\n    if (!htmlPost) return;\n\n    const containsAttentionTag = htmlPost.post.tags.find(\n      (tag) => tag.name == NEEDS_ATTENTION_TAG.name\n    );\n\n    const fill = await this.fabricUtils.defaultPostColor(htmlPost.post.userID);\n    const renderAttr: DisplayAttributes = {\n      position: {\n        left: this.Xoffset,\n        top: this.Yoffset,\n      },\n      lock: !this.board.permissions.allowStudentMoveAny,\n      fillColor: fill,\n      borderColor: containsAttentionTag ? NEEDS_ATTENTION_TAG.color : undefined,\n      borderWidth: containsAttentionTag\n        ? POST_TAGGED_BORDER_THICKNESS\n        : undefined,\n    };\n\n    const post: Post = {\n      postID: postID,\n      userID: this.user.userID,\n      boardID: this.board.boardID,\n      type: PostType.BOARD,\n      contentType: htmlPost.post.contentType,\n      title: htmlPost.post.title,\n      author: this.user.username,\n      desc: htmlPost.post.desc,\n      tags: htmlPost.post.tags ?? [],\n      displayAttributes: renderAttr,\n    };\n\n    await this.canvasService.createBoardPostFromBucket(post);\n    htmlPost.bucketOnly = false;\n\n    this.Yoffset += 50;\n  }\n}\n","<h1 mat-dialog-title>\n  <span>CK Buckets</span>\n  <button mat-icon-button [mat-dialog-close] aria-label=\"Close\">\n    <mat-icon>close</mat-icon>\n  </button>\n</h1>\n<div mat-dialog-content>\n  <h3\n    *ngIf=\"!loading && buckets && buckets.length === 0\"\n    style=\"color: grey; text-align: center\"\n  >\n    No buckets created!\n  </h3>\n  <div class=\"header\">\n    <mat-form-field\n      *ngIf=\"buckets && buckets.length > 0 && !loading\"\n      appearance=\"outline\"\n      style=\"font-size: 14px; margin-right: 1em\"\n    >\n      <mat-select [(ngModel)]=\"activeBucketName\">\n        <mat-option\n          *ngFor=\"let bucket of buckets\"\n          [value]=\"bucket.name\"\n          (click)=\"loadBucket(bucket, $event)\"\n          >{{ bucket.name }}</mat-option\n        >\n      </mat-select>\n    </mat-form-field>\n    <button\n      mat-icon-button\n      matTooltip=\"Create Post in Bucket\"\n      (click)=\"openAddPostDialog()\"\n      [disabled]=\"buckets && buckets.length === 0\"\n    >\n      <mat-icon class=\"material-icons-outlined\">note_add</mat-icon>\n    </button>\n  </div>\n  <mat-spinner class=\"spinner\" *ngIf=\"loading\"></mat-spinner>\n  <h3\n    *ngIf=\"!loading && posts && posts.length === 0\"\n    style=\"color: grey; text-align: center\"\n  >\n    No posts in bucket!\n  </h3>\n  <div class=\"post-list\">\n    <div *ngFor=\"let post of posts\">\n      <app-html-post\n        [post]=\"post\"\n        (movePostToBoardEvent)=\"movePostToBoard($event)\"\n      ></app-html-post>\n    </div>\n  </div>\n  <mat-paginator\n    [length]=\"length\"\n    [pageSize]=\"pageSize\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    [showFirstLastButtons]=\"true\"\n    (page)=\"pageEvent = loadBucketPosts(activeBucket, $event)\"\n  >\n  </mat-paginator>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}