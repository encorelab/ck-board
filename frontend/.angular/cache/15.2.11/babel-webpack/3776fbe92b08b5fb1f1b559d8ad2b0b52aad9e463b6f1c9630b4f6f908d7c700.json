{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Role } from 'src/app/models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"src/app/services/project.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/dialog\";\nfunction ProjectTodoListModalComponent_app_toolbar_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"CK Todo - \", ctx_r3.project.name, \"\");\n  }\n}\nfunction ProjectTodoListModalComponent_app_toolbar_0_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ProjectTodoListModalComponent_app_toolbar_0_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.copyEmbedCode());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"file_copy\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ProjectTodoListModalComponent_app_toolbar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"app-toolbar\", 5);\n    i0.ɵɵtemplate(1, ProjectTodoListModalComponent_app_toolbar_0_span_1_Template, 2, 1, \"span\", 6);\n    i0.ɵɵtemplate(2, ProjectTodoListModalComponent_app_toolbar_0_button_2_Template, 3, 0, \"button\", 7);\n    i0.ɵɵelement(3, \"span\", 8);\n    i0.ɵɵelementStart(4, \"button\", 9)(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"keyboard_return\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"user\", ctx_r0.user);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.project);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.user.role === ctx_r0.Role.TEACHER);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"routerLink\", \"/project/\" + ctx_r0.project.projectID);\n  }\n}\nfunction ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 19);\n    i0.ɵɵtext(1, \"school\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 19);\n    i0.ɵɵtext(1, \"person\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const user_r9 = i0.ɵɵnextContext().$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.openMemberTodoList(user_r9));\n    });\n    i0.ɵɵtext(1, \"Show Todo\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r17.closeTodoList());\n    });\n    i0.ɵɵtext(1, \"Hide Todo\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\", 15);\n    i0.ɵɵtemplate(1, ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_mat_icon_1_Template, 2, 0, \"mat-icon\", 16);\n    i0.ɵɵtemplate(2, ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_mat_icon_2_Template, 2, 0, \"mat-icon\", 16);\n    i0.ɵɵelementStart(3, \"h3\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"span\", 8);\n    i0.ɵɵtemplate(6, ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_button_6_Template, 2, 0, \"button\", 18);\n    i0.ɵɵtemplate(7, ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_button_7_Template, 2, 0, \"button\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c0, ctx_r8.isSelected(user_r9) ? \"#e4e4e4\" : \"\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r9.role === ctx_r8.Role.TEACHER);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r9.role === ctx_r8.Role.STUDENT);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", user_r9.username, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.isSelected(user_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isSelected(user_r9));\n  }\n}\nfunction ProjectTodoListModalComponent_mat_sidenav_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-sidenav\", 11, 12)(2, \"h2\", 13);\n    i0.ɵɵtext(3, \"Project Members\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-list\");\n    i0.ɵɵtemplate(5, ProjectTodoListModalComponent_mat_sidenav_3_mat_list_item_5_Template, 8, 8, \"mat-list-item\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"fixedInViewport\", !ctx_r1.embedded ? true : false)(\"fixedTopGap\", 64);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.projectMembers);\n  }\n}\nfunction ProjectTodoListModalComponent_app_todo_list_modal_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-todo-list-modal\", 21);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"projectID\", ctx_r2.project.projectID)(\"userID\", ctx_r2.todoModalUser);\n  }\n}\nexport class ProjectTodoListModalComponent {\n  constructor(userService, projectService, router, activatedRoute, dialog) {\n    this.userService = userService;\n    this.projectService = projectService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.dialog = dialog;\n    this.embedded = false;\n    this.Role = Role;\n    this.activatedRoute.queryParams.subscribe(params => {\n      if (params.embedded === 'true') {\n        this.embedded = true;\n      }\n    });\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      const map = _this.activatedRoute.snapshot.paramMap;\n      if (map.has('projectID')) {\n        _this.projectID = (_a = _this.activatedRoute.snapshot.paramMap.get('projectID')) !== null && _a !== void 0 ? _a : '';\n      } else {\n        _this.router.navigate(['error']);\n      }\n      _this.user = _this.userService.user;\n      _this.project = yield _this.projectService.get(_this.projectID);\n      if (_this.user.role === Role.TEACHER) {\n        const tempUsers = [];\n        _this.project.members.forEach( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (userID) {\n            const user = yield _this.userService.getOneById(userID);\n            if (user) tempUsers.push(user);\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n        _this.projectMembers = tempUsers;\n      } else {\n        _this.todoModalUser = _this.user.userID;\n      }\n    })();\n  }\n  openMemberTodoList(user) {\n    this.todoModalUser = user.userID;\n  }\n  closeTodoList() {\n    this.todoModalUser = '';\n  }\n  copyEmbedCode() {\n    const url = window.location.href + '?embedded=true';\n    navigator.clipboard.writeText(url);\n  }\n  isSelected(user) {\n    return this.todoModalUser === user.userID;\n  }\n}\nProjectTodoListModalComponent.ɵfac = function ProjectTodoListModalComponent_Factory(t) {\n  return new (t || ProjectTodoListModalComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ProjectService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.MatDialog));\n};\nProjectTodoListModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProjectTodoListModalComponent,\n  selectors: [[\"app-project-todo-list-modal\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[\"class\", \"toolbar\", \"style\", \"width: 100%;\", 3, \"user\", 4, \"ngIf\"], [1, \"todoModalWrapper\"], [1, \"drawer-container\"], [\"mode\", \"side\", \"opened\", \"\", \"style\", \"position: fixed\", 3, \"fixedInViewport\", \"fixedTopGap\", 4, \"ngIf\"], [3, \"projectID\", \"userID\", 4, \"ngIf\"], [1, \"toolbar\", 2, \"width\", \"100%\", 3, \"user\"], [4, \"ngIf\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Copy embeddable URL\", 3, \"click\", 4, \"ngIf\"], [2, \"flex\", \"1 1 auto\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Back to Project\", 3, \"routerLink\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Copy embeddable URL\", 3, \"click\"], [\"mode\", \"side\", \"opened\", \"\", 2, \"position\", \"fixed\", 3, \"fixedInViewport\", \"fixedTopGap\"], [\"drawer\", \"\"], [1, \"section-title\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngStyle\"], [\"mat-list-icon\", \"\", 4, \"ngIf\"], [\"matLine\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"style\", \"margin-left: 10px; min-width: unset\", 3, \"click\", 4, \"ngIf\"], [\"mat-list-icon\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"margin-left\", \"10px\", \"min-width\", \"unset\", 3, \"click\"], [3, \"projectID\", \"userID\"]],\n  template: function ProjectTodoListModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ProjectTodoListModalComponent_app_toolbar_0_Template, 7, 4, \"app-toolbar\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"mat-sidenav-container\", 2);\n      i0.ɵɵtemplate(3, ProjectTodoListModalComponent_mat_sidenav_3_Template, 6, 3, \"mat-sidenav\", 3);\n      i0.ɵɵelementStart(4, \"mat-sidenav-content\");\n      i0.ɵɵtemplate(5, ProjectTodoListModalComponent_app_todo_list_modal_5_Template, 1, 2, \"app-todo-list-modal\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.user && ctx.project && !ctx.embedded);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.user.role === ctx.Role.TEACHER);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.todoModalUser);\n    }\n  },\n  styles: [\".drawer-container {\\n  flex: 1;\\n}\\n\\n.toolbar {\\n  width: 100%;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 999;\\n}\\n\\n.drawer-container {\\n  position: absolute;\\n  padding-top: 56px;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: auto;\\n}\\n@media (min-width: breakpoint(\\\"sm\\\", \\\"min\\\")) {\\n  .drawer-container {\\n    padding-top: 64px;\\n  }\\n}\\n\\nmat-sidenav {\\n  width: 30%;\\n  height: 100%;\\n}\\n\\nmat-sidenav-content {\\n  padding: 10px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  min-height: 90vh;\\n}\\n\\n.section-title {\\n  padding: 10px 15px;\\n  margin: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wcm9qZWN0LXRvZG8tbGlzdC1tb2RhbC9wcm9qZWN0LXRvZG8tbGlzdC1tb2RhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLE9BQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxlQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxpQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLGNBQUE7QUFDRjtBQUNFO0VBUkY7SUFTSSxpQkFBQTtFQUVGO0FBQ0Y7O0FBQ0E7RUFDRSxVQUFBO0VBQ0EsWUFBQTtBQUVGOztBQUNBO0VBQ0UsYUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7QUFFRjs7QUFDQTtFQUNFLGtCQUFBO0VBQ0Esc0JBQUE7QUFFRiIsInNvdXJjZXNDb250ZW50IjpbIi5kcmF3ZXItY29udGFpbmVyIHtcbiAgZmxleDogMTtcbn1cblxuLnRvb2xiYXIge1xuICB3aWR0aDogMTAwJTsgXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogOTk5O1xufVxuXG4uZHJhd2VyLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZy10b3A6IDU2cHg7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIG92ZXJmbG93OiBhdXRvO1xuXG4gIEBtZWRpYSAobWluLXdpZHRoOiBicmVha3BvaW50KCdzbScsICdtaW4nKSkge1xuICAgIHBhZGRpbmctdG9wOiA2NHB4O1xuICB9XG59XG5cbm1hdC1zaWRlbmF2IHtcbiAgd2lkdGg6IDMwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5tYXQtc2lkZW5hdi1jb250ZW50IHtcbiAgcGFkZGluZzogMTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIG1pbi1oZWlnaHQ6IDkwdmg7XG59XG5cbi5zZWN0aW9uLXRpdGxle1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7IFxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Role","i0","ProjectTodoListModalComponent","constructor","userService","projectService","router","activatedRoute","dialog","queryParams","subscribe","params","embedded","ngOnInit","map","snapshot","paramMap","has","projectID","get","navigate","user","project","role","TEACHER","tempUsers","members","forEach","userID","getOneById","push","projectMembers","todoModalUser","openMemberTodoList","closeTodoList","copyEmbedCode","url","window","location","href","navigator","clipboard","writeText","isSelected","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/project-todo-list-modal/project-todo-list-modal.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/project-todo-list-modal/project-todo-list-modal.component.html"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TodoListModalComponent } from '../todo-list-modal/todo-list-modal.component';\nimport {\n  MatDialogModule,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n  MatDialog,\n} from '@angular/material/dialog';\nimport { UserService } from 'src/app/services/user.service';\nimport User, { AuthUser, Role } from 'src/app/models/user';\nimport { Project } from 'src/app/models/project';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectService } from 'src/app/services/project.service';\n\n@Component({\n  selector: 'app-project-todo-list-modal',\n  templateUrl: './project-todo-list-modal.component.html',\n  styleUrls: ['./project-todo-list-modal.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ProjectTodoListModalComponent implements OnInit {\n  project: Project;\n  projectID: string;\n  projectMembers: User[];\n  todoModalUser: string;\n  user: AuthUser;\n\n  embedded: boolean = false;\n  Role: typeof Role = Role;\n\n  constructor(\n    public userService: UserService,\n    public projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    public dialog: MatDialog\n  ) {\n    this.activatedRoute.queryParams.subscribe((params) => {\n      if (params.embedded === 'true') {\n        this.embedded = true;\n      }\n    });\n  }\n\n  async ngOnInit(): Promise<void> {\n    const map = this.activatedRoute.snapshot.paramMap;\n    if (map.has('projectID')) {\n      this.projectID =\n        this.activatedRoute.snapshot.paramMap.get('projectID') ?? '';\n    } else {\n      this.router.navigate(['error']);\n    }\n\n    this.user = this.userService.user!;\n    this.project = await this.projectService.get(this.projectID);\n    if (this.user.role === Role.TEACHER) {\n      const tempUsers: User[] = [];\n      this.project.members.forEach(async (userID) => {\n        const user = await this.userService.getOneById(userID);\n        if (user) tempUsers.push(user);\n      });\n      this.projectMembers = tempUsers;\n    } else {\n      this.todoModalUser = this.user.userID;\n    }\n  }\n\n  openMemberTodoList(user: User) {\n    this.todoModalUser = user.userID;\n  }\n\n  closeTodoList() {\n    this.todoModalUser = '';\n  }\n\n  copyEmbedCode() {\n    const url = window.location.href + '?embedded=true';\n    navigator.clipboard.writeText(url);\n  }\n\n  isSelected(user): boolean {\n    return this.todoModalUser === user.userID;\n  }\n}\n","<app-toolbar class=\"toolbar\" *ngIf=\"user && project && !embedded\" [user]=\"user\" style=\"width: 100%;\">\n  <span *ngIf=\"project\">CK Todo - {{ this.project.name }}</span>\n  <button mat-icon-button *ngIf=\"user.role === Role.TEACHER\" (click)=\"copyEmbedCode()\" matTooltip=\"Copy embeddable URL\">\n      <mat-icon>file_copy</mat-icon>\n    </button>\n  <span style=\"flex: 1 1 auto\"></span>\n  <button mat-icon-button routerLink=\"{{'/project/'+project.projectID}}\" matTooltip=\"Back to Project\">\n    <mat-icon>keyboard_return</mat-icon>\n  </button>\n</app-toolbar>\n<div class=\"todoModalWrapper\">\n  <mat-sidenav-container class=\"drawer-container\">\n    <mat-sidenav *ngIf=\"user.role === Role.TEACHER\" #drawer mode=\"side\" opened [fixedInViewport]=\"!embedded ? true : false\" [fixedTopGap]=\"64\" style=\"position: fixed\">\n      <h2 class=\"section-title\">Project Members</h2>\n      <mat-list>\n        <mat-list-item \n          *ngFor=\"let user of projectMembers\" \n          [ngStyle]=\"{ 'background-color': isSelected(user) ? '#e4e4e4' : ''}\"\n        >\n            <mat-icon *ngIf=\"user.role === Role.TEACHER\" mat-list-icon>school</mat-icon>\n            <mat-icon *ngIf=\"user.role === Role.STUDENT\" mat-list-icon>person</mat-icon>\n            <h3 matLine> {{user.username}} </h3>\n            <span style=\"flex: 1 1 auto\"></span>\n            <button *ngIf=\"!isSelected(user)\" mat-raised-button color=\"primary\" style=\"margin-left: 10px; min-width: unset\" (click)=\"openMemberTodoList(user)\">Show Todo</button>\n            <button *ngIf=\"isSelected(user)\" mat-raised-button color=\"primary\" style=\"margin-left: 10px; min-width: unset\" (click)=\"closeTodoList()\">Hide Todo</button>\n        </mat-list-item>\n      </mat-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <app-todo-list-modal *ngIf=\"todoModalUser\" [projectID]=\"project.projectID\" [userID]=\"todoModalUser\"></app-todo-list-modal>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}