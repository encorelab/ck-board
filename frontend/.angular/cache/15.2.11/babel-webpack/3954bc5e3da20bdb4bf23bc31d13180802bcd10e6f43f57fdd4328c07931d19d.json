{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/user.service\";\nexport class AuthGuard {\n  router;\n  userService;\n  ngZone;\n  constructor(router, userService, ngZone) {\n    this.router = router;\n    this.userService = userService;\n    this.ngZone = ngZone;\n  }\n  canActivate(_next, _state) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.userService.loggedIn) {\n        return true;\n      }\n      _this.userService.redirectUrl = _state.url;\n      if (yield !_this.userService.isSsoEnabled()) {\n        _this.router.navigate(['/login'], {\n          state: {\n            code: 403,\n            message: 'Forbidden! Please sign in'\n          }\n        });\n      }\n      return false;\n    })();\n  }\n  static ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UserService), i0.ɵɵinject(i0.NgZone));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;;;AAYA,OAAM,MAAOA,SAAS;EAEXC;EACAC;EACAC;EAHTC,YACSH,MAAc,EACdC,WAAwB,EACxBC,MAAc;IAFd,WAAM,GAANF,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;EACZ;EAEGE,WAAW,CACfC,KAA6B,EAC7BC,MAA2B;IAAA;IAAA;MAE3B,IAAI,KAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;QAC7B,OAAO,IAAI;;MAEb,KAAI,CAACN,WAAW,CAACO,WAAW,GAAGF,MAAM,CAACG,GAAG;MAEzC,UAAU,CAAC,KAAI,CAACR,WAAW,CAACS,YAAY,EAAE,EAAE;QAC1C,KAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;UAC/BC,KAAK,EAAE;YAAEC,IAAI,EAAE,GAAG;YAAEC,OAAO,EAAE;UAA2B;SACzD,CAAC;;MAEJ,OAAO,KAAK;IAAC;EACf;;qBAtBWf,SAAS;EAAA;;WAATA,SAAS;IAAAgB,SAAThB,SAAS;IAAAiB,YAFR;EAAM","names":["AuthGuard","router","userService","ngZone","constructor","canActivate","_next","_state","loggedIn","redirectUrl","url","isSsoEnabled","navigate","state","code","message","factory","providedIn"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/guards/auth.guard.ts"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    public router: Router,\n    public userService: UserService,\n    public ngZone: NgZone\n  ) {}\n\n  async canActivate(\n    _next: ActivatedRouteSnapshot,\n    _state: RouterStateSnapshot\n  ) {\n    if (this.userService.loggedIn) {\n      return true;\n    }\n    this.userService.redirectUrl = _state.url;\n\n    if (await !this.userService.isSsoEnabled()) {\n      this.router.navigate(['/login'], {\n        state: { code: 403, message: 'Forbidden! Please sign in' },\n      });\n    }\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}