{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\nimport { PostType } from 'src/app/models/post';\nimport { SocketEvent, NEEDS_ATTENTION_TAG, POST_TAGGED_BORDER_THICKNESS } from 'src/app/utils/constants';\nimport Converters from '../../utils/converters';\nimport { AddPostComponent } from 'src/app/components/add-post-modal/add-post.component';\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/legacy-dialog\";\nimport * as i2 from \"src/app/services/bucket.service\";\nimport * as i3 from \"src/app/services/post.service\";\nimport * as i4 from \"src/app/services/canvas.service\";\nimport * as i5 from \"src/app/services/socket.service\";\nimport * as i6 from \"src/app/utils/FabricUtils\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/legacy-button\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/legacy-tooltip\";\nimport * as i11 from \"@angular/material/legacy-menu\";\nimport * as i12 from \"@angular/material/legacy-chips\";\nimport * as i13 from \"@angular/material/legacy-progress-spinner\";\nimport * as i14 from \"@angular/material/legacy-paginator\";\nimport * as i15 from \"../html-post/html-post.component\";\nfunction ListModalComponent_h3_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 16);\n    i0.ɵɵtext(1, \" No posts created!\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction ListModalComponent_mat_chip_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 18);\n    i0.ɵɵlistener(\"click\", function ListModalComponent_mat_chip_14_Template_mat_icon_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const tag_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.removeFilter(tag_r8));\n    });\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tag_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, tag_r8.color));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r8.name, \" \");\n  }\n}\nfunction ListModalComponent_mat_chip_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 19);\n    i0.ɵɵtext(1, \" Filter By Tag \");\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"add\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(18);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r4);\n  }\n}\nfunction ListModalComponent_mat_spinner_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 20);\n  }\n}\nfunction ListModalComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" No tags available. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListModalComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵlistener(\"click\", function ListModalComponent_div_20_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const tag_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.addFilter(tag_r11));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tag_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r11.name, \" \");\n  }\n}\nfunction ListModalComponent_div_21_app_html_post_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-html-post\", 25);\n    i0.ɵɵlistener(\"movePostToBoardEvent\", function ListModalComponent_div_21_app_html_post_1_Template_app_html_post_movePostToBoardEvent_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.movePostToBoard($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const post_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"post\", post_r15);\n  }\n}\nfunction ListModalComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, ListModalComponent_div_21_app_html_post_1_Template, 1, 1, \"app-html-post\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.filteredPosts);\n  }\n}\nexport class ListModalComponent {\n  dialogRef;\n  dialog;\n  bucketService;\n  postService;\n  canvasService;\n  socketService;\n  converters;\n  fabricUtils;\n  data;\n  paginator;\n  board;\n  user;\n  loading = true;\n  loadingMore = false;\n  posts;\n  // pagination\n  page = 0;\n  length = 0;\n  pageSize = 8;\n  pageSizeOptions = [4, 8, 12, 16];\n  pageEvent;\n  activeFilters = [];\n  filterOptions = [];\n  filteredPosts;\n  unsubListeners = [];\n  Yoffset;\n  Xoffset;\n  constructor(dialogRef, dialog, bucketService, postService, canvasService, socketService, converters, fabricUtils, data) {\n    this.dialogRef = dialogRef;\n    this.dialog = dialog;\n    this.bucketService = bucketService;\n    this.postService = postService;\n    this.canvasService = canvasService;\n    this.socketService = socketService;\n    this.converters = converters;\n    this.fabricUtils = fabricUtils;\n    this.data = data;\n    this.board = data.board;\n    this.user = data.user;\n    this.Xoffset = data.centerX;\n    this.Yoffset = data.centerY;\n  }\n  ngOnInit() {\n    this.fetchInitialPosts().then(() => {\n      // wait until posts are fetched before filtering and adding listners\n      this.filterPosts();\n      this.initGroupEventsListener();\n    });\n  }\n  initGroupEventsListener() {\n    var _this = this;\n    this.socketService.listen(SocketEvent.POST_CREATE, /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (post) {\n        _this.posts.push(yield _this.converters.toHTMLPost(post));\n        _this.filterPosts();\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    this.socketService.listen(SocketEvent.POST_UPDATE, post => {\n      const found = this.posts.find(p => p.post.postID == post.postID);\n      if (found) found.post = post;\n    });\n    this.socketService.listen(SocketEvent.POST_UPVOTE_ADD, result => {\n      const found = this.posts.find(p => p.post.postID == result.upvote.postID);\n      if (found) found.upvotes.push(result.upvote);\n    });\n    this.socketService.listen(SocketEvent.POST_UPVOTE_REMOVE, result => {\n      const found = this.posts.find(p => p.post.postID == result.upvote.postID);\n      if (found) found.upvotes = found.upvotes.filter(upvote => upvote.upvoteID != result.upvote.upvoteID);\n    });\n    this.socketService.listen(SocketEvent.POST_COMMENT_ADD, result => {\n      const found = this.posts.find(p => p.post.postID == result.comment.postID);\n      if (found) found.comments += 1;\n    });\n    this.socketService.listen(SocketEvent.POST_COMMENT_REMOVE, result => {\n      const found = this.posts.find(p => p.post.postID == result.comment.postID);\n      if (found) found.comments -= 1;\n    });\n    this.socketService.listen(SocketEvent.POST_DELETE, id => {\n      const found = this.posts.find(p => p.post.postID == id);\n      if (found) {\n        this.posts = this.posts.filter(post => post.post.postID != id);\n        this.filterPosts();\n      }\n    });\n    this.socketService.listen(SocketEvent.POST_TAG_ADD, ({\n      post,\n      tag\n    }) => {\n      const found = this.posts.find(p => p.post.postID == post.postID);\n      if (found) {\n        found.post = post;\n        this.filterPosts();\n      }\n    });\n    this.socketService.listen(SocketEvent.POST_TAG_REMOVE, ({\n      post,\n      _tag\n    }) => {\n      const found = this.posts.find(p => p.post.postID == post.postID);\n      if (found) {\n        found.post = post;\n        this.filterPosts();\n      }\n    });\n    this.socketService.listen(SocketEvent.VOTES_CLEAR, result => {\n      const resetedPosts = [];\n      for (const upvotes of result) {\n        if (!resetedPosts.includes(upvotes.postID)) {\n          const found = this.posts.find(p => p.post.postID == upvotes.postID);\n          if (found) {\n            found.upvotes = [];\n            resetedPosts.push(upvotes.postID);\n          }\n        }\n      }\n    });\n  }\n  fetchInitialPosts() {\n    this.posts = [];\n    this.page = 0;\n    this.loading = true;\n    return this.fetchMorePosts({\n      size: this.pageSize,\n      page: this.page\n    });\n  }\n  fetchMorePosts(opts) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const data = (yield _this2.postService.getAllByBoard(_this2.board.boardID, opts)).filter(post => post.type !== PostType.WORKFLOW);\n      const htmlPosts = yield _this2.converters.toHTMLPosts(data);\n      _this2.length = data.length;\n      _this2.posts = _this2.posts.concat(htmlPosts);\n      _this2.page += 1;\n      _this2.loading = false;\n      _this2.loadingMore = false;\n    })();\n  }\n  pagePosts(event) {\n    var _this3 = this;\n    this.posts = [];\n    this.loading = true;\n    const size = event ? event.pageSize : this.pageSize;\n    const page = event ? event.pageIndex : 0;\n    console.log('pagePosts', event, size, page);\n    // after\n    // FIXME: for when pagination api is implemented in\n    this.postService.getAllByBoard(this.board.boardID, {\n      size,\n      page\n    }).then(posts => posts.filter(post => post.type !== PostType.WORKFLOW)).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (posts) {\n        console.log('----', size * page, posts);\n        _this3.length = posts.length;\n        _this3.posts = yield _this3.converters.toHTMLPosts(posts);\n        _this3.loading = false;\n        _this3.loadingMore = false;\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    return event;\n  }\n  onScroll(event) {\n    if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight) {\n      this.loadingMore = true;\n      this.fetchMorePosts();\n    }\n  }\n  addFilter(filter) {\n    if (!this.activeFilters.includes(filter)) {\n      this.activeFilters.push(filter);\n      this.filterPosts();\n    }\n  }\n  removeFilter(filter) {\n    if (this.activeFilters.length > 0) {\n      this.activeFilters = this.activeFilters.filter(tag => tag != filter);\n      this.filterPosts();\n    }\n  }\n  filterPosts() {\n    // update filter options\n    this.filterOptions = this.board.tags.filter(tag => !this.activeFilters.includes(tag));\n    if (this.activeFilters.length > 0) {\n      // for each post on the board\n      // check if the post has every tag in active filters\n      this.filteredPosts = this.posts.filter(post => this.activeFilters.every(filter => post.post.tags.map(postTag => postTag.name).includes(filter.name)));\n    } else {\n      this.filteredPosts = this.posts;\n    }\n  }\n  openAddPostDialog() {\n    var _this4 = this;\n    const dialogData = {\n      type: PostType.LIST,\n      spawnPosition: {\n        top: 150,\n        left: 150\n      },\n      board: this.board,\n      user: this.user,\n      onComplete: function () {\n        var _ref3 = _asyncToGenerator(function* (post) {\n          const htmlPost = yield _this4.converters.toHTMLPost(post);\n          _this4.posts.push(htmlPost);\n          _this4.filterPosts();\n        });\n        return function onComplete(_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()\n    };\n    this.dialog.open(AddPostComponent, {\n      width: '500px',\n      data: dialogData\n    });\n  }\n  movePostToBoard(postID) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const htmlPost = _this5.posts.find(p => p.post.postID == postID);\n      if (!htmlPost) return;\n      const containsAttentionTag = htmlPost.post.tags.find(tag => tag.name == NEEDS_ATTENTION_TAG.name);\n      const fill = yield _this5.fabricUtils.defaultPostColor(htmlPost.post.userID);\n      const renderAttr = {\n        position: {\n          left: _this5.Xoffset,\n          top: _this5.Yoffset\n        },\n        lock: !_this5.board.permissions.allowStudentMoveAny,\n        fillColor: fill,\n        borderColor: containsAttentionTag ? NEEDS_ATTENTION_TAG.color : undefined,\n        borderWidth: containsAttentionTag ? POST_TAGGED_BORDER_THICKNESS : undefined\n      };\n      const post = {\n        postID: postID,\n        userID: _this5.user.userID,\n        boardID: _this5.board.boardID,\n        type: PostType.BOARD,\n        contentType: htmlPost.post.contentType,\n        title: htmlPost.post.title,\n        author: _this5.user.username,\n        desc: htmlPost.post.desc,\n        tags: htmlPost.post.tags ?? [],\n        displayAttributes: renderAttr\n      };\n      yield _this5.canvasService.createBoardPostFromBucket(post);\n      htmlPost.bucketOnly = false;\n      _this5.Yoffset += 50;\n    })();\n  }\n  ngOnDestroy() {\n    this.posts = [];\n  }\n  static ɵfac = function ListModalComponent_Factory(t) {\n    return new (t || ListModalComponent)(i0.ɵɵdirectiveInject(i1.MatLegacyDialogRef), i0.ɵɵdirectiveInject(i1.MatLegacyDialog), i0.ɵɵdirectiveInject(i2.BucketService), i0.ɵɵdirectiveInject(i3.PostService), i0.ɵɵdirectiveInject(i4.CanvasService), i0.ɵɵdirectiveInject(i5.SocketService), i0.ɵɵdirectiveInject(Converters), i0.ɵɵdirectiveInject(i6.FabricUtils), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListModalComponent,\n    selectors: [[\"app-list-modal\"]],\n    viewQuery: function ListModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 11,\n    consts: [[\"mat-dialog-title\", \"\"], [2, \"display\", \"flex\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Create Post\", 2, \"margin\", \"0\", \"padding\", \"0\", \"line-height\", \"inherit\", \"height\", \"inherit\", 3, \"click\"], [1, \"material-icons-outlined\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Close\", 3, \"mat-dialog-close\"], [\"style\", \"color: grey; text-align: center\", 4, \"ngIf\"], [\"mat-dialog-content\", \"\", 3, \"scroll\"], [2, \"margin-bottom\", \"2em\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"style\", \"background-color: #78c2c0\", 3, \"matMenuTriggerFor\", 4, \"ngIf\"], [\"class\", \"spinner\", 4, \"ngIf\"], [\"menu1\", \"matMenu\"], [\"mat-menu-item\", \"\", 4, \"ngIf\"], [\"mat-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"post-list\", 4, \"ngIf\"], [3, \"length\", \"pageSize\", \"pageSizeOptions\", \"showFirstLastButtons\", \"page\"], [2, \"color\", \"grey\", \"text-align\", \"center\"], [3, \"ngStyle\"], [1, \"cancel\", 3, \"click\"], [2, \"background-color\", \"#78c2c0\", 3, \"matMenuTriggerFor\"], [1, \"spinner\"], [\"mat-menu-item\", \"\"], [\"mat-menu-item\", \"\", 3, \"click\"], [1, \"post-list\"], [3, \"post\", \"movePostToBoardEvent\", 4, \"ngFor\", \"ngForOf\"], [3, \"post\", \"movePostToBoardEvent\"]],\n    template: function ListModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0)(1, \"div\", 1)(2, \"span\");\n        i0.ɵɵtext(3, \"CK List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ListModalComponent_Template_button_click_4_listener() {\n          return ctx.openAddPostDialog();\n        });\n        i0.ɵɵelementStart(5, \"mat-icon\", 3);\n        i0.ɵɵtext(6, \"note_add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"button\", 4)(8, \"mat-icon\");\n        i0.ɵɵtext(9, \"close\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(10, ListModalComponent_h3_10_Template, 2, 0, \"h3\", 5);\n        i0.ɵɵelementStart(11, \"div\", 6);\n        i0.ɵɵlistener(\"scroll\", function ListModalComponent_Template_div_scroll_11_listener($event) {\n          return ctx.onScroll($event);\n        });\n        i0.ɵɵelementStart(12, \"mat-chip-list\")(13, \"div\", 7);\n        i0.ɵɵtemplate(14, ListModalComponent_mat_chip_14_Template, 4, 4, \"mat-chip\", 8);\n        i0.ɵɵtemplate(15, ListModalComponent_mat_chip_15_Template, 4, 1, \"mat-chip\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, ListModalComponent_mat_spinner_16_Template, 1, 0, \"mat-spinner\", 10);\n        i0.ɵɵelementStart(17, \"mat-menu\", null, 11);\n        i0.ɵɵtemplate(19, ListModalComponent_div_19_Template, 2, 0, \"div\", 12);\n        i0.ɵɵtemplate(20, ListModalComponent_div_20_Template, 2, 1, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, ListModalComponent_div_21_Template, 2, 1, \"div\", 14);\n        i0.ɵɵelementStart(22, \"mat-paginator\", 15);\n        i0.ɵɵlistener(\"page\", function ListModalComponent_Template_mat_paginator_page_22_listener($event) {\n          return ctx.pageEvent = ctx.pagePosts($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.posts.length === 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.activeFilters);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.posts && !ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.filterOptions.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filterOptions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"length\", ctx.length)(\"pageSize\", ctx.pageSize)(\"pageSizeOptions\", ctx.pageSizeOptions)(\"showFirstLastButtons\", true);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i7.NgStyle, i8.MatLegacyButton, i9.MatIcon, i1.MatLegacyDialogClose, i1.MatLegacyDialogTitle, i1.MatLegacyDialogContent, i10.MatLegacyTooltip, i11.MatLegacyMenu, i11.MatLegacyMenuItem, i11.MatLegacyMenuTrigger, i12.MatLegacyChipList, i12.MatLegacyChip, i13.MatLegacyProgressSpinner, i14.MatLegacyPaginator, i15.HtmlPostComponent],\n    styles: [\".post-list[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-gap: 1em;\\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\\n  padding-bottom: 10px;\\n}\\n\\n.mat-dialog-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.mat-dialog-content[_ngcontent-%COMP%] {\\n  max-height: 75vh;\\n}\\n\\n.mat-paginator[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.tag-form[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.spinner[_ngcontent-%COMP%] {\\n  margin: 70px auto;\\n  background: transparent;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.header[_ngcontent-%COMP%]    > mat-paginator[_ngcontent-%COMP%]:last-child {\\n  margin-left: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS9sYXlvdXQvX3Bvc3QtbGlzdC5zY3NzIiwid2VicGFjazovLy4vc3JjL2FwcC9jb21wb25lbnRzL2xpc3QtbW9kYWwvbGlzdC1tb2RhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxhQUFBO0VBQ0EsNERBQUE7RUFDQSxvQkFBQTtBQ0NGOztBQUhBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7QUFNRjs7QUFIQTtFQUNFLGdCQUFBO0FBTUY7O0FBSEE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7QUFNRjs7QUFGQTtFQUNFLFdBQUE7QUFLRjs7QUFGQTtFQUNFLGlCQUFBO0VBQ0EsdUJBQUE7QUFLRjs7QUFGQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUtGOztBQUZBO0VBQ0UsaUJBQUE7QUFLRiIsInNvdXJjZXNDb250ZW50IjpbIi5wb3N0LWxpc3Qge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWdhcDogMWVtO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgyODBweCwgMWZyKSk7XG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xufVxuIiwiQHVzZSAnLi4vLi4vLi4vc3R5bGUvbGF5b3V0L3Bvc3QtbGlzdCc7XG5cbi5tYXQtZGlhbG9nLXRpdGxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4ubWF0LWRpYWxvZy1jb250ZW50IHtcbiAgbWF4LWhlaWdodDogNzV2aDtcbn1cblxuLm1hdC1wYWdpbmF0b3Ige1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn0gXG5cblxuLnRhZy1mb3JtIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5zcGlubmVyIHtcbiAgbWFyZ2luOiA3MHB4IGF1dG87XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4uaGVhZGVyIHtcbiAgZGlzcGxheTogZmxleDsgXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5cbi5oZWFkZXIgPiBtYXQtcGFnaW5hdG9yOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["MAT_LEGACY_DIALOG_DATA","MAT_DIALOG_DATA","PostType","SocketEvent","NEEDS_ATTENTION_TAG","POST_TAGGED_BORDER_THICKNESS","Converters","AddPostComponent","MatLegacyPaginator","MatPaginator","i0","ListModalComponent","dialogRef","dialog","bucketService","postService","canvasService","socketService","converters","fabricUtils","data","paginator","board","user","loading","loadingMore","posts","page","length","pageSize","pageSizeOptions","pageEvent","activeFilters","filterOptions","filteredPosts","unsubListeners","Yoffset","Xoffset","constructor","centerX","centerY","ngOnInit","fetchInitialPosts","then","filterPosts","initGroupEventsListener","listen","POST_CREATE","post","push","toHTMLPost","POST_UPDATE","found","find","p","postID","POST_UPVOTE_ADD","result","upvote","upvotes","POST_UPVOTE_REMOVE","filter","upvoteID","POST_COMMENT_ADD","comment","comments","POST_COMMENT_REMOVE","POST_DELETE","id","POST_TAG_ADD","tag","POST_TAG_REMOVE","_tag","VOTES_CLEAR","resetedPosts","includes","fetchMorePosts","size","opts","getAllByBoard","boardID","type","WORKFLOW","htmlPosts","toHTMLPosts","concat","pagePosts","event","pageIndex","console","log","onScroll","target","offsetHeight","scrollTop","scrollHeight","addFilter","removeFilter","tags","every","map","postTag","name","openAddPostDialog","dialogData","LIST","spawnPosition","top","left","onComplete","htmlPost","open","width","movePostToBoard","containsAttentionTag","fill","defaultPostColor","userID","renderAttr","position","lock","permissions","allowStudentMoveAny","fillColor","borderColor","color","undefined","borderWidth","BOARD","contentType","title","author","username","desc","displayAttributes","createBoardPostFromBucket","bucketOnly","ngOnDestroy","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/list-modal/list-modal.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/list-modal/list-modal.component.html"],"sourcesContent":["import { Component, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  MatLegacyDialog as MatDialog,\n  MatLegacyDialogRef as MatDialogRef,\n  MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA,\n} from '@angular/material/legacy-dialog';\nimport { Board } from 'src/app/models/board';\nimport Post, { PostType, DisplayAttributes } from 'src/app/models/post';\nimport { CanvasService } from 'src/app/services/canvas.service';\nimport { BucketService } from 'src/app/services/bucket.service';\nimport { PostService } from 'src/app/services/post.service';\nimport { SocketService } from 'src/app/services/socket.service';\nimport {\n  SocketEvent,\n  NEEDS_ATTENTION_TAG,\n  POST_TAGGED_BORDER_THICKNESS,\n} from 'src/app/utils/constants';\nimport { HTMLPost } from '../html-post/html-post.component';\nimport Converters from '../../utils/converters';\nimport { Tag } from 'src/app/models/tag';\nimport {\n  AddPostComponent,\n  AddPostDialog,\n} from 'src/app/components/add-post-modal/add-post.component';\nimport User from 'src/app/models/user';\nimport Upvote from 'src/app/models/upvote';\nimport { FabricUtils } from 'src/app/utils/FabricUtils';\nimport { MatLegacyPaginator as MatPaginator, LegacyPageEvent as PageEvent } from '@angular/material/legacy-paginator';\n\n@Component({\n  selector: 'app-list-modal',\n  templateUrl: './list-modal.component.html',\n  styleUrls: ['./list-modal.component.scss'],\n})\nexport class ListModalComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  board: Board;\n  user: User;\n\n  loading = true;\n  loadingMore = false;\n\n  posts: HTMLPost[];\n\n  // pagination\n  page = 0;\n  length = 0;\n  pageSize = 8;\n  pageSizeOptions: number[] = [4, 8, 12, 16];\n  pageEvent: PageEvent;\n\n  activeFilters: Tag[] = [];\n  filterOptions: Tag[] = [];\n  filteredPosts: any[];\n  unsubListeners: Function[] = [];\n\n  Yoffset: number;\n  Xoffset: number;\n\n  constructor(\n    public dialogRef: MatDialogRef<ListModalComponent>,\n    public dialog: MatDialog,\n    public bucketService: BucketService,\n    public postService: PostService,\n    public canvasService: CanvasService,\n    public socketService: SocketService,\n    public converters: Converters,\n    public fabricUtils: FabricUtils,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.board = data.board;\n    this.user = data.user;\n    this.Xoffset = data.centerX;\n    this.Yoffset = data.centerY;\n  }\n\n  ngOnInit(): void {\n    this.fetchInitialPosts().then(() => {\n      // wait until posts are fetched before filtering and adding listners\n      this.filterPosts();\n      this.initGroupEventsListener();\n    });\n  }\n\n  initGroupEventsListener() {\n    this.socketService.listen(SocketEvent.POST_CREATE, async (post: Post) => {\n      this.posts.push(await this.converters.toHTMLPost(post));\n      this.filterPosts();\n    });\n    this.socketService.listen(SocketEvent.POST_UPDATE, (post: Post) => {\n      const found = this.posts.find((p) => p.post.postID == post.postID);\n      if (found) found.post = post;\n    });\n    this.socketService.listen(SocketEvent.POST_UPVOTE_ADD, (result: any) => {\n      const found = this.posts.find(\n        (p) => p.post.postID == result.upvote.postID\n      );\n      if (found) found.upvotes.push(result.upvote);\n    });\n    this.socketService.listen(SocketEvent.POST_UPVOTE_REMOVE, (result: any) => {\n      const found = this.posts.find(\n        (p) => p.post.postID == result.upvote.postID\n      );\n      if (found)\n        found.upvotes = found.upvotes.filter(\n          (upvote) => upvote.upvoteID != result.upvote.upvoteID\n        );\n    });\n    this.socketService.listen(SocketEvent.POST_COMMENT_ADD, (result: any) => {\n      const found = this.posts.find(\n        (p) => p.post.postID == result.comment.postID\n      );\n      if (found) found.comments += 1;\n    });\n    this.socketService.listen(\n      SocketEvent.POST_COMMENT_REMOVE,\n      (result: any) => {\n        const found = this.posts.find(\n          (p) => p.post.postID == result.comment.postID\n        );\n        if (found) found.comments -= 1;\n      }\n    );\n    this.socketService.listen(SocketEvent.POST_DELETE, (id: string) => {\n      const found = this.posts.find((p) => p.post.postID == id);\n      if (found) {\n        this.posts = this.posts.filter((post) => post.post.postID != id);\n        this.filterPosts();\n      }\n    });\n    this.socketService.listen(SocketEvent.POST_TAG_ADD, ({ post, tag }) => {\n      const found = this.posts.find((p) => p.post.postID == post.postID);\n      if (found) {\n        found.post = post;\n        this.filterPosts();\n      }\n    });\n    this.socketService.listen(SocketEvent.POST_TAG_REMOVE, ({ post, _tag }) => {\n      const found = this.posts.find((p) => p.post.postID == post.postID);\n      if (found) {\n        found.post = post;\n        this.filterPosts();\n      }\n    });\n    this.socketService.listen(SocketEvent.VOTES_CLEAR, (result: Upvote[]) => {\n      const resetedPosts: string[] = [];\n      for (const upvotes of result) {\n        if (!resetedPosts.includes(upvotes.postID)) {\n          const found = this.posts.find((p) => p.post.postID == upvotes.postID);\n          if (found) {\n            found.upvotes = [];\n            resetedPosts.push(upvotes.postID);\n          }\n        }\n      }\n    });\n  }\n\n  fetchInitialPosts() {\n    this.posts = [];\n    this.page = 0;\n    this.loading = true;\n\n    return this.fetchMorePosts({ size: this.pageSize, page: this.page });\n  }\n\n  async fetchMorePosts(opts?: { size: number; page: number }) {\n    const data = (\n      await this.postService.getAllByBoard(this.board.boardID, opts)\n    ).filter((post) => post.type !== PostType.WORKFLOW);\n    const htmlPosts = await this.converters.toHTMLPosts(data);\n    this.length = data.length;\n    this.posts = this.posts.concat(htmlPosts);\n    this.page += 1;\n    this.loading = false;\n    this.loadingMore = false;\n  }\n\n  pagePosts(event?: any): PageEvent {\n    this.posts = [];\n    this.loading = true;\n\n    const size = event ? event.pageSize : this.pageSize;\n    const page = event ? event.pageIndex : 0;\n    console.log('pagePosts', event, size, page);\n\n    // after\n    // FIXME: for when pagination api is implemented in\n    this.postService\n      .getAllByBoard(this.board.boardID, { size, page })\n      .then((posts) => posts.filter((post) => post.type !== PostType.WORKFLOW))\n      .then(async (posts: Post[]) => {\n        console.log('----', size * page, posts);\n        this.length = posts.length;\n        this.posts = await this.converters.toHTMLPosts(posts);\n        this.loading = false;\n        this.loadingMore = false;\n      });\n    return event;\n  }\n\n  onScroll(event: any) {\n    if (\n      event.target.offsetHeight + event.target.scrollTop >=\n      event.target.scrollHeight\n    ) {\n      this.loadingMore = true;\n      this.fetchMorePosts();\n    }\n  }\n\n  addFilter(filter: Tag) {\n    if (!this.activeFilters.includes(filter)) {\n      this.activeFilters.push(filter);\n      this.filterPosts();\n    }\n  }\n\n  removeFilter(filter: Tag) {\n    if (this.activeFilters.length > 0) {\n      this.activeFilters = this.activeFilters.filter((tag) => tag != filter);\n      this.filterPosts();\n    }\n  }\n\n  filterPosts() {\n    // update filter options\n    this.filterOptions = this.board.tags.filter(\n      (tag) => !this.activeFilters.includes(tag)\n    );\n    if (this.activeFilters.length > 0) {\n      // for each post on the board\n      // check if the post has every tag in active filters\n      this.filteredPosts = this.posts.filter((post) =>\n        this.activeFilters.every((filter) =>\n          post.post.tags.map((postTag) => postTag.name).includes(filter.name)\n        )\n      );\n    } else {\n      this.filteredPosts = this.posts;\n    }\n  }\n\n  openAddPostDialog() {\n    const dialogData: AddPostDialog = {\n      type: PostType.LIST,\n      spawnPosition: {\n        top: 150,\n        left: 150,\n      },\n      board: this.board,\n      user: this.user,\n      onComplete: async (post: Post) => {\n        const htmlPost = await this.converters.toHTMLPost(post);\n        this.posts.push(htmlPost);\n        this.filterPosts();\n      },\n    };\n    this.dialog.open(AddPostComponent, {\n      width: '500px',\n      data: dialogData,\n    });\n  }\n\n  async movePostToBoard(postID: string) {\n    const htmlPost = this.posts.find((p) => p.post.postID == postID);\n    if (!htmlPost) return;\n\n    const containsAttentionTag = htmlPost.post.tags.find(\n      (tag) => tag.name == NEEDS_ATTENTION_TAG.name\n    );\n    const fill = await this.fabricUtils.defaultPostColor(htmlPost.post.userID);\n    const renderAttr: DisplayAttributes = {\n      position: {\n        left: this.Xoffset,\n        top: this.Yoffset,\n      },\n      lock: !this.board.permissions.allowStudentMoveAny,\n      fillColor: fill,\n      borderColor: containsAttentionTag ? NEEDS_ATTENTION_TAG.color : undefined,\n      borderWidth: containsAttentionTag\n        ? POST_TAGGED_BORDER_THICKNESS\n        : undefined,\n    };\n\n    const post: Post = {\n      postID: postID,\n      userID: this.user.userID,\n      boardID: this.board.boardID,\n      type: PostType.BOARD,\n      contentType: htmlPost.post.contentType,\n      title: htmlPost.post.title,\n      author: this.user.username,\n      desc: htmlPost.post.desc,\n      tags: htmlPost.post.tags ?? [],\n      displayAttributes: renderAttr,\n    };\n\n    await this.canvasService.createBoardPostFromBucket(post);\n    htmlPost.bucketOnly = false;\n\n    this.Yoffset += 50;\n  }\n\n  ngOnDestroy(): void {\n    this.posts = [];\n  }\n}\n","<h1 mat-dialog-title>\n  <div style=\"display: flex\">\n    <span>CK List</span>\n    <button\n      mat-icon-button\n      matTooltip=\"Create Post\"\n      (click)=\"openAddPostDialog()\"\n      style=\"margin: 0; padding: 0; line-height: inherit; height: inherit\"\n    >\n      <mat-icon class=\"material-icons-outlined\">note_add</mat-icon>\n    </button>\n  </div>\n  <button mat-icon-button [mat-dialog-close] aria-label=\"Close\">\n    <mat-icon>close</mat-icon>\n  </button>\n</h1>\n<h3\n  *ngIf=\"!loading && posts.length === 0\"\n  style=\"color: grey; text-align: center\"\n>\n  No posts created!\n</h3>\n<div mat-dialog-content (scroll)=\"onScroll($event)\">\n  <mat-chip-list>\n    <div style=\"margin-bottom: 2em\">\n      <mat-chip\n        [ngStyle]=\"{ 'background-color': tag.color }\"\n        *ngFor=\"let tag of activeFilters\"\n      >\n        {{ tag.name }}\n        <mat-icon class=\"cancel\" (click)=\"removeFilter(tag)\">cancel</mat-icon>\n      </mat-chip>\n      <mat-chip\n        style=\"background-color: #78c2c0\"\n        [matMenuTriggerFor]=\"menu1\"\n        *ngIf=\"posts && !loading\"\n      >\n        Filter By Tag\n        <mat-icon>add</mat-icon>\n      </mat-chip>\n    </div>\n  </mat-chip-list>\n  <mat-spinner class=\"spinner\" *ngIf=\"loading\"></mat-spinner>\n  <mat-menu #menu1=\"matMenu\">\n    <div mat-menu-item *ngIf=\"filterOptions.length === 0\">\n      No tags available.\n    </div>\n    <div\n      mat-menu-item\n      *ngFor=\"let tag of filterOptions\"\n      (click)=\"addFilter(tag)\"\n    >\n      {{ tag.name }}\n    </div>\n  </mat-menu>\n  <div class=\"post-list\" *ngIf=\"!loading\">\n    <app-html-post\n      [post]=\"post\"\n      *ngFor=\"let post of filteredPosts\"\n      (movePostToBoardEvent)=\"movePostToBoard($event)\"\n    ></app-html-post>\n  </div>\n  <mat-paginator\n    [length]=\"length\"\n    [pageSize]=\"pageSize\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    [showFirstLastButtons]=\"true\"\n    (page)=\"pageEvent = pagePosts($event)\"\n  >\n  </mat-paginator>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}