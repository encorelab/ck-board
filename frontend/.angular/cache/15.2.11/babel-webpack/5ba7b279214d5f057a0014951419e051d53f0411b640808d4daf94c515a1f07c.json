{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\nimport { BoardType } from 'src/app/models/board';\nimport { PostType, ContentType } from 'src/app/models/post';\nimport { Role } from 'src/app/models/user';\nimport { NEEDS_ATTENTION_TAG, POST_TAGGED_BORDER_THICKNESS, STUDENT_POST_COLOR, TEACHER_POST_COLOR } from 'src/app/utils/constants';\nimport { MyErrorStateMatcher } from 'src/app/utils/ErrorStateMatcher';\nimport { generateUniqueID } from 'src/app/utils/Utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"src/app/services/canvas.service\";\nimport * as i3 from \"src/app/services/board.service\";\nimport * as i4 from \"src/app/services/project.service\";\nimport * as i5 from \"src/app/services/post.service\";\nimport * as i6 from \"src/app/services/socket.service\";\nimport * as i7 from \"src/app/services/snackbar.service\";\nimport * as i8 from \"src/app/utils/FabricUtils\";\nimport * as i9 from \"@angular/material/legacy-dialog\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@angular/material/legacy-button\";\nimport * as i13 from \"@angular/material/icon\";\nimport * as i14 from \"@angular/material/legacy-form-field\";\nimport * as i15 from \"@angular/material/legacy-input\";\nimport * as i16 from \"@angular/material/legacy-card\";\nimport * as i17 from \"@angular/material/legacy-tooltip\";\nimport * as i18 from \"@angular/material/legacy-menu\";\nimport * as i19 from \"@angular/material/legacy-chips\";\nimport * as i20 from \"@angular/material/legacy-radio\";\nimport * as i21 from \"../../autofocus.directive\";\nfunction AddPostComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 14);\n    i0.ɵɵtext(1, \"Add Post\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPostComponent_h1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 14);\n    i0.ɵɵtext(1, \"Update Post\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPostComponent_mat_radio_group_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-radio-group\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function AddPostComponent_mat_radio_group_4_Template_mat_radio_group_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.contentType = $event);\n    });\n    i0.ɵɵelementStart(1, \"mat-radio-button\", 16);\n    i0.ɵɵtext(2, \" Open Response \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-radio-button\", 17);\n    i0.ɵɵtext(4, \" Multiple Choice \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.contentType);\n  }\n}\nfunction AddPostComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Title is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddPostComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Title is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"too long!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddPostComponent_div_11_mat_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-label\");\n    i0.ɵɵtext(1, \" Add open response question prompt \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPostComponent_div_11_mat_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-label\");\n    i0.ɵɵtext(1, \" Message \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPostComponent_div_11_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Question Prompt is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddPostComponent_div_11_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Message is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"too long!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddPostComponent_div_11_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Question Prompt is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"too long!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddPostComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 4);\n    i0.ɵɵtemplate(2, AddPostComponent_div_11_mat_label_2_Template, 2, 0, \"mat-label\", 6);\n    i0.ɵɵtemplate(3, AddPostComponent_div_11_mat_label_3_Template, 2, 0, \"mat-label\", 6);\n    i0.ɵɵelementStart(4, \"textarea\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function AddPostComponent_div_11_Template_textarea_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.message = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddPostComponent_div_11_mat_error_5_Template, 4, 0, \"mat-error\", 6);\n    i0.ɵɵtemplate(6, AddPostComponent_div_11_mat_error_6_Template, 4, 0, \"mat-error\", 6);\n    i0.ɵɵtemplate(7, AddPostComponent_div_11_mat_error_7_Template, 4, 0, \"mat-error\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.boardType === \"QUESTION_AUTHORING\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.boardType === \"BRAINSTORMING\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r5.boardType === \"BRAINSTORMING\" ? ctx_r5.msgControl : ctx_r5.questionPromptControl)(\"errorStateMatcher\", ctx_r5.matcher)(\"ngModel\", ctx_r5.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.boardType === \"QUESTION_AUTHORING\" && !ctx_r5.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.boardType === \"BRAINSTORMING\" && ctx_r5.message && ctx_r5.message.length > 2000);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.boardType === \"QUESTION_AUTHORING\" && ctx_r5.message && ctx_r5.message.length > 2000);\n  }\n}\nfunction AddPostComponent_div_12_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Question Prompt is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddPostComponent_div_12_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Prompt is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"too long!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddPostComponent_div_12_mat_hint_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 26);\n    i0.ɵɵtext(1, \" Multiple Choice Options required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPostComponent_div_12_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function AddPostComponent_div_12_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.addMultipleChoiceButton());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"add\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r24.newMultipleChoiceOptionTest || ctx_r24.multipleChoiceOptions.length > 6);\n  }\n}\nfunction AddPostComponent_div_12_mat_hint_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 26);\n    i0.ɵɵtext(1, \" Select correct multiple choice option. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction AddPostComponent_div_12_mat_card_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 28)(1, \"mat-card-title\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function AddPostComponent_div_12_mat_card_17_Template_button_click_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const multipleChoice_r29 = restoredCtx.$implicit;\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.removeMultipleChoiceOption($event, multipleChoice_r29));\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\", 31);\n    i0.ɵɵtext(6, \" delete \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function AddPostComponent_div_12_mat_card_17_Template_button_click_7_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const multipleChoice_r29 = restoredCtx.$implicit;\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r32.multipleChoiceAnswer($event, multipleChoice_r29));\n    });\n    i0.ɵɵelementStart(8, \"mat-icon\", 31);\n    i0.ɵɵtext(9, \" check_circle_outline \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const multipleChoice_r29 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, multipleChoice_r29.correct ? \"#39e75f\" : \"white\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", multipleChoice_r29.optionTitle, \" \");\n  }\n}\nfunction AddPostComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\")(2, \"mat-form-field\", 4)(3, \"mat-label\");\n    i0.ɵɵtext(4, \" Multiple Choice Question Prompt \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function AddPostComponent_div_12_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.message = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AddPostComponent_div_12_mat_error_6_Template, 4, 0, \"mat-error\", 6);\n    i0.ɵɵtemplate(7, AddPostComponent_div_12_mat_error_7_Template, 4, 0, \"mat-error\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 21)(9, \"mat-form-field\", 22)(10, \"mat-label\");\n    i0.ɵɵtext(11, \"New Multiple Choice Option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function AddPostComponent_div_12_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.newMultipleChoiceOptionTest = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, AddPostComponent_div_12_mat_hint_13_Template, 2, 0, \"mat-hint\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, AddPostComponent_div_12_button_14_Template, 3, 1, \"button\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\");\n    i0.ɵɵtemplate(16, AddPostComponent_div_12_mat_hint_16_Template, 2, 0, \"mat-hint\", 8);\n    i0.ɵɵtemplate(17, AddPostComponent_div_12_mat_card_17_Template, 10, 4, \"mat-card\", 25);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r6.questionPromptControl)(\"errorStateMatcher\", ctx_r6.matcher)(\"ngModel\", ctx_r6.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.message && ctx_r6.message.length > 2000);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.newMultipleChoiceOptionTest);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.multipleChoiceOptions.length < 2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.multipleChoiceOptions.length < 6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.multipleChoiceOptions.length > 1 && !ctx_r6.correctMultipleChoiceSelected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.multipleChoiceOptions);\n  }\n}\nfunction AddPostComponent_mat_hint_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 26);\n    i0.ɵɵtext(1, \" One or more tags \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddPostComponent_mat_form_field_14_mat_chip_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 41);\n    i0.ɵɵlistener(\"click\", function AddPostComponent_mat_form_field_14_mat_chip_7_Template_mat_icon_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r43);\n      const tag_r41 = restoredCtx.$implicit;\n      const ctx_r42 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r42.removeTag(tag_r41));\n    });\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tag_r41 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, tag_r41.color));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r41.name, \" \");\n  }\n}\nfunction AddPostComponent_mat_form_field_14_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1, \" No tags available. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPostComponent_mat_form_field_14_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵlistener(\"click\", function AddPostComponent_mat_form_field_14_div_11_Template_div_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r46);\n      const tagOption_r44 = restoredCtx.$implicit;\n      const ctx_r45 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r45.addTag($event, tagOption_r44));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tagOption_r44 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tagOption_r44.name, \" \");\n  }\n}\nfunction AddPostComponent_mat_form_field_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 33)(1, \"mat-chip-list\", null, 34)(3, \"mat-chip\", 35);\n    i0.ɵɵtext(4, \" Add Tag \");\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"add\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, AddPostComponent_mat_form_field_14_mat_chip_7_Template, 4, 4, \"mat-chip\", 36);\n    i0.ɵɵelementStart(8, \"mat-menu\", null, 37);\n    i0.ɵɵtemplate(10, AddPostComponent_mat_form_field_14_div_10_Template, 2, 0, \"div\", 38);\n    i0.ɵɵtemplate(11, AddPostComponent_mat_form_field_14_div_11_Template, 2, 1, \"div\", 39);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r38 = i0.ɵɵreference(9);\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r38);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.tags);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.tagOptions && ctx_r8.tagOptions.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.tagOptions);\n  }\n}\nfunction AddPostComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function AddPostComponent_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.handleDialogSubmit());\n    });\n    i0.ɵɵtext(1, \" Add Post \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"spinner\", ctx_r9.creationInProgress);\n    i0.ɵɵproperty(\"disabled\", ctx_r9.disabled() || ctx_r9.creationInProgress || ctx_r9.tagRequired && ctx_r9.tags.length === 0);\n  }\n}\nfunction AddPostComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function AddPostComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.handlePersonalBoardCopy());\n    });\n    i0.ɵɵtext(1, \" Copy to All Students' Personal Boards \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r10.disabled());\n  }\n}\nfunction AddPostComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function AddPostComponent_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.updateMultipleChoicePost());\n    });\n    i0.ɵɵtext(1, \" Update Post \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r11.disabled());\n  }\n}\nexport class AddPostComponent {\n  userService;\n  canvasService;\n  boardService;\n  projectService;\n  postService;\n  socketService;\n  snackbarService;\n  fabricUtils;\n  dialogRef;\n  data;\n  user;\n  board;\n  boardType;\n  newMultipleChoiceOptionTest = '';\n  multipleChoiceOptions = [];\n  correctMultipleChoiceSelected = false;\n  editingPost;\n  contentType = ContentType.OPEN_RESPONSE_MESSAGE;\n  creationInProgress = false;\n  title = '';\n  message = '';\n  tags = [];\n  tagOptions = [];\n  titleControl = new UntypedFormControl('', [Validators.required, Validators.maxLength(50)]);\n  msgControl = new UntypedFormControl('', [Validators.maxLength(2000)]);\n  questionPromptControl = new UntypedFormControl('', [Validators.required, Validators.maxLength(2000)]);\n  tagRequired = false;\n  matcher = new MyErrorStateMatcher();\n  constructor(userService, canvasService, boardService, projectService, postService, socketService, snackbarService, fabricUtils, dialogRef, data) {\n    this.userService = userService;\n    this.canvasService = canvasService;\n    this.boardService = boardService;\n    this.projectService = projectService;\n    this.postService = postService;\n    this.socketService = socketService;\n    this.snackbarService = snackbarService;\n    this.fabricUtils = fabricUtils;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.user = data.user;\n    this.board = data.board;\n    this.boardType = data.board.type;\n    this.editingPost = data.editingPost;\n    this.tagRequired = data?.tagRequired ?? false;\n    if (this.editingPost) {\n      this.contentType = ContentType.MULTIPLE_CHOICE;\n      this.title = this.editingPost.title;\n      this.multipleChoiceOptions = this.editingPost.multipleChoice ? this.editingPost.multipleChoice : [];\n      this.tags = this.editingPost.tags;\n      this.correctMultipleChoiceSelected = true;\n    } else {\n      this.title = localStorage.getItem('post_create_title') ?? '';\n      this.message = localStorage.getItem('post_create_message') ?? '';\n    }\n    this.tagOptions = data.board.tags.filter(n => !this.tags.map(b => b.name).includes(n.name));\n  }\n  addTag(event, tagOption) {\n    event.stopPropagation();\n    this.tags.push(tagOption);\n    this.tagOptions = this.tagOptions.filter(tag => tag != tagOption);\n  }\n  removeTag(tag) {\n    const index = this.tags.indexOf(tag);\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n    this.tagOptions.push(tag);\n  }\n  addMultipleChoiceButton() {\n    this.multipleChoiceOptions.push({\n      optionTitle: this.newMultipleChoiceOptionTest,\n      correct: false,\n      formula: false\n    });\n    this.newMultipleChoiceOptionTest = '';\n  }\n  removeMultipleChoiceOption(event, option) {\n    event.stopPropagation();\n    const index = this.multipleChoiceOptions.indexOf(option);\n    if (index >= 0) {\n      if (this.multipleChoiceOptions[index].correct) this.correctMultipleChoiceSelected = false;\n      this.multipleChoiceOptions.splice(index, 1);\n    }\n  }\n  multipleChoiceAnswer(event, option) {\n    event.stopPropagation();\n    this.correctMultipleChoiceSelected = true;\n    const index = this.multipleChoiceOptions.indexOf(option);\n    if (index >= 0) {\n      this.multipleChoiceOptions[index].correct = true;\n      for (let i = 0; i < this.multipleChoiceOptions.length; i++) {\n        if (i != index) this.multipleChoiceOptions[i].correct = false;\n      }\n    }\n  }\n  disabled() {\n    if (this.editingPost) {\n      return !this.titleControl.valid || !this.msgControl.valid || !(this.multipleChoiceOptions.length >= 2) || !this.correctMultipleChoiceSelected || !this.questionPromptControl.valid;\n    } else if (this.contentType == ContentType.MULTIPLE_CHOICE) {\n      return !this.titleControl.valid || !this.message || !(this.multipleChoiceOptions.length >= 2) || !this.correctMultipleChoiceSelected || !this.questionPromptControl.valid;\n    } else if (this.boardType === BoardType.QUESTION_AUTHORING && this.contentType == ContentType.OPEN_RESPONSE_MESSAGE) {\n      return !this.titleControl.valid || !this.questionPromptControl.valid;\n    } else {\n      return !this.titleControl.valid || !this.msgControl.valid;\n    }\n  }\n  getBoardPost() {\n    const containsAttentionTag = this.tags.find(tag => tag.name == NEEDS_ATTENTION_TAG.name);\n    const displayAttributes = {\n      position: {\n        left: this.data.spawnPosition.left,\n        top: this.data.spawnPosition.top\n      },\n      lock: !this.board.permissions.allowStudentMoveAny,\n      borderColor: containsAttentionTag ? NEEDS_ATTENTION_TAG.color : undefined,\n      borderWidth: containsAttentionTag ? POST_TAGGED_BORDER_THICKNESS : undefined,\n      fillColor: this.defaultPostFill()\n    };\n    return {\n      postID: generateUniqueID(),\n      userID: this.user.userID,\n      boardID: this.board.boardID,\n      type: PostType.BOARD,\n      contentType: this.contentType,\n      multipleChoice: this.multipleChoiceOptions,\n      title: this.title,\n      author: this.user.username,\n      desc: this.message,\n      tags: this.tags,\n      displayAttributes: displayAttributes\n    };\n  }\n  getBucketPost() {\n    return {\n      postID: generateUniqueID(),\n      userID: this.user.userID,\n      boardID: this.board.boardID,\n      author: this.user.username,\n      type: PostType.BUCKET,\n      contentType: this.contentType,\n      multipleChoice: this.multipleChoiceOptions,\n      title: this.title,\n      desc: this.message,\n      tags: this.tags,\n      displayAttributes: {\n        fillColor: this.defaultPostFill()\n      }\n    };\n  }\n  getListPost() {\n    return {\n      postID: generateUniqueID(),\n      userID: this.user.userID,\n      boardID: this.board.boardID,\n      author: this.user.username,\n      type: PostType.LIST,\n      contentType: this.contentType,\n      multipleChoice: this.multipleChoiceOptions,\n      title: this.title,\n      desc: this.message,\n      tags: this.tags,\n      displayAttributes: {\n        fillColor: this.defaultPostFill()\n      }\n    };\n  }\n  getPartialPost() {\n    return {\n      postID: generateUniqueID(),\n      userID: this.user.userID,\n      author: this.user.username,\n      contentType: this.contentType,\n      multipleChoice: this.multipleChoiceOptions,\n      title: this.title,\n      desc: this.message,\n      tags: this.tags,\n      displayAttributes: {\n        fillColor: this.defaultPostFill()\n      }\n    };\n  }\n  addPost() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const post = _this.getBoardPost();\n      yield _this.canvasService.createPost(post);\n      return post;\n    })();\n  }\n  addBucketPost() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const bucketID = _this2.data.bucket.bucketID;\n      const post = _this2.getBucketPost();\n      return yield _this2.canvasService.createBucketPost(bucketID, post);\n    })();\n  }\n  addListPost() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const post = _this3.getListPost();\n      return yield _this3.canvasService.createListPost(post);\n    })();\n  }\n  handlePersonalBoardCopy() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const project = yield _this4.projectService.get(_this4.board.projectID);\n        const boards = yield _this4.boardService.getAllPersonal(_this4.board.projectID);\n        for (const board of boards) {\n          if (!project.teacherIDs.includes(board.ownerID) || board.ownerID === _this4.user.userID) {\n            let post;\n            if (_this4.data.type == PostType.BUCKET && _this4.data.bucket) post = _this4.getBucketPost();else if (_this4.data.type == PostType.LIST) post = _this4.getListPost();else post = _this4.getBoardPost();\n            post.boardID = board.boardID;\n            const newPost = yield _this4.postService.create(post);\n          }\n        }\n        _this4.snackbarService.queueSnackbar('Successfully copied post to all student personal boards.');\n      } catch (error) {\n        _this4.snackbarService.queueSnackbar('Unable to copy posts. Please refresh and try again!');\n      } finally {\n        _this4.dialogRef.close();\n      }\n    })();\n  }\n  updateMultipleChoicePost() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (_this5.editingPost) {\n        const update = {\n          postID: _this5.editingPost.postID,\n          title: _this5.title,\n          multipleChoice: _this5.multipleChoiceOptions,\n          tags: _this5.tags\n        };\n        if (_this5.data.onComplete) {\n          _this5.data.onComplete(update);\n        }\n        _this5.dialogRef.close();\n      }\n    })();\n  }\n  handleDialogSubmit() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      _this6.creationInProgress = true;\n      let post;\n      if (_this6.data?.disableCreation) {\n        const _post = _this6.getPartialPost();\n        if (_this6.data.onComplete) {\n          _this6.data.onComplete(_post);\n        }\n        _this6.dialogRef.close();\n        return;\n      }\n      localStorage.setItem('post_create_title', _this6.title);\n      localStorage.setItem('post_create_message', _this6.message);\n      try {\n        if (_this6.data.type == PostType.BUCKET && _this6.data.bucket) {\n          post = yield _this6.addBucketPost();\n        } else if (_this6.data.type == PostType.LIST) {\n          post = yield _this6.addListPost();\n        } else {\n          post = yield _this6.addPost();\n        }\n        localStorage.removeItem('post_create_title');\n        localStorage.removeItem('post_create_message');\n        if (_this6.data.onComplete) {\n          _this6.data.onComplete(post);\n        }\n        _this6.creationInProgress = false;\n      } catch (e) {\n        _this6.snackbarService.queueSnackbar('Unable to create post. Please refresh and try again!');\n      } finally {\n        _this6.dialogRef.close();\n      }\n    })();\n  }\n  defaultPostFill() {\n    return this.userService.user?.role === Role.TEACHER ? TEACHER_POST_COLOR : STUDENT_POST_COLOR;\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  static ɵfac = function AddPostComponent_Factory(t) {\n    return new (t || AddPostComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.CanvasService), i0.ɵɵdirectiveInject(i3.BoardService), i0.ɵɵdirectiveInject(i4.ProjectService), i0.ɵɵdirectiveInject(i5.PostService), i0.ɵɵdirectiveInject(i6.SocketService), i0.ɵɵdirectiveInject(i7.SnackbarService), i0.ɵɵdirectiveInject(i8.FabricUtils), i0.ɵɵdirectiveInject(i9.MatLegacyDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddPostComponent,\n    selectors: [[\"app-dialog\"]],\n    decls: 21,\n    vars: 16,\n    consts: [[\"mat-dialog-title\", \"\", 4, \"ngIf\"], [\"mat-dialog-content\", \"\"], [2, \"margin-bottom\", \"10px\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"appearance\", \"fill\", 2, \"width\", \"100%\"], [\"name\", \"title\", \"matInput\", \"\", \"autocomplete\", \"off\", 3, \"appAutofocus\", \"formControl\", \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"style\", \"position: relative\", 4, \"ngIf\"], [\"class\", \"mat-error\", 4, \"ngIf\"], [\"class\", \"tag-form\", \"appearance\", \"standard\", 4, \"ngIf\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"type\", \"submit\", \"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"spinner\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"submit\", \"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-dialog-title\", \"\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"OPEN_RESPONSE_MESSAGE\", 2, \"margin-left\", \"10px\"], [\"value\", \"MULTIPLE_CHOICE\", 2, \"margin-left\", \"10px\"], [\"matInput\", \"\", \"rows\", \"5\", \"cols\", \"40\", 3, \"formControl\", \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"], [2, \"position\", \"relative\"], [\"name\", \"message\", \"matInput\", \"\", 3, \"formControl\", \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"], [2, \"display\", \"flex\", \"text-align\", \"center\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-mini-fab\", \"\", \"style\", \"margin: 0 10px\", \"color\", \"accent\", \"matTooltip\", \"Add Multiple Choice Option\", \"matTooltipPosition\", \"before\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"style\", \"\\n          display: flex;\\n          margin: 10px;\\n          padding: 10px;\\n          justify-content: space-between;\\n        \", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-error\"], [\"mat-mini-fab\", \"\", \"color\", \"accent\", \"matTooltip\", \"Add Multiple Choice Option\", \"matTooltipPosition\", \"before\", 2, \"margin\", \"0 10px\", 3, \"disabled\", \"click\"], [2, \"display\", \"flex\", \"margin\", \"10px\", \"padding\", \"10px\", \"justify-content\", \"space-between\", 3, \"ngStyle\"], [2, \"font-size\", \"small\", \"margin\", \"auto 0\"], [\"mat-mini-fab\", \"\", \"color\", \"accent\", \"matTooltip\", \"Delete\", \"matTooltipPosition\", \"before\", 2, \"margin\", \"0 10px\", 3, \"click\"], [1, \"editMultipleChoiceOptions\"], [\"mat-mini-fab\", \"\", \"color\", \"accent\", \"matTooltip\", \"Correct Option\", \"matTooltipPosition\", \"before\", 2, \"margin\", \"0 10px\", 3, \"click\"], [\"appearance\", \"standard\", 1, \"tag-form\"], [\"chipList\", \"\"], [2, \"background-color\", \"#78c2c0\", 3, \"matMenuTriggerFor\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"menu1\", \"matMenu\"], [\"mat-menu-item\", \"\", 4, \"ngIf\"], [\"mat-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngStyle\"], [1, \"cancel\", 3, \"click\"], [\"mat-menu-item\", \"\"], [\"mat-menu-item\", \"\", 3, \"click\"], [\"type\", \"submit\", \"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"disabled\", \"click\"]],\n    template: function AddPostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AddPostComponent_h1_0_Template, 2, 0, \"h1\", 0);\n        i0.ɵɵtemplate(1, AddPostComponent_h1_1_Template, 2, 0, \"h1\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AddPostComponent_mat_radio_group_4_Template, 5, 1, \"mat-radio-group\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\", 4)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AddPostComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.title = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, AddPostComponent_mat_error_9_Template, 4, 0, \"mat-error\", 6);\n        i0.ɵɵtemplate(10, AddPostComponent_mat_error_10_Template, 4, 0, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, AddPostComponent_div_11_Template, 8, 8, \"div\", 6);\n        i0.ɵɵtemplate(12, AddPostComponent_div_12_Template, 18, 10, \"div\", 7);\n        i0.ɵɵtemplate(13, AddPostComponent_mat_hint_13_Template, 4, 0, \"mat-hint\", 8);\n        i0.ɵɵtemplate(14, AddPostComponent_mat_form_field_14_Template, 12, 4, \"mat-form-field\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10)(16, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AddPostComponent_Template_button_click_16_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵtext(17, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, AddPostComponent_button_18_Template, 2, 3, \"button\", 12);\n        i0.ɵɵtemplate(19, AddPostComponent_button_19_Template, 2, 1, \"button\", 13);\n        i0.ɵɵtemplate(20, AddPostComponent_button_20_Template, 2, 1, \"button\", 13);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.editingPost);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editingPost);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.boardType === \"QUESTION_AUTHORING\" && !ctx.editingPost);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"appAutofocus\", true)(\"formControl\", ctx.titleControl)(\"errorStateMatcher\", ctx.matcher)(\"ngModel\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.title && ctx.title.length > 50);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.contentType === \"OPEN_RESPONSE_MESSAGE\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.contentType === \"MULTIPLE_CHOICE\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.tagRequired && ctx.tags.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.editingPost);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.editingPost);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.editingPost && ctx.user.role === \"TEACHER\" && ctx.board.scope === \"PROJECT_PERSONAL\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editingPost);\n      }\n    },\n    dependencies: [i10.NgForOf, i10.NgIf, i10.NgStyle, i11.DefaultValueAccessor, i11.NgControlStatus, i11.NgModel, i11.FormControlDirective, i12.MatLegacyButton, i13.MatIcon, i9.MatLegacyDialogTitle, i9.MatLegacyDialogContent, i9.MatLegacyDialogActions, i14.MatLegacyError, i14.MatLegacyFormField, i14.MatLegacyHint, i14.MatLegacyLabel, i15.MatLegacyInput, i16.MatLegacyCard, i16.MatLegacyCardTitle, i17.MatLegacyTooltip, i18.MatLegacyMenu, i18.MatLegacyMenuItem, i18.MatLegacyMenuTrigger, i19.MatLegacyChipList, i19.MatLegacyChip, i20.MatLegacyRadioGroup, i20.MatLegacyRadioButton, i21.AutofocusDirective],\n    styles: [\".tag-form[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.cancel[_ngcontent-%COMP%], .correct[_ngcontent-%COMP%] {\\n  padding-left: 10px;\\n  width: 12px;\\n  height: 15px;\\n  font-size: medium;\\n}\\n\\n.addMultipleChoiceButton[_ngcontent-%COMP%] {\\n  float: right;\\n  position: absolute;\\n  right: 0;\\n  margin: 10px 10px;\\n}\\n\\n@keyframes _ngcontent-%COMP%_spinner {\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n.spinner[_ngcontent-%COMP%]:before {\\n  content: \\\"\\\";\\n  box-sizing: border-box;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  width: 20px;\\n  height: 20px;\\n  margin-top: -10px;\\n  margin-left: -10px;\\n  border-radius: 50%;\\n  border: 2px solid #ffffff;\\n  border-top-color: #000000;\\n  animation: _ngcontent-%COMP%_spinner 0.8s linear infinite;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtcG9zdC1tb2RhbC9hZGQtcG9zdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRTtJQUFJLHlCQUFBO0VBRUo7QUFDRjtBQUFBO0VBQ0UsV0FBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSx5QkFBQTtFQUNBLHVDQUFBO0FBRUYiLCJzb3VyY2VzQ29udGVudCI6WyIudGFnLWZvcm0ge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNhbmNlbCwgLmNvcnJlY3Qge1xuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gIHdpZHRoOiAxMnB4O1xuICBoZWlnaHQ6IDE1cHg7XG4gIGZvbnQtc2l6ZTogbWVkaXVtO1xufVxuXG4uYWRkTXVsdGlwbGVDaG9pY2VCdXR0b257XG4gIGZsb2F0OiByaWdodDtcbiAgcG9zaXRpb246IGFic29sdXRlOyBcbiAgcmlnaHQ6IDA7IFxuICBtYXJnaW46IDEwcHggMTBweDtcbn1cblxuQGtleWZyYW1lcyBzcGlubmVyIHtcbiAgdG8ge3RyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7fVxufVxuIFxuLnNwaW5uZXI6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgbWFyZ2luLXRvcDogLTEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBib3JkZXI6IDJweCBzb2xpZCAjZmZmZmZmO1xuICBib3JkZXItdG9wLWNvbG9yOiAjMDAwMDAwO1xuICBhbmltYXRpb246IHNwaW5uZXIgLjhzIGxpbmVhciBpbmZpbml0ZTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["UntypedFormControl","Validators","MAT_LEGACY_DIALOG_DATA","MAT_DIALOG_DATA","BoardType","PostType","ContentType","Role","NEEDS_ATTENTION_TAG","POST_TAGGED_BORDER_THICKNESS","STUDENT_POST_COLOR","TEACHER_POST_COLOR","MyErrorStateMatcher","generateUniqueID","i0","AddPostComponent","userService","canvasService","boardService","projectService","postService","socketService","snackbarService","fabricUtils","dialogRef","data","user","board","boardType","newMultipleChoiceOptionTest","multipleChoiceOptions","correctMultipleChoiceSelected","editingPost","contentType","OPEN_RESPONSE_MESSAGE","creationInProgress","title","message","tags","tagOptions","titleControl","required","maxLength","msgControl","questionPromptControl","tagRequired","matcher","constructor","type","MULTIPLE_CHOICE","multipleChoice","localStorage","getItem","filter","n","map","b","name","includes","addTag","event","tagOption","stopPropagation","push","tag","removeTag","index","indexOf","splice","addMultipleChoiceButton","optionTitle","correct","formula","removeMultipleChoiceOption","option","multipleChoiceAnswer","i","length","disabled","valid","QUESTION_AUTHORING","getBoardPost","containsAttentionTag","find","displayAttributes","position","left","spawnPosition","top","lock","permissions","allowStudentMoveAny","borderColor","color","undefined","borderWidth","fillColor","defaultPostFill","postID","userID","boardID","BOARD","author","username","desc","getBucketPost","BUCKET","getListPost","LIST","getPartialPost","addPost","post","createPost","addBucketPost","bucketID","bucket","createBucketPost","addListPost","createListPost","handlePersonalBoardCopy","project","get","projectID","boards","getAllPersonal","teacherIDs","ownerID","newPost","create","queueSnackbar","error","close","updateMultipleChoicePost","update","onComplete","handleDialogSubmit","disableCreation","_post","setItem","removeItem","e","role","TEACHER","onNoClick","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/add-post-modal/add-post.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/add-post-modal/add-post.component.html"],"sourcesContent":["import { T } from '@angular/cdk/keycodes';\nimport { Component, Inject } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\nimport { Board, BoardType } from 'src/app/models/board';\nimport Bucket from 'src/app/models/bucket';\nimport Post, {\n  DisplayAttributes,\n  PostType,\n  ContentType,\n  MultipleChoiceOptions,\n} from 'src/app/models/post';\nimport { Tag } from 'src/app/models/tag';\nimport User, { Role } from 'src/app/models/user';\nimport { CanvasService } from 'src/app/services/canvas.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { BoardService } from 'src/app/services/board.service';\nimport { PostService } from 'src/app/services/post.service';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { SocketService } from 'src/app/services/socket.service';\nimport {\n  NEEDS_ATTENTION_TAG,\n  POST_TAGGED_BORDER_THICKNESS,\n  STUDENT_POST_COLOR,\n  TEACHER_POST_COLOR,\n  SocketEvent,\n} from 'src/app/utils/constants';\nimport { MyErrorStateMatcher } from 'src/app/utils/ErrorStateMatcher';\nimport { FabricUtils } from 'src/app/utils/FabricUtils';\nimport { generateUniqueID } from 'src/app/utils/Utils';\n\nexport interface AddPostDialog {\n  type: PostType;\n  user: User;\n  board: Board;\n  bucket?: Bucket;\n  spawnPosition: { left: number; top: number };\n  onComplete?: (post: any) => any;\n  editingPost?: Post | undefined;\n  disableCreation?: boolean;\n  tagRequired?: boolean;\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.scss'],\n})\nexport class AddPostComponent {\n  user: User;\n  board: Board;\n  boardType: BoardType;\n  newMultipleChoiceOptionTest = '';\n  multipleChoiceOptions: MultipleChoiceOptions[] = [];\n  correctMultipleChoiceSelected = false;\n  editingPost: Post | undefined;\n  contentType: ContentType = ContentType.OPEN_RESPONSE_MESSAGE;\n  creationInProgress = false;\n\n  title = '';\n  message = '';\n\n  tags: Tag[] = [];\n  tagOptions: Tag[] = [];\n\n  titleControl = new UntypedFormControl('', [\n    Validators.required,\n    Validators.maxLength(50),\n  ]);\n  msgControl = new UntypedFormControl('', [Validators.maxLength(2000)]);\n  questionPromptControl = new UntypedFormControl('', [\n    Validators.required,\n    Validators.maxLength(2000),\n  ]);\n\n  tagRequired: boolean = false;\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    public userService: UserService,\n    public canvasService: CanvasService,\n    public boardService: BoardService,\n    public projectService: ProjectService,\n    public postService: PostService,\n    public socketService: SocketService,\n    public snackbarService: SnackbarService,\n    public fabricUtils: FabricUtils,\n    public dialogRef: MatDialogRef<AddPostComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AddPostDialog\n  ) {\n    this.user = data.user;\n    this.board = data.board;\n    this.boardType = data.board.type;\n    this.editingPost = data.editingPost;\n    this.tagRequired = data?.tagRequired ?? false;\n    if (this.editingPost) {\n      this.contentType = ContentType.MULTIPLE_CHOICE;\n      this.title = this.editingPost.title;\n      this.multipleChoiceOptions = this.editingPost.multipleChoice\n        ? this.editingPost.multipleChoice\n        : [];\n      this.tags = this.editingPost.tags;\n      this.correctMultipleChoiceSelected = true;\n    } else {\n      this.title = localStorage.getItem('post_create_title') ?? '';\n      this.message = localStorage.getItem('post_create_message') ?? '';\n    }\n    this.tagOptions = data.board.tags.filter(\n      (n) => !this.tags.map((b) => b.name).includes(n.name)\n    );\n  }\n\n  addTag(event, tagOption): void {\n    event.stopPropagation();\n    this.tags.push(tagOption);\n    this.tagOptions = this.tagOptions.filter((tag) => tag != tagOption);\n  }\n\n  removeTag(tag) {\n    const index = this.tags.indexOf(tag);\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n\n    this.tagOptions.push(tag);\n  }\n\n  addMultipleChoiceButton() {\n    this.multipleChoiceOptions.push({\n      optionTitle: this.newMultipleChoiceOptionTest,\n      correct: false,\n      formula: false,\n    });\n    this.newMultipleChoiceOptionTest = '';\n  }\n\n  removeMultipleChoiceOption(event, option) {\n    event.stopPropagation();\n    const index = this.multipleChoiceOptions.indexOf(option);\n\n    if (index >= 0) {\n      if (this.multipleChoiceOptions[index].correct)\n        this.correctMultipleChoiceSelected = false;\n      this.multipleChoiceOptions.splice(index, 1);\n    }\n  }\n\n  multipleChoiceAnswer(event, option) {\n    event.stopPropagation();\n    this.correctMultipleChoiceSelected = true;\n    const index = this.multipleChoiceOptions.indexOf(option);\n    if (index >= 0) {\n      this.multipleChoiceOptions[index].correct = true;\n      for (let i = 0; i < this.multipleChoiceOptions.length; i++) {\n        if (i != index) this.multipleChoiceOptions[i].correct = false;\n      }\n    }\n  }\n  disabled() {\n    if (this.editingPost) {\n      return (\n        !this.titleControl.valid ||\n        !this.msgControl.valid ||\n        !(this.multipleChoiceOptions.length >= 2) ||\n        !this.correctMultipleChoiceSelected ||\n        !this.questionPromptControl.valid\n      );\n    } else if (this.contentType == ContentType.MULTIPLE_CHOICE) {\n      return (\n        !this.titleControl.valid ||\n        !this.message ||\n        !(this.multipleChoiceOptions.length >= 2) ||\n        !this.correctMultipleChoiceSelected ||\n        !this.questionPromptControl.valid\n      );\n    } else if (\n      this.boardType === BoardType.QUESTION_AUTHORING &&\n      this.contentType == ContentType.OPEN_RESPONSE_MESSAGE\n    ) {\n      return !this.titleControl.valid || !this.questionPromptControl.valid;\n    } else {\n      return !this.titleControl.valid || !this.msgControl.valid;\n    }\n  }\n\n  getBoardPost(): Post {\n    const containsAttentionTag = this.tags.find(\n      (tag) => tag.name == NEEDS_ATTENTION_TAG.name\n    );\n\n    const displayAttributes: DisplayAttributes = {\n      position: {\n        left: this.data.spawnPosition.left,\n        top: this.data.spawnPosition.top,\n      },\n      lock: !this.board.permissions.allowStudentMoveAny,\n      borderColor: containsAttentionTag ? NEEDS_ATTENTION_TAG.color : undefined,\n      borderWidth: containsAttentionTag\n        ? POST_TAGGED_BORDER_THICKNESS\n        : undefined,\n      fillColor: this.defaultPostFill(),\n    };\n\n    return {\n      postID: generateUniqueID(),\n      userID: this.user.userID,\n      boardID: this.board.boardID,\n      type: PostType.BOARD,\n      contentType: this.contentType,\n      multipleChoice: this.multipleChoiceOptions,\n      title: this.title,\n      author: this.user.username,\n      desc: this.message,\n      tags: this.tags,\n      displayAttributes: displayAttributes,\n    };\n  }\n\n  getBucketPost(): Post {\n    return {\n      postID: generateUniqueID(),\n      userID: this.user.userID,\n      boardID: this.board.boardID,\n      author: this.user.username,\n      type: PostType.BUCKET,\n      contentType: this.contentType,\n      multipleChoice: this.multipleChoiceOptions,\n      title: this.title,\n      desc: this.message,\n      tags: this.tags,\n      displayAttributes: { fillColor: this.defaultPostFill() },\n    };\n  }\n\n  getListPost(): Post {\n    return {\n      postID: generateUniqueID(),\n      userID: this.user.userID,\n      boardID: this.board.boardID,\n      author: this.user.username,\n      type: PostType.LIST,\n      contentType: this.contentType,\n      multipleChoice: this.multipleChoiceOptions,\n      title: this.title,\n      desc: this.message,\n      tags: this.tags,\n      displayAttributes: { fillColor: this.defaultPostFill() },\n    };\n  }\n\n  getPartialPost(): Partial<Post> {\n    return {\n      postID: generateUniqueID(),\n      userID: this.user.userID,\n      author: this.user.username,\n      contentType: this.contentType,\n      multipleChoice: this.multipleChoiceOptions,\n      title: this.title,\n      desc: this.message,\n      tags: this.tags,\n      displayAttributes: { fillColor: this.defaultPostFill() },\n    };\n  }\n\n  async addPost() {\n    const post = this.getBoardPost();\n    await this.canvasService.createPost(post);\n    return post;\n  }\n\n  async addBucketPost() {\n    const bucketID: string = this.data.bucket!.bucketID;\n    const post: Post = this.getBucketPost();\n    return await this.canvasService.createBucketPost(bucketID, post);\n  }\n\n  async addListPost() {\n    const post: Post = this.getListPost();\n    return await this.canvasService.createListPost(post);\n  }\n\n  async handlePersonalBoardCopy() {\n    try {\n      const project = await this.projectService.get(this.board.projectID);\n      const boards = await this.boardService.getAllPersonal(\n        this.board.projectID\n      );\n\n      for (const board of boards) {\n        if (\n          !project.teacherIDs.includes(board.ownerID) ||\n          board.ownerID === this.user.userID\n        ) {\n          let post;\n          if (this.data.type == PostType.BUCKET && this.data.bucket)\n            post = this.getBucketPost();\n          else if (this.data.type == PostType.LIST) post = this.getListPost();\n          else post = this.getBoardPost();\n\n          post.boardID = board.boardID;\n          const newPost = await this.postService.create(post);\n        }\n      }\n      this.snackbarService.queueSnackbar(\n        'Successfully copied post to all student personal boards.'\n      );\n    } catch (error) {\n      this.snackbarService.queueSnackbar(\n        'Unable to copy posts. Please refresh and try again!'\n      );\n    } finally {\n      this.dialogRef.close();\n    }\n  }\n\n  async updateMultipleChoicePost() {\n    if (this.editingPost) {\n      const update: Partial<Post> = {\n        postID: this.editingPost.postID,\n        title: this.title,\n        multipleChoice: this.multipleChoiceOptions,\n        tags: this.tags,\n      };\n      if (this.data.onComplete) {\n        this.data.onComplete(update);\n      }\n      this.dialogRef.close();\n    }\n  }\n\n  async handleDialogSubmit() {\n    this.creationInProgress = true;\n    let post: Post;\n    if (this.data?.disableCreation) {\n      const _post = this.getPartialPost();\n      if (this.data.onComplete) {\n        this.data.onComplete(_post);\n      }\n      this.dialogRef.close();\n      return;\n    }\n\n    localStorage.setItem('post_create_title', this.title);\n    localStorage.setItem('post_create_message', this.message);\n    try {\n      if (this.data.type == PostType.BUCKET && this.data.bucket) {\n        post = await this.addBucketPost();\n      } else if (this.data.type == PostType.LIST) {\n        post = await this.addListPost();\n      } else {\n        post = await this.addPost();\n      }\n\n      localStorage.removeItem('post_create_title');\n      localStorage.removeItem('post_create_message');\n      if (this.data.onComplete) {\n        this.data.onComplete(post);\n      }\n      this.creationInProgress = false;\n    } catch (e) {\n      this.snackbarService.queueSnackbar(\n        'Unable to create post. Please refresh and try again!'\n      );\n    } finally {\n      this.dialogRef.close();\n    }\n  }\n\n  defaultPostFill() {\n    return this.userService.user?.role === Role.TEACHER\n      ? TEACHER_POST_COLOR\n      : STUDENT_POST_COLOR;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title *ngIf=\"!editingPost\">Add Post</h1>\n<h1 mat-dialog-title *ngIf=\"editingPost\">Update Post</h1>\n<div mat-dialog-content>\n  <div style=\"margin-bottom: 10px\">\n    <mat-radio-group\n      *ngIf=\"boardType === 'QUESTION_AUTHORING' && !editingPost\"\n      [(ngModel)]=\"contentType\"\n    >\n      <mat-radio-button style=\"margin-left: 10px\" value=\"OPEN_RESPONSE_MESSAGE\">\n        Open Response\n      </mat-radio-button>\n      <mat-radio-button style=\"margin-left: 10px\" value=\"MULTIPLE_CHOICE\">\n        Multiple Choice\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n  <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n    <mat-label>Title</mat-label>\n    <input\n      name=\"title\"\n      [appAutofocus]=\"true\"\n      [formControl]=\"titleControl\"\n      [errorStateMatcher]=\"matcher\"\n      matInput\n      autocomplete=\"off\"\n      [(ngModel)]=\"title\"\n    />\n    <mat-error *ngIf=\"!title\"> Title is <strong>required</strong> </mat-error>\n    <mat-error *ngIf=\"title && title.length > 50\">\n      Title is <strong>too long!</strong>\n    </mat-error>\n  </mat-form-field>\n\n  <div *ngIf=\"contentType === 'OPEN_RESPONSE_MESSAGE'\">\n    <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n      <mat-label *ngIf=\"boardType === 'QUESTION_AUTHORING'\">\n        Add open response question prompt\n      </mat-label>\n      <mat-label *ngIf=\"boardType === 'BRAINSTORMING'\"> Message </mat-label>\n      <textarea\n        [formControl]=\"\n          boardType === 'BRAINSTORMING' ? msgControl : questionPromptControl\n        \"\n        [errorStateMatcher]=\"matcher\"\n        matInput\n        rows=\"5\"\n        cols=\"40\"\n        [(ngModel)]=\"message\"\n      ></textarea>\n      <mat-error *ngIf=\"boardType === 'QUESTION_AUTHORING' && !message\">\n        Question Prompt is <strong>required</strong>\n      </mat-error>\n      <mat-error\n        *ngIf=\"\n          boardType === 'BRAINSTORMING' && message && message.length > 2000\n        \"\n      >\n        Message is <strong>too long!</strong>\n      </mat-error>\n      <mat-error\n        *ngIf=\"\n          boardType === 'QUESTION_AUTHORING' && message && message.length > 2000\n        \"\n      >\n        Question Prompt is <strong>too long!</strong>\n      </mat-error>\n    </mat-form-field>\n  </div>\n\n  <div *ngIf=\"contentType === 'MULTIPLE_CHOICE'\" style=\"position: relative\">\n    <div>\n      <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n        <mat-label> Multiple Choice Question Prompt </mat-label>\n        <input\n          name=\"message\"\n          [formControl]=\"questionPromptControl\"\n          [errorStateMatcher]=\"matcher\"\n          matInput\n          [(ngModel)]=\"message\"\n        />\n        <mat-error *ngIf=\"!message\">\n          Question Prompt is <strong>required</strong>\n        </mat-error>\n        <mat-error *ngIf=\"message && message.length > 2000\">\n          Prompt is <strong>too long!</strong>\n        </mat-error>\n      </mat-form-field>\n      <div style=\"display: flex; text-align: center\">\n        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n          <mat-label>New Multiple Choice Option</mat-label>\n          <input matInput [(ngModel)]=\"newMultipleChoiceOptionTest\" />\n          <mat-hint class=\"mat-error\" *ngIf=\"multipleChoiceOptions.length < 2\">\n            Multiple Choice Options required.\n          </mat-hint>\n        </mat-form-field>\n        <button\n          mat-mini-fab\n          *ngIf=\"multipleChoiceOptions.length < 6\"\n          style=\"margin: 0 10px\"\n          color=\"accent\"\n          [disabled]=\"\n            !newMultipleChoiceOptionTest || multipleChoiceOptions.length > 6\n          \"\n          matTooltip=\"Add Multiple Choice Option\"\n          matTooltipPosition=\"before\"\n          (click)=\"addMultipleChoiceButton()\"\n        >\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div>\n      <mat-hint\n        class=\"mat-error\"\n        *ngIf=\"\n          multipleChoiceOptions.length > 1 && !correctMultipleChoiceSelected\n        \"\n      >\n        Select correct multiple choice option.\n      </mat-hint>\n      <mat-card\n        *ngFor=\"let multipleChoice of multipleChoiceOptions\"\n        style=\"\n          display: flex;\n          margin: 10px;\n          padding: 10px;\n          justify-content: space-between;\n        \"\n        [ngStyle]=\"{\n          'background-color': multipleChoice.correct ? '#39e75f' : 'white'\n        }\"\n      >\n        <mat-card-title style=\"font-size: small; margin: auto 0\">\n          {{ multipleChoice.optionTitle }}\n        </mat-card-title>\n        <div>\n          <button\n            mat-mini-fab\n            style=\"margin: 0 10px\"\n            color=\"accent\"\n            matTooltip=\"Delete\"\n            matTooltipPosition=\"before\"\n            (click)=\"removeMultipleChoiceOption($event, multipleChoice)\"\n          >\n            <mat-icon class=\"editMultipleChoiceOptions\"> delete </mat-icon>\n          </button>\n          <button\n            mat-mini-fab\n            style=\"margin: 0 10px\"\n            color=\"accent\"\n            matTooltip=\"Correct Option\"\n            matTooltipPosition=\"before\"\n            (click)=\"multipleChoiceAnswer($event, multipleChoice)\"\n          >\n            <mat-icon class=\"editMultipleChoiceOptions\">\n              check_circle_outline\n            </mat-icon>\n          </button>\n        </div>\n      </mat-card>\n    </div>\n  </div>\n  <mat-hint class=\"mat-error\" *ngIf=\"tagRequired && tags.length === 0\"> One or more tags <strong>required</strong> </mat-hint>\n  <mat-form-field *ngIf=\"!editingPost\" class=\"tag-form\" appearance=\"standard\">\n    <mat-chip-list #chipList>\n      <mat-chip style=\"background-color: #78c2c0\" [matMenuTriggerFor]=\"menu1\">\n        Add Tag\n        <mat-icon>add</mat-icon>\n      </mat-chip>\n      <mat-chip\n        [ngStyle]=\"{ 'background-color': tag.color }\"\n        *ngFor=\"let tag of tags\"\n      >\n        {{ tag.name }}\n        <mat-icon class=\"cancel\" (click)=\"removeTag(tag)\">cancel</mat-icon>\n      </mat-chip>\n      <mat-menu #menu1=\"matMenu\">\n        <div mat-menu-item *ngIf=\"tagOptions && tagOptions.length === 0\">\n          No tags available.\n        </div>\n        <div\n          mat-menu-item\n          (click)=\"addTag($event, tagOption)\"\n          *ngFor=\"let tagOption of tagOptions\"\n        >\n          {{ tagOption.name }}\n        </div>\n      </mat-menu>\n    </mat-chip-list>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\n  <button\n    *ngIf=\"!editingPost\"\n    type=\"submit\"\n    [class.spinner]=\"this.creationInProgress\"\n    [disabled]=\"disabled() || this.creationInProgress || (tagRequired && tags.length === 0)\"\n    mat-button\n    (click)=\"handleDialogSubmit()\"\n    cdkFocusInitial\n  >\n    Add Post\n  </button>\n  <button\n    *ngIf=\"!editingPost && user.role === 'TEACHER' && board.scope === 'PROJECT_PERSONAL'\"\n    type=\"submit\"\n    [disabled]=\"disabled()\"\n    mat-button\n    (click)=\"handlePersonalBoardCopy()\"\n    cdkFocusInitial\n  >\n    Copy to All Students' Personal Boards\n  </button>\n  <button\n    *ngIf=\"editingPost\"\n    type=\"submit\"\n    [disabled]=\"disabled()\"\n    mat-button\n    (click)=\"updateMultipleChoicePost()\"\n    cdkFocusInitial\n  >\n    Update Post\n  </button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}