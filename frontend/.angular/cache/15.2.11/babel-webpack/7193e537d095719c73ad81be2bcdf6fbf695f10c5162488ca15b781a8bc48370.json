{"ast":null,"code":"import * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({\n  passive: false\n});\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n * @deprecated Use `MAT_SLIDER_VALUE_ACCESSOR` from `@angular/material/slider` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_SLIDER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatLegacySlider),\n  multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use `MatSliderChange` from `@angular/material/slider` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySliderChange {}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n * @deprecated Use `MatSlider` from `@angular/material/slider` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySlider extends _MatSliderBase {\n  /** Whether the slider is inverted. */\n  get invert() {\n    return this._invert;\n  }\n  set invert(value) {\n    this._invert = coerceBooleanProperty(value);\n  }\n  /** The maximum value that the slider can have. */\n  get max() {\n    return this._max;\n  }\n  set max(v) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  /** The minimum value that the slider can have. */\n  get min() {\n    return this._min;\n  }\n  set min(v) {\n    this._min = coerceNumberProperty(v, this._min);\n    this._percent = this._calculatePercentage(this._value);\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  /** The values at which the thumb will snap. */\n  get step() {\n    return this._step;\n  }\n  set step(v) {\n    this._step = coerceNumberProperty(v, this._step);\n    if (this._step % 1 !== 0) {\n      this._roundToDecimal = this._step.toString().split('.').pop().length;\n    }\n    // Since this could modify the label, we need to notify the change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Whether or not to show the thumb label. */\n  get thumbLabel() {\n    return this._thumbLabel;\n  }\n  set thumbLabel(value) {\n    this._thumbLabel = coerceBooleanProperty(value);\n  }\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   */\n  get tickInterval() {\n    return this._tickInterval;\n  }\n  set tickInterval(value) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  /** Value of the slider. */\n  get value() {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value;\n  }\n  set value(v) {\n    if (v !== this._value) {\n      let value = coerceNumberProperty(v, 0);\n      // While incrementing by a decimal we can end up with values like 33.300000000000004.\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\n      if (this._roundToDecimal && value !== this.min && value !== this.max) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n      this._value = value;\n      this._percent = this._calculatePercentage(this._value);\n      // Since this also modifies the percentage, we need to let the change detection know.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Whether the slider is vertical. */\n  get vertical() {\n    return this._vertical;\n  }\n  set vertical(value) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  /** The value to be used for display purposes. */\n  get displayValue() {\n    if (this.displayWith) {\n      // Value is never null but since setters and getters cannot have\n      // different types, the value getter is also typed to return null.\n      return this.displayWith(this.value);\n    }\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n    return this.value || 0;\n  }\n  /** set focus to the host element */\n  focus(options) {\n    this._focusHostElement(options);\n  }\n  /** blur the host element */\n  blur() {\n    this._blurHostElement();\n  }\n  /** The percentage of the slider that coincides with the value. */\n  get percent() {\n    return this._clamp(this._percent);\n  }\n  /**\n   * Whether the axis of the slider is inverted.\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n   */\n  _shouldInvertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n  /** Whether the slider is at its minimum value. */\n  _isMinValue() {\n    return this.percent === 0;\n  }\n  /**\n   * The amount of space to leave between the slider thumb and the track fill & track background\n   * elements.\n   */\n  _getThumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue() && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n  /** CSS styles for the track background element. */\n  _getTrackBackgroundStyles() {\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n    };\n  }\n  /** CSS styles for the track fill element. */\n  _getTrackFillStyles() {\n    const percent = this.percent;\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n      // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n      // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n      // the value of the slider is 0, we can easily get into this situation. We force a\n      // recalculation by changing the element's `display` when it goes from 0 to any other value.\n      display: percent === 0 ? 'none' : ''\n    };\n  }\n  /** CSS styles for the ticks container element. */\n  _getTicksContainerStyles() {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    let offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n  /** CSS styles for the ticks element. */\n  _getTicksStyles() {\n    let tickSize = this._tickIntervalPercent * 100;\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let axis = this.vertical ? 'Y' : 'X';\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    let styles = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n    if (this._isMinValue() && this._getThumbGap()) {\n      const shouldInvertAxis = this._shouldInvertAxis();\n      let side;\n      if (this.vertical) {\n        side = shouldInvertAxis ? 'Bottom' : 'Top';\n      } else {\n        side = shouldInvertAxis ? 'Right' : 'Left';\n      }\n      styles[`padding${side}`] = `${this._getThumbGap()}px`;\n    }\n    return styles;\n  }\n  _getThumbContainerStyles() {\n    const shouldInvertAxis = this._shouldInvertAxis();\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n  /**\n   * Whether mouse events should be converted to a slider position by calculating their distance\n   * from the right or bottom edge of the slider as opposed to the top or left.\n   */\n  _shouldInvertMouseCoords() {\n    const shouldInvertAxis = this._shouldInvertAxis();\n    return this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n  }\n  /** The language direction for this slider element. */\n  _getDirection() {\n    return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n  }\n  constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n    super(elementRef);\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._animationMode = _animationMode;\n    this._invert = false;\n    this._max = 100;\n    this._min = 0;\n    this._step = 1;\n    this._thumbLabel = false;\n    this._tickInterval = 0;\n    this._value = null;\n    this._vertical = false;\n    /** Event emitted when the slider value has changed. */\n    this.change = new EventEmitter();\n    /** Event emitted when the slider thumb moves. */\n    this.input = new EventEmitter();\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    this.valueChange = new EventEmitter();\n    /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n    this.onTouched = () => {};\n    this._percent = 0;\n    /**\n     * Whether or not the thumb is sliding and what the user is using to slide it with.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     */\n    this._isSliding = null;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     */\n    this._isActive = false;\n    /** The size of a tick interval as a percentage of the size of the track. */\n    this._tickIntervalPercent = 0;\n    /** The dimensions of the slider. */\n    this._sliderDimensions = null;\n    this._controlValueAccessorChangeFn = () => {};\n    /** Subscription to the Directionality change EventEmitter. */\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /** Called when the user has put their pointer down on the slider. */\n    this._pointerDown = event => {\n      // Don't do anything if the slider is disabled or the\n      // user is using anything other than the main mouse button.\n      if (this.disabled || this._isSliding || !isTouchEvent(event) && event.button !== 0) {\n        return;\n      }\n      this._ngZone.run(() => {\n        this._touchId = isTouchEvent(event) ? getTouchIdForSlider(event, this._elementRef.nativeElement) : undefined;\n        const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n        if (pointerPosition) {\n          const oldValue = this.value;\n          this._isSliding = 'pointer';\n          this._lastPointerEvent = event;\n          this._focusHostElement();\n          this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n          this._bindGlobalEvents(event);\n          this._focusHostElement();\n          this._updateValueFromPosition(pointerPosition);\n          this._valueOnSlideStart = oldValue;\n          // Despite the fact that we explicitly bind active events, in some cases the browser\n          // still dispatches non-cancelable events which cause this call to throw an error.\n          // There doesn't appear to be a good way of avoiding them. See #23820.\n          if (event.cancelable) {\n            event.preventDefault();\n          }\n          // Emit a change and input event if the value changed.\n          if (oldValue != this.value) {\n            this._emitInputEvent();\n          }\n        }\n      });\n    };\n    /**\n     * Called when the user has moved their pointer after\n     * starting to drag. Bound on the document level.\n     */\n    this._pointerMove = event => {\n      if (this._isSliding === 'pointer') {\n        const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n        if (pointerPosition) {\n          // Prevent the slide from selecting anything else.\n          if (event.cancelable) {\n            event.preventDefault();\n          }\n          const oldValue = this.value;\n          this._lastPointerEvent = event;\n          this._updateValueFromPosition(pointerPosition);\n          // Native range elements always emit `input` events when the value changed while sliding.\n          if (oldValue != this.value) {\n            this._emitInputEvent();\n          }\n        }\n      }\n    };\n    /** Called when the user has lifted their pointer. Bound on the document level. */\n    this._pointerUp = event => {\n      if (this._isSliding === 'pointer') {\n        if (!isTouchEvent(event) || typeof this._touchId !== 'number' ||\n        // Note that we use `changedTouches`, rather than `touches` because it\n        // seems like in most cases `touches` is empty for `touchend` events.\n        findMatchingTouch(event.changedTouches, this._touchId)) {\n          if (event.cancelable) {\n            event.preventDefault();\n          }\n          this._removeGlobalEvents();\n          this._isSliding = null;\n          this._touchId = undefined;\n          if (this._valueOnSlideStart != this.value && !this.disabled) {\n            this._emitChangeEvent();\n          }\n          this._valueOnSlideStart = this._lastPointerEvent = null;\n        }\n      }\n    };\n    /** Called when the window has lost focus. */\n    this._windowBlur = () => {\n      // If the window is blurred while dragging we need to stop dragging because the\n      // browser won't dispatch the `mouseup` and `touchend` events anymore.\n      if (this._lastPointerEvent) {\n        this._pointerUp(this._lastPointerEvent);\n      }\n    };\n    this._document = _document;\n    this.tabIndex = parseInt(tabIndex) || 0;\n    _ngZone.runOutsideAngular(() => {\n      const element = elementRef.nativeElement;\n      element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n    });\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      this._isActive = !!origin && origin !== 'keyboard';\n      this._changeDetectorRef.detectChanges();\n    });\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  ngOnDestroy() {\n    const element = this._elementRef.nativeElement;\n    element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n    element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n    this._lastPointerEvent = null;\n    this._removeGlobalEvents();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._dirChangeSubscription.unsubscribe();\n  }\n  _onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n  _onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n  _onBlur() {\n    this.onTouched();\n  }\n  _onKeydown(event) {\n    if (this.disabled || hasModifierKey(event) || this._isSliding && this._isSliding !== 'keyboard') {\n      return;\n    }\n    const oldValue = this.value;\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n    this._isSliding = 'keyboard';\n    event.preventDefault();\n  }\n  _onKeyup() {\n    if (this._isSliding === 'keyboard') {\n      this._isSliding = null;\n    }\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  _getWindow() {\n    return this._document.defaultView || window;\n  }\n  /**\n   * Binds our global move and end events. They're bound at the document level and only while\n   * dragging so that the user doesn't have to keep their pointer exactly over the slider\n   * as they're swiping across the screen.\n   */\n  _bindGlobalEvents(triggerEvent) {\n    // Note that we bind the events to the `document`, because it allows us to capture\n    // drag cancel events where the user's pointer is outside the browser window.\n    const document = this._document;\n    const isTouch = isTouchEvent(triggerEvent);\n    const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n    const endEventName = isTouch ? 'touchend' : 'mouseup';\n    document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n    document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n    if (isTouch) {\n      document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    }\n    const window = this._getWindow();\n    if (typeof window !== 'undefined' && window) {\n      window.addEventListener('blur', this._windowBlur);\n    }\n  }\n  /** Removes any global event listeners that we may have added. */\n  _removeGlobalEvents() {\n    const document = this._document;\n    document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n    document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n    document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n    document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n    document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    const window = this._getWindow();\n    if (typeof window !== 'undefined' && window) {\n      window.removeEventListener('blur', this._windowBlur);\n    }\n  }\n  /** Increments the slider by the given number of steps (negative number decrements). */\n  _increment(numSteps) {\n    // Pre-clamp the current value since it's allowed to be\n    // out of bounds when assigned programmatically.\n    const clampedValue = this._clamp(this.value || 0, this.min, this.max);\n    this.value = this._clamp(clampedValue + this.step * numSteps, this.min, this.max);\n  }\n  /** Calculate the new value from the new physical location. The value will always be snapped. */\n  _updateValueFromPosition(pos) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let posComponent = this.vertical ? pos.y : pos.x;\n    // The exact value is calculated from the event and used to find the closest snap value.\n    let percent = this._clamp((posComponent - offset) / size);\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    }\n    // Since the steps may not divide cleanly into the max value, if the user\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\n    // is slightly more intuitive than using `Math.ceil` below, because it\n    // follows the user's pointer closer.\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      const exactValue = this._calculateValue(percent);\n      // This calculation finds the closest step by finding the closest\n      // whole number divisible by the step relative to the min.\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n      // The value needs to snap to the min and max.\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n  /** Emits a change event if the current value is different from the last emitted value. */\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n  /** Emits an input event when the current value is different from the last emitted value. */\n  _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n  /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n  _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n    let tickIntervalPercent;\n    if (this.tickInterval == 'auto') {\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let pixelsPerTick = stepsPerTick * this.step;\n      tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n    this._tickIntervalPercent = isSafeNumber(tickIntervalPercent) ? tickIntervalPercent : 0;\n  }\n  /** Creates a slider change object from the specified value. */\n  _createChangeEvent(value = this.value) {\n    let event = new MatLegacySliderChange();\n    event.source = this;\n    event.value = value;\n    return event;\n  }\n  /** Calculates the percentage of the slider that a value is. */\n  _calculatePercentage(value) {\n    const percentage = ((value || 0) - this.min) / (this.max - this.min);\n    return isSafeNumber(percentage) ? percentage : 0;\n  }\n  /** Calculates the value a percentage of the slider corresponds to. */\n  _calculateValue(percentage) {\n    return this.min + percentage * (this.max - this.min);\n  }\n  /** Return a number between two numbers. */\n  _clamp(value, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n  /**\n   * Get the bounding client rect of the slider track element.\n   * The track is used rather than the native element to ignore the extra space that the thumb can\n   * take up.\n   */\n  _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n  /**\n   * Focuses the native element.\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n   */\n  _focusHostElement(options) {\n    this._elementRef.nativeElement.focus(options);\n  }\n  /** Blurs the native element. */\n  _blurHostElement() {\n    this._elementRef.nativeElement.blur();\n  }\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n}\nMatLegacySlider.ɵfac = function MatLegacySlider_Factory(t) {\n  return new (t || MatLegacySlider)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatLegacySlider.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatLegacySlider,\n  selectors: [[\"mat-slider\"]],\n  viewQuery: function MatLegacySlider_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"],\n  hostVars: 29,\n  hostBindings: function MatLegacySlider_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatLegacySlider_focus_HostBindingHandler() {\n        return ctx._onFocus();\n      })(\"blur\", function MatLegacySlider_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"keydown\", function MatLegacySlider_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      })(\"keyup\", function MatLegacySlider_keyup_HostBindingHandler() {\n        return ctx._onKeyup();\n      })(\"mouseenter\", function MatLegacySlider_mouseenter_HostBindingHandler() {\n        return ctx._onMouseenter();\n      })(\"selectstart\", function MatLegacySlider_selectstart_HostBindingHandler($event) {\n        return $event.preventDefault();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n      i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n      i0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    color: \"color\",\n    tabIndex: \"tabIndex\",\n    invert: \"invert\",\n    max: \"max\",\n    min: \"min\",\n    step: \"step\",\n    thumbLabel: \"thumbLabel\",\n    tickInterval: \"tickInterval\",\n    value: \"value\",\n    displayWith: \"displayWith\",\n    valueText: \"valueText\",\n    vertical: \"vertical\"\n  },\n  outputs: {\n    change: \"change\",\n    input: \"input\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"matSlider\"],\n  features: [i0.ɵɵProvidersFeature([MAT_LEGACY_SLIDER_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n  decls: 13,\n  vars: 6,\n  consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]],\n  template: function MatLegacySlider_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelement(6, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 7);\n      i0.ɵɵelement(8, \"div\", 8)(9, \"div\", 9);\n      i0.ɵɵelementStart(10, \"div\", 10)(11, \"span\", 11);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.displayValue);\n    }\n  },\n  dependencies: [i3.NgStyle],\n  styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid rgba(0,0,0,0);border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacySlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      exportAs: 'matSlider',\n      providers: [MAT_LEGACY_SLIDER_VALUE_ACCESSOR],\n      host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        // On Safari starting to slide temporarily triggers text selection mode which\n        // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n        '(selectstart)': '$event.preventDefault()',\n        'class': 'mat-slider mat-focus-indicator',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n        // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n        // it can cause the slider to read out a very long value like 0.20000068 if the current value\n        // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n        // to the same value that we set on the slider's thumb which will be truncated.\n        '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n        // Class binding which is only used by the test harness as there is no other\n        // way for the harness to detect if mouse coordinates need to be inverted.\n        '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue()',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      inputs: ['disabled', 'color', 'tabIndex'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid rgba(0,0,0,0);border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    invert: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    thumbLabel: [{\n      type: Input\n    }],\n    tickInterval: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    displayWith: [{\n      type: Input\n    }],\n    valueText: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    input: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    _sliderWrapper: [{\n      type: ViewChild,\n      args: ['sliderWrapper']\n    }]\n  });\n})();\n/** Checks if number is safe for calculation */\nfunction isSafeNumber(value) {\n  return !isNaN(value) && isFinite(value);\n}\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event, id) {\n  let point;\n  if (isTouchEvent(event)) {\n    // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n    // If that's the case, attribute the first touch to all active sliders. This should still cover\n    // the most common case while only breaking multi-touch.\n    if (typeof id === 'number') {\n      point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n    } else {\n      // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n      point = event.touches[0] || event.changedTouches[0];\n    }\n  } else {\n    point = event;\n  }\n  return point ? {\n    x: point.clientX,\n    y: point.clientY\n  } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches, id) {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === id) {\n      return touches[i];\n    }\n  }\n  return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event, sliderHost) {\n  for (let i = 0; i < event.touches.length; i++) {\n    const target = event.touches[i].target;\n    if (sliderHost === target || sliderHost.contains(target)) {\n      return event.touches[i].identifier;\n    }\n  }\n  return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatSliderModule` from `@angular/material/slider` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySliderModule {}\nMatLegacySliderModule.ɵfac = function MatLegacySliderModule_Factory(t) {\n  return new (t || MatLegacySliderModule)();\n};\nMatLegacySliderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatLegacySliderModule\n});\nMatLegacySliderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, MatCommonModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacySliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule],\n      exports: [MatLegacySlider, MatCommonModule],\n      declarations: [MatLegacySlider]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_SLIDER_VALUE_ACCESSOR, MatLegacySlider, MatLegacySliderChange, MatLegacySliderModule };","map":{"version":3,"names":["i3","DOCUMENT","CommonModule","i0","forwardRef","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Attribute","Inject","Input","Output","ViewChild","NgModule","mixinTabIndex","mixinColor","mixinDisabled","MatCommonModule","i1","i2","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","DOWN_ARROW","RIGHT_ARROW","UP_ARROW","LEFT_ARROW","HOME","END","PAGE_DOWN","PAGE_UP","NG_VALUE_ACCESSOR","ANIMATION_MODULE_TYPE","normalizePassiveListenerOptions","Subscription","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_LEGACY_SLIDER_VALUE_ACCESSOR","provide","useExisting","MatLegacySlider","multi","MatLegacySliderChange","_MatSliderBase","constructor","_elementRef","invert","_invert","value","max","_max","v","_percent","_calculatePercentage","_value","_changeDetectorRef","markForCheck","min","_min","step","_step","_roundToDecimal","toString","split","pop","length","thumbLabel","_thumbLabel","tickInterval","_tickInterval","parseFloat","toFixed","vertical","_vertical","displayValue","displayWith","focus","options","_focusHostElement","blur","_blurHostElement","percent","_clamp","_shouldInvertAxis","_isMinValue","_getThumbGap","disabled","_isActive","_getTrackBackgroundStyles","axis","scale","sign","_shouldInvertMouseCoords","transform","_getTrackFillStyles","display","_getTicksContainerStyles","_getDirection","offset","_tickIntervalPercent","_getTicksStyles","tickSize","backgroundSize","rotate","styles","shouldInvertAxis","side","_getThumbContainerStyles","invertOffset","_dir","elementRef","_focusMonitor","tabIndex","_ngZone","_document","_animationMode","change","input","valueChange","onTouched","_isSliding","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","_pointerDown","event","isTouchEvent","button","run","_touchId","getTouchIdForSlider","nativeElement","undefined","pointerPosition","getPointerPositionOnPage","oldValue","_lastPointerEvent","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","cancelable","preventDefault","_emitInputEvent","_pointerMove","_pointerUp","findMatchingTouch","changedTouches","_removeGlobalEvents","_emitChangeEvent","_windowBlur","parseInt","runOutsideAngular","element","addEventListener","ngAfterViewInit","monitor","subscribe","origin","detectChanges","ngOnDestroy","removeEventListener","stopMonitoring","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","_onFocus","_onBlur","_onKeydown","keyCode","_increment","_onKeyup","_getWindow","defaultView","window","triggerEvent","document","isTouch","moveEventName","endEventName","numSteps","clampedValue","pos","top","left","size","height","width","posComponent","y","x","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","tickIntervalPercent","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","isSafeNumber","source","percentage","_sliderWrapper","getBoundingClientRect","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ɵfac","ElementRef","FocusMonitor","ChangeDetectorRef","Directionality","NgZone","ɵcmp","NgStyle","type","args","selector","exportAs","providers","host","inputs","encapsulation","None","changeDetection","OnPush","template","decorators","valueText","isNaN","isFinite","id","point","touches","clientX","clientY","i","identifier","sliderHost","target","contains","MatLegacySliderModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["/Users/marieklinaeva/github/ck-board/frontend/node_modules/@angular/material/fesm2020/legacy-slider.mjs"],"sourcesContent":["import * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n * @deprecated Use `MAT_SLIDER_VALUE_ACCESSOR` from `@angular/material/slider` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatLegacySlider),\n    multi: true,\n};\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use `MatSliderChange` from `@angular/material/slider` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n * @deprecated Use `MatSlider` from `@angular/material/slider` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySlider extends _MatSliderBase {\n    /** Whether the slider is inverted. */\n    get invert() {\n        return this._invert;\n    }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n        return this._max;\n    }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() {\n        return this._min;\n    }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n        return this._step;\n    }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() {\n        return this._thumbLabel;\n    }\n    set thumbLabel(value) {\n        this._thumbLabel = coerceBooleanProperty(value);\n    }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() {\n        return this._tickInterval;\n    }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v, 0);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal && value !== this.min && value !== this.max) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() {\n        return this._clamp(this._percent);\n    }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : '',\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = (this._tickIntervalPercent / 2) * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`,\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`,\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`,\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n    }\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding and what the user is using to slide it with.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = null;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                this._touchId = isTouchEvent(event)\n                    ? getTouchIdForSlider(event, this._elementRef.nativeElement)\n                    : undefined;\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    const oldValue = this.value;\n                    this._isSliding = 'pointer';\n                    this._lastPointerEvent = event;\n                    this._focusHostElement();\n                    this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                    this._bindGlobalEvents(event);\n                    this._focusHostElement();\n                    this._updateValueFromPosition(pointerPosition);\n                    this._valueOnSlideStart = oldValue;\n                    // Despite the fact that we explicitly bind active events, in some cases the browser\n                    // still dispatches non-cancelable events which cause this call to throw an error.\n                    // There doesn't appear to be a good way of avoiding them. See #23820.\n                    if (event.cancelable) {\n                        event.preventDefault();\n                    }\n                    // Emit a change and input event if the value changed.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding === 'pointer') {\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    // Prevent the slide from selecting anything else.\n                    if (event.cancelable) {\n                        event.preventDefault();\n                    }\n                    const oldValue = this.value;\n                    this._lastPointerEvent = event;\n                    this._updateValueFromPosition(pointerPosition);\n                    // Native range elements always emit `input` events when the value changed while sliding.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding === 'pointer') {\n                if (!isTouchEvent(event) ||\n                    typeof this._touchId !== 'number' ||\n                    // Note that we use `changedTouches`, rather than `touches` because it\n                    // seems like in most cases `touches` is empty for `touchend` events.\n                    findMatchingTouch(event.changedTouches, this._touchId)) {\n                    if (event.cancelable) {\n                        event.preventDefault();\n                    }\n                    this._removeGlobalEvents();\n                    this._isSliding = null;\n                    this._touchId = undefined;\n                    if (this._valueOnSlideStart != this.value && !this.disabled) {\n                        this._emitChangeEvent();\n                    }\n                    this._valueOnSlideStart = this._lastPointerEvent = null;\n                }\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled ||\n            hasModifierKey(event) ||\n            (this._isSliding && this._isSliding !== 'keyboard')) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = 'keyboard';\n        event.preventDefault();\n    }\n    _onKeyup() {\n        if (this._isSliding === 'keyboard') {\n            this._isSliding = null;\n        }\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        // Pre-clamp the current value since it's allowed to be\n        // out of bounds when assigned programmatically.\n        const clampedValue = this._clamp(this.value || 0, this.min, this.max);\n        this.value = this._clamp(clampedValue + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        let tickIntervalPercent;\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = (trackSize * this.step) / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            tickIntervalPercent = (this.tickInterval * this.step) / (this.max - this.min);\n        }\n        this._tickIntervalPercent = isSafeNumber(tickIntervalPercent) ? tickIntervalPercent : 0;\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatLegacySliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        const percentage = ((value || 0) - this.min) / (this.max - this.min);\n        return isSafeNumber(percentage) ? percentage : 0;\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatLegacySlider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySlider, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: i2.Directionality, optional: true }, { token: 'tabindex', attribute: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatLegacySlider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLegacySlider, selector: \"mat-slider\", inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", value: \"value\", displayWith: \"displayWith\", valueText: \"valueText\", vertical: \"vertical\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, host: { attributes: { \"role\": \"slider\" }, listeners: { \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\", \"keydown\": \"_onKeydown($event)\", \"keyup\": \"_onKeyup()\", \"mouseenter\": \"_onMouseenter()\", \"selectstart\": \"$event.preventDefault()\" }, properties: { \"tabIndex\": \"tabIndex\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuemin\": \"min\", \"attr.aria-valuenow\": \"value\", \"attr.aria-valuetext\": \"valueText == null ? displayValue : valueText\", \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-slider-disabled\": \"disabled\", \"class.mat-slider-has-ticks\": \"tickInterval\", \"class.mat-slider-horizontal\": \"!vertical\", \"class.mat-slider-axis-inverted\": \"_shouldInvertAxis()\", \"class.mat-slider-invert-mouse-coords\": \"_shouldInvertMouseCoords()\", \"class.mat-slider-sliding\": \"_isSliding\", \"class.mat-slider-thumb-label-showing\": \"thumbLabel\", \"class.mat-slider-vertical\": \"vertical\", \"class.mat-slider-min-value\": \"_isMinValue()\", \"class.mat-slider-hide-last-tick\": \"disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-slider mat-focus-indicator\" }, providers: [MAT_LEGACY_SLIDER_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_sliderWrapper\", first: true, predicate: [\"sliderWrapper\"], descendants: true }], exportAs: [\"matSlider\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid rgba(0,0,0,0);border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySlider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider', exportAs: 'matSlider', providers: [MAT_LEGACY_SLIDER_VALUE_ACCESSOR], host: {\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                        '(keydown)': '_onKeydown($event)',\n                        '(keyup)': '_onKeyup()',\n                        '(mouseenter)': '_onMouseenter()',\n                        // On Safari starting to slide temporarily triggers text selection mode which\n                        // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                        '(selectstart)': '$event.preventDefault()',\n                        'class': 'mat-slider mat-focus-indicator',\n                        'role': 'slider',\n                        '[tabIndex]': 'tabIndex',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuemin]': 'min',\n                        '[attr.aria-valuenow]': 'value',\n                        // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n                        // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n                        // it can cause the slider to read out a very long value like 0.20000068 if the current value\n                        // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n                        // to the same value that we set on the slider's thumb which will be truncated.\n                        '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-slider-disabled]': 'disabled',\n                        '[class.mat-slider-has-ticks]': 'tickInterval',\n                        '[class.mat-slider-horizontal]': '!vertical',\n                        '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if mouse coordinates need to be inverted.\n                        '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                        '[class.mat-slider-sliding]': '_isSliding',\n                        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                        '[class.mat-slider-vertical]': 'vertical',\n                        '[class.mat-slider-min-value]': '_isMinValue()',\n                        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, inputs: ['disabled', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid rgba(0,0,0,0);border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { invert: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], thumbLabel: [{\n                type: Input\n            }], tickInterval: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], displayWith: [{\n                type: Input\n            }], valueText: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], input: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _sliderWrapper: [{\n                type: ViewChild,\n                args: ['sliderWrapper']\n            }] } });\n/** Checks if number is safe for calculation */\nfunction isSafeNumber(value) {\n    return !isNaN(value) && isFinite(value);\n}\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event, id) {\n    let point;\n    if (isTouchEvent(event)) {\n        // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n        // If that's the case, attribute the first touch to all active sliders. This should still cover\n        // the most common case while only breaking multi-touch.\n        if (typeof id === 'number') {\n            point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n        }\n        else {\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            point = event.touches[0] || event.changedTouches[0];\n        }\n    }\n    else {\n        point = event;\n    }\n    return point ? { x: point.clientX, y: point.clientY } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches, id) {\n    for (let i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event, sliderHost) {\n    for (let i = 0; i < event.touches.length; i++) {\n        const target = event.touches[i].target;\n        if (sliderHost === target || sliderHost.contains(target)) {\n            return event.touches[i].identifier;\n        }\n    }\n    return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `MatSliderModule` from `@angular/material/slider` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySliderModule {\n}\nMatLegacySliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLegacySliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySliderModule, declarations: [MatLegacySlider], imports: [CommonModule, MatCommonModule], exports: [MatLegacySlider, MatCommonModule] });\nMatLegacySliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySliderModule, imports: [CommonModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLegacySliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatLegacySlider, MatCommonModule],\n                    declarations: [MatLegacySlider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_SLIDER_VALUE_ACCESSOR, MatLegacySlider, MatLegacySliderChange, MatLegacySliderModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}