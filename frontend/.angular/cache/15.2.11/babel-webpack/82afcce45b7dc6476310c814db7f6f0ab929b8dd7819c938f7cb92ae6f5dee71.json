{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommentService {\n  http;\n  constructor(http) {\n    this.http = http;\n  }\n  getCommentsByPost(postID) {\n    return this.http.get('comments/posts/' + postID).toPromise();\n  }\n  add(comment) {\n    return this.http.post('comments/', {\n      comment\n    }).toPromise();\n  }\n  remove(id) {\n    return this.http.delete('comments/' + id).toPromise();\n  }\n  static ɵfac = function CommentService_Factory(t) {\n    return new (t || CommentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommentService,\n    factory: CommentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EACLC;EAApBC,YAAoBD,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCE,iBAAiB,CAACC,MAAc;IAC9B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,iBAAiB,GAAGD,MAAM,CAAC,CAACE,SAAS,EAAE;EACzE;EAEAC,GAAG,CAACC,OAAgB;IAClB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,WAAW,EAAE;MAAED;IAAO,CAAE,CAAC,CAACF,SAAS,EAAE;EAC7D;EAEAI,MAAM,CAACC,EAAU;IACf,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAC,WAAW,GAAGD,EAAE,CAAC,CAACL,SAAS,EAAE;EACvD;;qBAbWN,cAAc;EAAA;;WAAdA,cAAc;IAAAa,SAAdb,cAAc;IAAAc,YAFb;EAAM","names":["CommentService","http","constructor","getCommentsByPost","postID","get","toPromise","add","comment","post","remove","id","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/services/comment.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport Comment from '../models/comment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommentService {\n  constructor(private http: HttpClient) {}\n\n  getCommentsByPost(postID: string): Promise<Comment[]> {\n    return this.http.get<Comment[]>('comments/posts/' + postID).toPromise();\n  }\n\n  add(comment: Comment): any {\n    return this.http.post('comments/', { comment }).toPromise();\n  }\n\n  remove(id: string): any {\n    return this.http.delete('comments/' + id).toPromise();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}