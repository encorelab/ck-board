{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { BoardScope } from 'src/app/models/board';\nimport { ContainerType, DistributionWorkflowType, TaskActionType, WorkflowType, TaskWorkflowType } from 'src/app/models/workflow';\nimport { MyErrorStateMatcher } from 'src/app/utils/ErrorStateMatcher';\nimport { generateUniqueID } from 'src/app/utils/Utils';\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/services/snackbar.service\";\nimport * as i3 from \"src/app/services/bucket.service\";\nimport * as i4 from \"src/app/services/board.service\";\nimport * as i5 from \"src/app/services/workflow.service\";\nimport * as i6 from \"src/app/services/canvas.service\";\nimport * as i7 from \"src/app/services/group.service\";\nfunction CreateWorkflowModalComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Bucket name required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Bucket name cannot be the same as board name!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.createBucket());\n    });\n    i0.ɵɵtext(1, \" Create Bucket! \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r2._validBucketForm());\n  }\n}\nfunction CreateWorkflowModalComponent_div_20_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 23)(1, \"mat-card-title\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_div_20_mat_card_1_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const bucket_r18 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.deleteBucket(bucket_r18));\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\", 26);\n    i0.ɵɵtext(5, \" delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const bucket_r18 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", bucket_r18.name, \" \");\n  }\n}\nfunction CreateWorkflowModalComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, CreateWorkflowModalComponent_div_20_mat_card_1_Template, 6, 1, \"mat-card\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.boardBuckets);\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Workflow name required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_mat_option_12_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"CANVAS:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_mat_option_12_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"BUCKET:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 38);\n    i0.ɵɵtemplate(1, CreateWorkflowModalComponent_div_31_mat_option_12_ng_container_1_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtemplate(2, CreateWorkflowModalComponent_div_31_mat_option_12_ng_container_2_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r30 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r30);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", option_r30.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !option_r30.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r30.name, \"\");\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Source required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Source and destination cannot be the same! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_mat_option_21_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"CANVAS:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_mat_option_21_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"BUCKET:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_mat_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 38);\n    i0.ɵɵtemplate(1, CreateWorkflowModalComponent_div_31_mat_option_21_ng_container_1_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtemplate(2, CreateWorkflowModalComponent_div_31_mat_option_21_ng_container_2_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r33 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r33);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", option_r33.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !option_r33.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r33.name, \" \");\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Destination required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_section_35_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Enter a Positive Number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_section_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\")(1, \"mat-form-field\", 39)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Posts per Destination\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 40);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_31_section_35_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r37.postsPerBucket = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, CreateWorkflowModalComponent_div_31_section_35_mat_error_5_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r27.postsPerBucket);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r27.postsPerBucket <= 0);\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_section_36_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tag_r40 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tag_r40);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r40.name, \" \");\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_section_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\")(1, \"mat-form-field\", 41)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Tags\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_31_section_36_Template_mat_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r41.selectedTag = $event);\n    });\n    i0.ɵɵtemplate(5, CreateWorkflowModalComponent_div_31_section_36_mat_option_5_Template, 2, 2, \"mat-option\", 31);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r28.selectedTag);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r28.tags);\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_section_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\")(1, \"div\")(2, \"mat-label\", 42);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-slider\", 43);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_31_section_37_Template_mat_slider_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r43.upvoteLimit = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Minimum Upvotes Per Post: \", ctx_r29.upvoteLimit, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"max\", ctx_r29.board.upvoteLimit);\n    i0.ɵɵproperty(\"ngModel\", ctx_r29.upvoteLimit);\n  }\n}\nfunction CreateWorkflowModalComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 27)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Workflow Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_31_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.workflowName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, CreateWorkflowModalComponent_div_31_mat_error_5_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 28)(7, \"div\")(8, \"mat-form-field\", 29)(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Source\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-select\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_31_Template_mat_select_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.distributionSource = $event);\n    })(\"ngModelChange\", function CreateWorkflowModalComponent_div_31_Template_mat_select_ngModelChange_11_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48._validDistributionWorkflow());\n    });\n    i0.ɵɵtemplate(12, CreateWorkflowModalComponent_div_31_mat_option_12_Template, 4, 4, \"mat-option\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, CreateWorkflowModalComponent_div_31_mat_error_13_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, CreateWorkflowModalComponent_div_31_mat_error_14_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"mat-icon\", 32);\n    i0.ɵɵtext(16, \"arrow_right_alt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"mat-form-field\", 29)(18, \"mat-label\");\n    i0.ɵɵtext(19, \"Destination\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"mat-select\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_31_Template_mat_select_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.distributionDestinations = $event);\n    })(\"ngModelChange\", function CreateWorkflowModalComponent_div_31_Template_mat_select_ngModelChange_20_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50._validDistributionWorkflow());\n    });\n    i0.ɵɵtemplate(21, CreateWorkflowModalComponent_div_31_mat_option_21_Template, 4, 4, \"mat-option\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(22, CreateWorkflowModalComponent_div_31_mat_error_22_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(23, \"section\");\n    i0.ɵɵelementStart(24, \"section\")(25, \"h4\");\n    i0.ɵɵtext(26, \"Choose Distribution:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"mat-radio-group\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_31_Template_mat_radio_group_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.distributionWorkflowType = $event);\n    });\n    i0.ɵɵelementStart(28, \"mat-radio-button\", 34);\n    i0.ɵɵtext(29, \"Randomly distribute\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"mat-radio-button\", 35);\n    i0.ɵɵtext(31, \"Copy all with specified tag\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"mat-radio-button\", 36);\n    i0.ɵɵtext(33, \"Copy all with min # upvotes\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"div\", 37);\n    i0.ɵɵtemplate(35, CreateWorkflowModalComponent_div_31_section_35_Template, 6, 2, \"section\", 8);\n    i0.ɵɵtemplate(36, CreateWorkflowModalComponent_div_31_section_36_Template, 6, 2, \"section\", 8);\n    i0.ɵɵtemplate(37, CreateWorkflowModalComponent_div_31_section_37_Template, 5, 3, \"section\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(38, \"p\")(39, \"mat-checkbox\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_31_Template_mat_checkbox_ngModelChange_39_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.removeFromSource = $event);\n    });\n    i0.ɵɵtext(40, \" Remove From Source \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r4.workflowNameFormControl)(\"errorStateMatcher\", ctx_r4.matcher)(\"ngModel\", ctx_r4.workflowName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.workflowNameFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.distributionSource)(\"formControl\", ctx_r4.sourceFormControl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.sourceOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.sourceFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.sourceDestinationMatchError.value);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.distributionDestinations)(\"formControl\", ctx_r4.destinationFormControl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.destOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.destinationFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.distributionWorkflowType)(\"formControl\", ctx_r4.workflowTypeFormControl);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.distributionWorkflowType === \"RANDOM\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.distributionWorkflowType === \"TAG\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.distributionWorkflowType === \"UPVOTES\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.removeFromSource)(\"formControl\", ctx_r4.removeFromSourceFormControl);\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Workflow name required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_option_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"CANVAS:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_option_11_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"BUCKET:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 38);\n    i0.ɵɵtemplate(1, CreateWorkflowModalComponent_div_32_mat_option_11_ng_container_1_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtemplate(2, CreateWorkflowModalComponent_div_32_mat_option_11_ng_container_2_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r61 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r61);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", option_r61.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !option_r61.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r61.name, \"\");\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Source required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_option_19_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"CANVAS:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_option_19_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"BUCKET:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 38);\n    i0.ɵɵtemplate(1, CreateWorkflowModalComponent_div_32_mat_option_19_ng_container_1_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtemplate(2, CreateWorkflowModalComponent_div_32_mat_option_19_ng_container_2_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r64 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r64);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", option_r64.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !option_r64.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r64.name, \"\");\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Destination required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r67 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r67);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r67.name);\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"At least one group required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_mat_error_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Prompt is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r69 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 27)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Workflow Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_32_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r69);\n      const ctx_r68 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r68.workflowName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, CreateWorkflowModalComponent_div_32_mat_error_5_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 28)(7, \"mat-form-field\", 29)(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Source\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-select\", 44);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_32_Template_mat_select_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r69);\n      const ctx_r70 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r70.taskSource = $event);\n    });\n    i0.ɵɵtemplate(11, CreateWorkflowModalComponent_div_32_mat_option_11_Template, 4, 4, \"mat-option\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, CreateWorkflowModalComponent_div_32_mat_error_12_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-icon\", 32);\n    i0.ɵɵtext(14, \"arrow_right_alt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"mat-form-field\", 29)(16, \"mat-label\");\n    i0.ɵɵtext(17, \"Destination\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"mat-select\", 44);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_32_Template_mat_select_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r69);\n      const ctx_r71 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r71.taskDestination = $event);\n    });\n    i0.ɵɵtemplate(19, CreateWorkflowModalComponent_div_32_mat_option_19_Template, 4, 4, \"mat-option\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, CreateWorkflowModalComponent_div_32_mat_error_20_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"section\")(22, \"div\", 45)(23, \"mat-form-field\", 29)(24, \"mat-label\");\n    i0.ɵɵtext(25, \"Assigned Groups\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"mat-select\", 46);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_32_Template_mat_select_ngModelChange_26_listener($event) {\n      i0.ɵɵrestoreView(_r69);\n      const ctx_r72 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r72.assignedGroups = $event);\n    });\n    i0.ɵɵtemplate(27, CreateWorkflowModalComponent_div_32_mat_option_27_Template, 2, 2, \"mat-option\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(28, CreateWorkflowModalComponent_div_32_mat_error_28_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(29, \"section\")(30, \"mat-form-field\", 47)(31, \"mat-label\");\n    i0.ɵɵtext(32, \"Student Prompt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"textarea\", 48);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_32_Template_textarea_ngModelChange_33_listener($event) {\n      i0.ɵɵrestoreView(_r69);\n      const ctx_r73 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r73.prompt = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(34, CreateWorkflowModalComponent_div_32_mat_error_34_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(35, \"section\")(36, \"h4\", 42);\n    i0.ɵɵtext(37, \"Workflow Actions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"div\", 49)(39, \"mat-checkbox\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_32_Template_mat_checkbox_ngModelChange_39_listener($event) {\n      i0.ɵɵrestoreView(_r69);\n      const ctx_r74 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r74.commentsRequired = $event);\n    });\n    i0.ɵɵtext(40, \" Require minimum 1 comment per post \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"mat-checkbox\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_32_Template_mat_checkbox_ngModelChange_41_listener($event) {\n      i0.ɵɵrestoreView(_r69);\n      const ctx_r75 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r75.tagsRequired = $event);\n    });\n    i0.ɵɵtext(42, \" Require minimum 1 tag per post \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r5.workflowNameFormControl)(\"errorStateMatcher\", ctx_r5.matcher)(\"ngModel\", ctx_r5.workflowName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.workflowNameFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.taskSource)(\"formControl\", ctx_r5.sourceFormControl)(\"errorStateMatcher\", ctx_r5.matcher);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.sourceOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.sourceFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.taskDestination)(\"formControl\", ctx_r5.destinationFormControl)(\"errorStateMatcher\", ctx_r5.matcher);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.destOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.destinationFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.assignedGroups)(\"formControl\", ctx_r5.groupsFormControl)(\"errorStateMatcher\", ctx_r5.matcher);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.groupOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.groupsFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r5.promptFormControl)(\"errorStateMatcher\", ctx_r5.matcher)(\"ngModel\", ctx_r5.prompt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.promptFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.commentsRequired);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.tagsRequired);\n  }\n}\nfunction CreateWorkflowModalComponent_div_33_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Workflow name required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_33_mat_option_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"CANVAS:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_33_mat_option_11_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"BUCKET:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_33_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 38);\n    i0.ɵɵtemplate(1, CreateWorkflowModalComponent_div_33_mat_option_11_ng_container_1_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtemplate(2, CreateWorkflowModalComponent_div_33_mat_option_11_ng_container_2_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r82 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r82);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", option_r82.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !option_r82.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r82.name, \"\");\n  }\n}\nfunction CreateWorkflowModalComponent_div_33_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Destination required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_33_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r85 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r85);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r85.name);\n  }\n}\nfunction CreateWorkflowModalComponent_div_33_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"At least one group required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_33_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Prompt is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r87 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 27)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Workflow Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_33_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r87);\n      const ctx_r86 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r86.workflowName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, CreateWorkflowModalComponent_div_33_mat_error_5_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 28)(7, \"mat-form-field\", 29)(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Destination\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-select\", 44);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_33_Template_mat_select_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r87);\n      const ctx_r88 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r88.taskDestination = $event);\n    });\n    i0.ɵɵtemplate(11, CreateWorkflowModalComponent_div_33_mat_option_11_Template, 4, 4, \"mat-option\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, CreateWorkflowModalComponent_div_33_mat_error_12_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"section\")(14, \"div\", 45)(15, \"mat-form-field\", 29)(16, \"mat-label\");\n    i0.ɵɵtext(17, \"Assigned Groups\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"mat-select\", 46);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_33_Template_mat_select_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r87);\n      const ctx_r89 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r89.assignedGroups = $event);\n    });\n    i0.ɵɵtemplate(19, CreateWorkflowModalComponent_div_33_mat_option_19_Template, 2, 2, \"mat-option\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, CreateWorkflowModalComponent_div_33_mat_error_20_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"section\")(22, \"mat-form-field\", 47)(23, \"mat-label\");\n    i0.ɵɵtext(24, \"Student Prompt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"textarea\", 48);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_33_Template_textarea_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r87);\n      const ctx_r90 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r90.prompt = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(26, CreateWorkflowModalComponent_div_33_mat_error_26_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"section\")(28, \"h4\", 42);\n    i0.ɵɵtext(29, \"Workflow Actions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\")(31, \"mat-label\");\n    i0.ɵɵtext(32, \"Number of Posts to generate:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"mat-slider\", 50);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_33_Template_mat_slider_ngModelChange_33_listener($event) {\n      i0.ɵɵrestoreView(_r87);\n      const ctx_r91 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r91.postGeneration = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"div\", 49)(35, \"mat-checkbox\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_33_Template_mat_checkbox_ngModelChange_35_listener($event) {\n      i0.ɵɵrestoreView(_r87);\n      const ctx_r92 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r92.tagsRequired = $event);\n    });\n    i0.ɵɵtext(36, \" Require minimum 1 tag per post \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r6.workflowNameFormControl)(\"errorStateMatcher\", ctx_r6.matcher)(\"ngModel\", ctx_r6.workflowName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.workflowNameFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.taskDestination)(\"formControl\", ctx_r6.destinationFormControl)(\"errorStateMatcher\", ctx_r6.matcher);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.destOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.destinationFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.assignedGroups)(\"formControl\", ctx_r6.groupsFormControl)(\"errorStateMatcher\", ctx_r6.matcher);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.groupOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.groupsFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r6.promptFormControl)(\"errorStateMatcher\", ctx_r6.matcher)(\"ngModel\", ctx_r6.prompt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.promptFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.postGeneration);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.tagsRequired);\n  }\n}\nfunction CreateWorkflowModalComponent_div_34_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Workflow name required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_34_mat_option_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"CANVAS:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_34_mat_option_11_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"BUCKET:\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_34_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 38);\n    i0.ɵɵtemplate(1, CreateWorkflowModalComponent_div_34_mat_option_11_ng_container_1_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtemplate(2, CreateWorkflowModalComponent_div_34_mat_option_11_ng_container_2_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r97 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r97);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", option_r97.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !option_r97.hasOwnProperty(\"projectID\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r97.name, \"\");\n  }\n}\nfunction CreateWorkflowModalComponent_div_34_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Source required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_34_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Classification theme name required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r101 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 27)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Workflow Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_34_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r101);\n      const ctx_r100 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r100.workflowName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, CreateWorkflowModalComponent_div_34_mat_error_5_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 28)(7, \"mat-form-field\", 29)(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Source\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-select\", 44);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_34_Template_mat_select_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r101);\n      const ctx_r102 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r102.taskSource = $event);\n    });\n    i0.ɵɵtemplate(11, CreateWorkflowModalComponent_div_34_mat_option_11_Template, 4, 4, \"mat-option\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, CreateWorkflowModalComponent_div_34_mat_error_12_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\")(14, \"mat-form-field\", 29)(15, \"mat-label\");\n    i0.ɵɵtext(16, \"Classification Theme\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_34_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r101);\n      const ctx_r103 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r103.classificationTheme = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, CreateWorkflowModalComponent_div_34_mat_error_18_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"section\")(20, \"h4\", 42);\n    i0.ɵɵtext(21, \"Workflow Actions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\")(23, \"mat-label\");\n    i0.ɵɵtext(24, \"Number of Categories to generate:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"mat-slider\", 51);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_34_Template_mat_slider_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r101);\n      const ctx_r104 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r104.numCategoryGeneration = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"p\")(27, \"mat-checkbox\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_div_34_Template_mat_checkbox_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r101);\n      const ctx_r105 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r105.removeFromSource = $event);\n    });\n    i0.ɵɵtext(28, \" Remove From Source \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r7.workflowNameFormControl)(\"errorStateMatcher\", ctx_r7.matcher)(\"ngModel\", ctx_r7.workflowName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.workflowNameFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.taskSource)(\"formControl\", ctx_r7.sourceFormControl)(\"errorStateMatcher\", ctx_r7.matcher);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.sourceOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.sourceFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r7.classificationThemeFormControl)(\"errorStateMatcher\", ctx_r7.matcher)(\"ngModel\", ctx_r7.classificationTheme);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.classificationThemeFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.numCategoryGeneration);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.removeFromSource)(\"formControl\", ctx_r7.removeFromSourceFormControl);\n  }\n}\nfunction CreateWorkflowModalComponent_h3_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 52);\n    i0.ɵɵtext(1, \" No workflows created! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_mat_chip_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 62);\n    i0.ɵɵtext(1, \"Distribution\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_mat_chip_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 62);\n    i0.ɵɵtext(1, \"Peer Review\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_mat_chip_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 62);\n    i0.ɵɵtext(1, \"Generation\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_mat_chip_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const destination_r115 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(destination_r115.name);\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \" Distribution Type: \");\n    i0.ɵɵelementStart(3, \"mat-chip\", 63);\n    i0.ɵɵtext(4, \" Random \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"h4\");\n    i0.ɵɵtext(6, \" Posts Per Bucket/Board: \");\n    i0.ɵɵelementStart(7, \"mat-chip\", 63);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const workflow_r106 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", workflow_r106.distributionWorkflowType.data, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction CreateWorkflowModalComponent_mat_accordion_37_div_27_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \" Distribution Type: \");\n    i0.ɵɵelementStart(3, \"mat-chip\", 63);\n    i0.ɵɵtext(4, \" Tag \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"h4\");\n    i0.ɵɵtext(6, \" Selected Tag:\");\n    i0.ɵɵelementStart(7, \"mat-chip\", 64);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const workflow_r106 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, workflow_r106.distributionWorkflowType.data.color));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", workflow_r106.distributionWorkflowType.data.name, \" \");\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_div_27_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \" Distribution Type: \");\n    i0.ɵɵelementStart(3, \"mat-chip\", 63);\n    i0.ɵɵtext(4, \" Upvote \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"h4\");\n    i0.ɵɵtext(6, \" Minimum upvotes per post: \");\n    i0.ɵɵelementStart(7, \"mat-chip\", 63);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const workflow_r106 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", workflow_r106.distributionWorkflowType.data, \" \");\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CreateWorkflowModalComponent_mat_accordion_37_div_27_div_1_Template, 9, 1, \"div\", 8);\n    i0.ɵɵtemplate(2, CreateWorkflowModalComponent_mat_accordion_37_div_27_div_2_Template, 9, 4, \"div\", 8);\n    i0.ɵɵtemplate(3, CreateWorkflowModalComponent_mat_accordion_37_div_27_div_3_Template, 9, 1, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const workflow_r106 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r106.distributionWorkflowType.type === \"RANDOM\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r106.distributionWorkflowType.type === \"TAG\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r106.distributionWorkflowType.type === \"UPVOTES\");\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_div_28_mat_chip_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const action_r124 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" 1 \", action_r124.type.toLowerCase(), \" per post \");\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \" Required Actions: \");\n    i0.ɵɵtemplate(3, CreateWorkflowModalComponent_mat_accordion_37_div_28_mat_chip_3_Template, 2, 1, \"mat-chip\", 65);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r106 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", workflow_r106.requiredActions);\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_div_29_mat_chip_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const action_r127 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Generate \", action_r127.amountRequired.toString(), \" post(s) \");\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \" Required Actions: \");\n    i0.ɵɵtemplate(3, CreateWorkflowModalComponent_mat_accordion_37_div_29_mat_chip_3_Template, 2, 1, \"mat-chip\", 65);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r106 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", workflow_r106.requiredActions);\n  }\n}\nfunction CreateWorkflowModalComponent_mat_accordion_37_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-chip\", 66);\n    i0.ɵɵtext(2, \" Remove From Source Enabled \");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    color: a0\n  };\n};\nfunction CreateWorkflowModalComponent_mat_accordion_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r130 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-accordion\", 53)(1, \"mat-expansion-panel\")(2, \"mat-expansion-panel-header\")(3, \"mat-panel-title\")(4, \"mat-icon\", 54);\n    i0.ɵɵtext(5, \"circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-panel-description\")(8, \"mat-chip-list\");\n    i0.ɵɵtemplate(9, CreateWorkflowModalComponent_mat_accordion_37_mat_chip_9_Template, 2, 0, \"mat-chip\", 55);\n    i0.ɵɵtemplate(10, CreateWorkflowModalComponent_mat_accordion_37_mat_chip_10_Template, 2, 0, \"mat-chip\", 55);\n    i0.ɵɵtemplate(11, CreateWorkflowModalComponent_mat_accordion_37_mat_chip_11_Template, 2, 0, \"mat-chip\", 55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\")(13, \"button\", 56);\n    i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_mat_accordion_37_Template_button_click_13_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r130);\n      const workflow_r106 = restoredCtx.$implicit;\n      const ctx_r129 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r129.runWorkflow($event, workflow_r106));\n    });\n    i0.ɵɵelementStart(14, \"mat-icon\", 57);\n    i0.ɵɵtext(15, \"play_circle_filled\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_mat_accordion_37_Template_button_click_16_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r130);\n      const workflow_r106 = restoredCtx.$implicit;\n      const ctx_r131 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r131.deleteWorkflow($event, workflow_r106));\n    });\n    i0.ɵɵelementStart(17, \"mat-icon\", 58);\n    i0.ɵɵtext(18, \"delete\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(19, \"div\", 59)(20, \"mat-chip-list\")(21, \"mat-chip\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"mat-icon\", 60);\n    i0.ɵɵtext(24, \"arrow_right_alt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"mat-chip-list\");\n    i0.ɵɵtemplate(26, CreateWorkflowModalComponent_mat_accordion_37_mat_chip_26_Template, 2, 1, \"mat-chip\", 61);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(27, CreateWorkflowModalComponent_mat_accordion_37_div_27_Template, 4, 3, \"div\", 8);\n    i0.ɵɵtemplate(28, CreateWorkflowModalComponent_mat_accordion_37_div_28_Template, 4, 1, \"div\", 8);\n    i0.ɵɵtemplate(29, CreateWorkflowModalComponent_mat_accordion_37_div_29_Template, 4, 1, \"div\", 8);\n    i0.ɵɵtemplate(30, CreateWorkflowModalComponent_mat_accordion_37_div_30_Template, 3, 0, \"div\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r106 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(12, _c1, workflow_r106.active ? \"green\" : \"grey\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", workflow_r106.name, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", workflow_r106.distributionWorkflowType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r106.requiredActions && workflow_r106.type != ctx_r9.taskWorkflowType.GENERATION);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r106.type == ctx_r9.taskWorkflowType.GENERATION);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", workflow_r106.active);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(workflow_r106.source.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", workflow_r106.destinations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r106.distributionWorkflowType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r106.requiredActions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r106.type == ctx_r9.taskWorkflowType.GENERATION);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r106.removeFromSource);\n  }\n}\nfunction CreateWorkflowModalComponent_button_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r133 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_button_41_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r133);\n      const ctx_r132 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r132.createBucket());\n    });\n    i0.ɵɵtext(1, \" Create Bucket! \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r10._validBucketForm());\n  }\n}\nfunction CreateWorkflowModalComponent_button_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r135 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_button_42_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r135);\n      const ctx_r134 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r134.createDistributionWorkflow());\n    });\n    i0.ɵɵtext(1, \" Create Distribution Workflow! \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r11._validDistributionWorkflow());\n  }\n}\nfunction CreateWorkflowModalComponent_button_43_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r137 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_button_43_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r137);\n      const ctx_r136 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r136.createPeerReviewWorkflow());\n    });\n    i0.ɵɵtext(1, \" Create Peer Review Workflow! \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r12._validPeerReviewWorkflow());\n  }\n}\nfunction CreateWorkflowModalComponent_button_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r139 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_button_44_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r139);\n      const ctx_r138 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r138.createGenerationTaskWorkflow());\n    });\n    i0.ɵɵtext(1, \" Create Generation Task Workflow! \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r13._validGenerationTaskWorkflow());\n  }\n}\nfunction CreateWorkflowModalComponent_button_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r141 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_button_45_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r141);\n      const ctx_r140 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r140.createAIClassificationWorkflow());\n    });\n    i0.ɵɵtext(1, \" Create AI Classification Workflow! \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r14._validAIClassificationWorkflow());\n  }\n}\nexport class CreateWorkflowModalComponent {\n  constructor(dialogRef, dialog, snackbarService, bucketService, boardService, workflowService, canvasService, groupService, data) {\n    this.dialogRef = dialogRef;\n    this.dialog = dialog;\n    this.snackbarService = snackbarService;\n    this.bucketService = bucketService;\n    this.boardService = boardService;\n    this.workflowService = workflowService;\n    this.canvasService = canvasService;\n    this.groupService = groupService;\n    this.data = data;\n    // Properties\n    this.selected = new FormControl(0); // Controls which tab is currently selected (0: Buckets, 1: Create, 2: Manage)\n    this.workflows = []; // List of workflows\n    this.bucketName = '';\n    this.workflowName = '';\n    this.classificationTheme = '';\n    this.showDelete = false;\n    // Common fields between all workflows\n    this.WorkflowType = WorkflowType;\n    this.taskWorkflowType = TaskWorkflowType;\n    this.workflowType = WorkflowType.GENERATION;\n    this.sourceOptions = [];\n    this.destOptions = [];\n    this.distributionDestinations = [];\n    this.distributionWorkflowType = DistributionWorkflowType.RANDOM;\n    this.removeFromSource = false;\n    // Fields for peer review workflow and generation task workflow creation\n    this.groupOptions = [];\n    this.assignedGroups = [];\n    this.commentsRequired = false;\n    this.tagsRequired = false;\n    this.postGeneration = 1;\n    this.numCategoryGeneration = 2;\n    this.bucketNameFormControl = new FormControl('valid', [Validators.required, this._forbiddenNameValidator()]);\n    this.workflowNameFormControl = new FormControl('valid', [Validators.required]);\n    this.sourceFormControl = new FormControl('valid', [Validators.required]);\n    this.destinationFormControl = new FormControl('valid', [Validators.required]);\n    this.numClassificationsFormControl = new FormControl('valid', [Validators.required]);\n    this.classificationThemeFormControl = new FormControl('valid', [Validators.required]);\n    this.sourceDestinationMatchError = new FormControl(false);\n    this.groupsFormControl = new FormControl('valid', [Validators.required]);\n    this.promptFormControl = new FormControl('valid', [Validators.required]);\n    this.workflowTypeFormControl = new FormControl('valid', [Validators.required]);\n    this.removeFromSourceFormControl = new FormControl('valid', [Validators.required]);\n    this.tagsFormControl = new FormControl();\n    this.matcher = new MyErrorStateMatcher();\n    this.snackbarConfig = new MatSnackBarConfig();\n    this.snackbarConfig.duration = 5000;\n  }\n  ngOnInit() {\n    // Initialization\n    this.board = this.data.board; // Load the current board from the passed data\n    this.tags = this.data.board.tags; // Load tags associated with the board\n    this.loadGroups(); // Load groups associated with the project\n    this.upvoteLimit = this.data.board.upvoteLimit; // Load the upvote limit for the board\n    this.loadBucketsBoards(); // Load buckets and boards for source/destination options\n    this.loadWorkflows(); // Load existing workflows for the board\n  }\n  // Fetches groups for the project\n  loadGroups() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.groupOptions = yield _this.groupService.getByProjectId(_this.data.project.projectID);\n    })();\n  }\n  // Loads buckets and boards, updates source/destination options.\n  loadBucketsBoards() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.sourceOptions = [];\n      _this2.destOptions = [];\n      _this2.boardBuckets = [];\n      try {\n        // 1. Fetch Project Boards\n        const projectBoards = yield _this2.boardService.getMultipleBy(_this2.data.project.boards, {\n          scope: BoardScope.PROJECT_SHARED\n        });\n        // Add project boards FIRST\n        _this2.destOptions = _this2.destOptions.concat(projectBoards);\n        _this2.sourceOptions = _this2.sourceOptions.concat(projectBoards);\n        // 2. Fetch Buckets\n        const buckets = yield _this2.bucketService.getAllByBoard(_this2.data.board.boardID);\n        _this2.boardBuckets = _this2.boardBuckets.concat(buckets);\n        // 3. Add buckets SECOND\n        _this2.sourceOptions = _this2.sourceOptions.concat(buckets);\n        _this2.destOptions = _this2.destOptions.concat(buckets);\n      } catch (error) {\n        console.error('Error loading boards and buckets:', error);\n      }\n    })();\n  }\n  // Fetches workflows for the board from the workflowService.\n  loadWorkflows() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.workflowService.getAll(_this3.board.boardID).then(workflows => {\n        _this3.workflows = [];\n        workflows.forEach(workflow => {\n          _this3.workflows.push(workflow);\n        });\n      });\n    })();\n  }\n  // Creates a new bucket and updates UI.\n  createBucket() {\n    const bucket = {\n      bucketID: generateUniqueID(),\n      boardID: this.data.board.boardID,\n      name: this.bucketName,\n      posts: [],\n      addedToView: false\n    };\n    this.bucketService.create(bucket).then(() => {\n      var _a, _b;\n      this.loadBucketsBoards();\n      this.openSnackBar('Bucket: ' + bucket.name + ' created succesfully!');\n      this.bucketNameFormControl.reset();\n      if ((_a = this.data) === null || _a === void 0 ? void 0 : _a.onBucketCreation) {\n        (_b = this.data) === null || _b === void 0 ? void 0 : _b.onBucketCreation(bucket);\n      }\n    });\n  }\n  // Toggles visibility of bucket deletion controls.\n  toggleDeleteBoard() {\n    this.showDelete = !this.showDelete;\n  }\n  // Opens a confirmation dialog and deletes the bucket.\n  deleteBucket(bucket) {\n    this.dialog.open(ConfirmModalComponent, {\n      width: '500px',\n      data: {\n        title: 'Confirmation',\n        message: 'Are you sure you want to delete this bucket?',\n        handleConfirm: () => {\n          this.bucketService.delete(bucket.bucketID).then(() => {\n            this.loadBucketsBoards();\n            this.openSnackBar('Bucket: ' + bucket.name + ' deleted succesfully!');\n          });\n        }\n      }\n    });\n  }\n  // Creates a distribution workflow.\n  createDistributionWorkflow() {\n    var _this4 = this;\n    if (!this._distributionWorkflowTypeSelected()) return;\n    const workflow = this._assembleDistributionWorkflow();\n    this.workflowService.createDistribution(workflow).then( /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this4.loadWorkflows();\n      _this4.selected.setValue(2);\n      _this4._clearWorkflowForm();\n    }));\n  }\n  // Creates a peer review workflow.\n  createPeerReviewWorkflow() {\n    var _this5 = this;\n    if (!this._actionSelected()) return;\n    const workflow = this._assemblePeerReviewWorkflow();\n    this.workflowService.createTask(workflow).then( /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this5.loadWorkflows();\n      _this5.selected.setValue(2);\n      _this5._clearWorkflowForm();\n    }));\n  }\n  // Creates a generation task workflow.\n  createGenerationTaskWorkflow() {\n    var _this6 = this;\n    if (!this._validGenerationTaskWorkflow()) return;\n    const workflow = this._assembleGenerationTaskWorkflow();\n    this.workflowService.createTask(workflow).then( /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this6.loadWorkflows();\n      _this6.selected.setValue(2);\n      _this6._clearWorkflowForm();\n    }));\n  }\n  // Creates a AI classification workflow.\n  createAIClassificationWorkflow() {\n    var _this7 = this;\n    if (!this._validAIClassificationWorkflow()) return;\n    const workflow = this._assembleAIClassificationWorkflow();\n    this.workflowService.createAIClassification(workflow).then( /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this7.loadWorkflows();\n      _this7.selected.setValue(2);\n      _this7._clearWorkflowForm();\n    }));\n  }\n  // Runs the specified workflow (task or distribution).\n  runWorkflow(e, workflow) {\n    var _this8 = this;\n    e.stopPropagation();\n    if (this._isTaskWorkflow(workflow)) {\n      this.canvasService.runTaskWorkflow(workflow).then(() => {\n        workflow.active = true;\n        this.openSnackBar('Workflow: ' + workflow.name + ' now active!');\n      }).catch(() => {\n        this.openSnackBar('Unable to activate task workflow! Something went wrong.');\n      });\n    } else if (this._isAIClassificationWorkflow(workflow)) {\n      this.canvasService.runAIClassificationWorkflow(workflow).then( /*#__PURE__*/_asyncToGenerator(function* () {\n        _this8.openSnackBar('Workflow: ' + workflow.name + ' completed successfully!');\n      })).catch(() => {\n        this.openSnackBar('Cancelled AI workflow! Something went wrong.');\n      });\n    } else {\n      this.canvasService.runDistributionWorkflow(workflow).then( /*#__PURE__*/_asyncToGenerator(function* () {\n        _this8.openSnackBar('Workflow: ' + workflow.name + ' completed successfully!');\n      })).catch(() => {\n        this.openSnackBar('Cancelled distribution workflow! Something went wrong.');\n      });\n    }\n  }\n  // Opens a confirmation dialog and deletes the workflow.\n  deleteWorkflow(e, workflow) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      e.stopPropagation();\n      _this9.dialog.open(ConfirmModalComponent, {\n        width: '500px',\n        data: {\n          title: 'Confirmation',\n          message: 'Are you sure you want to delete this workflow?',\n          handleConfirm: function () {\n            var _ref7 = _asyncToGenerator(function* () {\n              if (_this9._isTaskWorkflow(workflow)) {\n                yield _this9.workflowService.removeTask(workflow.workflowID);\n              } else {\n                yield _this9.workflowService.removeDistribution(workflow.workflowID);\n              }\n              _this9.workflows = _this9.workflows.filter(w => w.workflowID !== workflow.workflowID);\n            });\n            return function handleConfirm() {\n              return _ref7.apply(this, arguments);\n            };\n          }()\n        }\n      });\n    })();\n  }\n  // Closes the dialog.\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  // Displays a snackbar message.\n  openSnackBar(message) {\n    this.snackbarService.queueSnackbar(message);\n  }\n  // Resets the workflow creation form.\n  _clearWorkflowForm() {\n    this.workflowNameFormControl.reset();\n    this.sourceFormControl.reset();\n    this.destinationFormControl.reset();\n    this.tagsFormControl.reset();\n    this.workflowTypeFormControl.reset();\n    this.classificationThemeFormControl.reset();\n    this.removeFromSourceFormControl.reset();\n    this.removeFromSource = false;\n    this.postGeneration = 1;\n    this.numCategoryGeneration = 2;\n  }\n  // Type guard to check if an object is a Board.\n  _isBoard(object) {\n    return object.tags !== undefined;\n  }\n  // Type guard to check if an object is a TaskWorkflow.\n  _isTaskWorkflow(object) {\n    return object.requiredActions !== undefined;\n  }\n  // Type guard to check if an object is a DistributionWorkflow.\n  _isDistributionWorkflow(object) {\n    return object.removeFromSource !== undefined;\n  }\n  // Type guard to check if an object is a AIClassificationWorkflow.\n  _isAIClassificationWorkflow(object) {\n    return object.classificationTheme !== undefined;\n  }\n  // Checks if a distribution workflow form is valid.\n  _validDistributionWorkflow() {\n    const allowMatch = this.distributionDestinations.length > 1;\n    const isMatch = this.distributionSource && this.distributionDestinations.some(dest => dest.name === this.distributionSource.name);\n    this.sourceDestinationMatchError.setValue(!allowMatch && isMatch);\n    return (allowMatch || !isMatch) && this.workflowNameFormControl.valid && this.sourceFormControl.valid && this.destinationFormControl.valid;\n  }\n  _ppbSelected() {\n    return this.postsPerBucket != null && this.postsPerBucket > 0;\n  }\n  _distributionWorkflowTypeSelected() {\n    return this.distributionWorkflowType === DistributionWorkflowType.RANDOM && this.postsPerBucket > 0 || this.distributionWorkflowType === DistributionWorkflowType.UPVOTES && this.upvoteLimit || this.distributionWorkflowType === DistributionWorkflowType.TAG && this.selectedTag;\n  }\n  _distributionWorkflowTypeData() {\n    if (this.distributionWorkflowType === DistributionWorkflowType.RANDOM) return this.postsPerBucket;else if (this.distributionWorkflowType === DistributionWorkflowType.UPVOTES) return this.upvoteLimit;else return this.selectedTag;\n  }\n  _assembleDistributionWorkflow() {\n    const workflowID = generateUniqueID();\n    const workflow = {\n      workflowID: workflowID,\n      boardID: this.board.boardID,\n      active: false,\n      name: this.workflowName,\n      source: this._mapToContainer(this.distributionSource),\n      destinations: this._mapToContainers(this.distributionDestinations),\n      distributionWorkflowType: {\n        type: this.distributionWorkflowType,\n        data: this._distributionWorkflowTypeData()\n      },\n      removeFromSource: this.removeFromSource\n    };\n    return workflow;\n  }\n  _validPeerReviewWorkflow() {\n    return this.workflowNameFormControl.valid && this.sourceFormControl.valid && this.destinationFormControl.valid && this.groupsFormControl.valid && this.promptFormControl.valid && this._actionSelected();\n  }\n  _validGenerationTaskWorkflow() {\n    return this.workflowNameFormControl.valid && this.destinationFormControl.valid && this.groupsFormControl.valid && this.promptFormControl.valid;\n  }\n  _validAIClassificationWorkflow() {\n    return this.workflowNameFormControl.valid && this.sourceFormControl.valid && this.classificationThemeFormControl.valid;\n  }\n  _actionSelected() {\n    return this.commentsRequired || this.tagsRequired;\n  }\n  _assemblePeerReviewWorkflow() {\n    const workflowID = generateUniqueID();\n    const actions = [];\n    if (this.commentsRequired) actions.push({\n      type: TaskActionType.COMMENT,\n      amountRequired: 1\n    });\n    if (this.tagsRequired) actions.push({\n      type: TaskActionType.TAG,\n      amountRequired: 1\n    });\n    const workflow = {\n      workflowID: workflowID,\n      boardID: this.board.boardID,\n      active: false,\n      name: this.workflowName,\n      source: this._mapToContainer(this.taskSource),\n      destinations: [this._mapToContainer(this.taskDestination)],\n      prompt: this.prompt,\n      requiredActions: actions,\n      assignedGroups: this.assignedGroups.map(g => g.groupID),\n      type: this.taskWorkflowType.PEER_REVIEW\n    };\n    return workflow;\n  }\n  _assembleGenerationTaskWorkflow() {\n    const workflowID = generateUniqueID();\n    const actions = [];\n    if (this.postGeneration) actions.push({\n      type: TaskActionType.CREATE_POST,\n      amountRequired: this.postGeneration\n    });\n    if (this.commentsRequired) actions.push({\n      type: TaskActionType.COMMENT,\n      amountRequired: 1\n    });\n    if (this.tagsRequired) actions.push({\n      type: TaskActionType.TAG,\n      amountRequired: 1\n    });\n    const workflow = {\n      workflowID: workflowID,\n      boardID: this.board.boardID,\n      active: false,\n      name: this.workflowName,\n      source: this._placeholderContainer(),\n      destinations: [this._mapToContainer(this.taskDestination)],\n      prompt: this.prompt,\n      requiredActions: actions,\n      assignedGroups: this.assignedGroups.map(g => g.groupID),\n      type: this.taskWorkflowType.GENERATION\n    };\n    return workflow;\n  }\n  _assembleAIClassificationWorkflow() {\n    const workflowID = generateUniqueID();\n    const workflow = {\n      workflowID: workflowID,\n      boardID: this.board.boardID,\n      active: false,\n      name: this.workflowName,\n      source: this._mapToContainer(this.taskSource),\n      destinations: [this._placeholderContainer()],\n      classificationTheme: this.classificationTheme,\n      numCategoryGeneration: this.numCategoryGeneration,\n      removeFromSource: this.removeFromSource\n    };\n    return workflow;\n  }\n  _validBucketForm() {\n    return this.bucketNameFormControl.valid;\n  }\n  _forbiddenNameValidator() {\n    return control => {\n      const forbidden = this.board ? control.value == this.board.name : false;\n      return forbidden ? {\n        forbidden: {\n          value: control.value\n        }\n      } : null;\n    };\n  }\n  _mapToContainers(bucketsBoards) {\n    return bucketsBoards.map(bOrB => this._mapToContainer(bOrB));\n  }\n  _mapToContainer(bucketBoard) {\n    if (this._isBoard(bucketBoard)) {\n      return {\n        type: ContainerType.BOARD,\n        id: bucketBoard.boardID,\n        name: bucketBoard.name\n      };\n    } else {\n      return {\n        type: ContainerType.BUCKET,\n        id: bucketBoard.bucketID,\n        name: bucketBoard.name\n      };\n    }\n  }\n  // Default to current board if no source required\n  _placeholderContainer() {\n    return {\n      type: ContainerType.WORKFLOW,\n      id: this.board.boardID,\n      name: 'CK Workspace'\n    };\n  }\n}\nCreateWorkflowModalComponent.ɵfac = function CreateWorkflowModalComponent_Factory(t) {\n  return new (t || CreateWorkflowModalComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.SnackbarService), i0.ɵɵdirectiveInject(i3.BucketService), i0.ɵɵdirectiveInject(i4.BoardService), i0.ɵɵdirectiveInject(i5.WorkflowService), i0.ɵɵdirectiveInject(i6.CanvasService), i0.ɵɵdirectiveInject(i7.GroupService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\nCreateWorkflowModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateWorkflowModalComponent,\n  selectors: [[\"app-create-workflow-modal\"]],\n  decls: 46,\n  vars: 30,\n  consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"dynamicHeight\", \"\", \"animationDuration\", \"0ms\", 3, \"selectedIndex\", \"selectedIndexChange\"], [\"label\", \"Manage Buckets\"], [2, \"margin-top\", \"20px\"], [2, \"display\", \"flex\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"matInput\", \"\", 3, \"formControl\", \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"mat-button\", \"\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", 1, \"delete-toggler\", 3, \"click\"], [\"style\", \"display: grid; grid-template-columns: 1fr 1fr\", 4, \"ngIf\"], [\"label\", \"Create Workflow\"], [3, \"ngModel\", \"ngModelChange\"], [2, \"margin-top\", \"20px\", 3, \"checked\", \"value\"], [\"label\", \"Manage Workflows\"], [\"style\", \"color: grey; text-align: center\", 4, \"ngIf\"], [\"class\", \"list-accordion\", \"multi\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", 3, \"disabled\", \"click\"], [2, \"display\", \"grid\", \"grid-template-columns\", \"1fr 1fr\"], [\"style\", \"\\n            display: flex;\\n            margin: 10px;\\n            padding: 10px;\\n            justify-content: space-between;\\n          \", 4, \"ngFor\", \"ngForOf\"], [2, \"display\", \"flex\", \"margin\", \"10px\", \"padding\", \"10px\", \"justify-content\", \"space-between\"], [2, \"font-size\", \"small\", \"margin\", \"auto 0\"], [\"mat-icon-button\", \"\", 3, \"click\"], [2, \"color\", \"red\"], [\"appearance\", \"fill\", 2, \"margin-top\", \"10px\"], [1, \"source-destination\"], [\"appearance\", \"fill\", 2, \"font-size\", \"14px !important\"], [3, \"ngModel\", \"formControl\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"arrow-icon-lg\"], [\"multiple\", \"\", 3, \"ngModel\", \"formControl\", \"ngModelChange\"], [\"value\", \"RANDOM\"], [\"value\", \"TAG\"], [\"value\", \"UPVOTES\"], [2, \"margin\", \"20px 0\"], [3, \"value\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"type\", \"number\", \"min\", \"0\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"fill\"], [2, \"font-weight\", \"bold\"], [\"min\", \"1\", \"step\", \"1\", \"thumbLabel\", \"\", 1, \"slider\", 3, \"max\", \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"formControl\", \"errorStateMatcher\", \"ngModelChange\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\", \"gap\", \"10px\"], [\"multiple\", \"\", 3, \"ngModel\", \"formControl\", \"errorStateMatcher\", \"ngModelChange\"], [\"appearance\", \"fill\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"placeholder\", \"Please use tags to categorize each idea (e.g., financial, transportation, technology)\", 3, \"formControl\", \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\", \"gap\", \"10px\"], [\"min\", \"1\", \"max\", \"10\", \"step\", \"1\", \"thumbLabel\", \"\", 1, \"slider\", 3, \"ngModel\", \"ngModelChange\"], [\"min\", \"2\", \"max\", \"4\", \"step\", \"1\", \"thumbLabel\", \"\", 1, \"slider\", 3, \"ngModel\", \"ngModelChange\"], [2, \"color\", \"grey\", \"text-align\", \"center\"], [\"multi\", \"\", 1, \"list-accordion\"], [2, \"padding-right\", \"30px\", 3, \"ngStyle\"], [\"color\", \"primary\", \"selected\", \"\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", 3, \"disabled\", \"click\"], [\"id\", \"workflow-action-run\"], [\"id\", \"workflow-action-delete\"], [1, \"source-dest-info\"], [1, \"arrow-icon-md\"], [4, \"ngFor\", \"ngForOf\"], [\"color\", \"primary\", \"selected\", \"\"], [\"color\", \"accent\", \"selected\", \"\", 2, \"margin\", \"0 5px\"], [\"selected\", \"\", 2, \"margin\", \"0 5px\", 3, \"ngStyle\"], [\"color\", \"accent\", \"selected\", \"\", \"style\", \"margin: 0 5px\", 4, \"ngFor\", \"ngForOf\"], [\"color\", \"warn\", \"selected\", \"\"]],\n  template: function CreateWorkflowModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"CK Workflows\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"mat-tab-group\", 2);\n      i0.ɵɵlistener(\"selectedIndexChange\", function CreateWorkflowModalComponent_Template_mat_tab_group_selectedIndexChange_3_listener($event) {\n        return ctx.selected.setValue($event);\n      });\n      i0.ɵɵelementStart(4, \"mat-tab\", 3)(5, \"h2\", 4);\n      i0.ɵɵtext(6, \"Create New Bucket\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"mat-form-field\", 6)(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Bucket Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.bucketName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, CreateWorkflowModalComponent_mat_error_12_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵtemplate(13, CreateWorkflowModalComponent_mat_error_13_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, CreateWorkflowModalComponent_button_14_Template, 2, 1, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_Template_button_click_16_listener() {\n        return ctx.toggleDeleteBoard();\n      });\n      i0.ɵɵtext(17);\n      i0.ɵɵelementStart(18, \"mat-icon\");\n      i0.ɵɵtext(19);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(20, CreateWorkflowModalComponent_div_20_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"mat-tab\", 12)(22, \"mat-radio-group\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateWorkflowModalComponent_Template_mat_radio_group_ngModelChange_22_listener($event) {\n        return ctx.workflowType = $event;\n      });\n      i0.ɵɵelementStart(23, \"mat-radio-button\", 14);\n      i0.ɵɵtext(24, \"Generation Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"mat-radio-button\", 14);\n      i0.ɵɵtext(26, \"Peer Review\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-radio-button\", 14);\n      i0.ɵɵtext(28, \"Distribution\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"mat-radio-button\", 14);\n      i0.ɵɵtext(30, \"AI Classification\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(31, CreateWorkflowModalComponent_div_31_Template, 41, 20, \"div\", 8);\n      i0.ɵɵtemplate(32, CreateWorkflowModalComponent_div_32_Template, 43, 25, \"div\", 8);\n      i0.ɵɵtemplate(33, CreateWorkflowModalComponent_div_33_Template, 37, 20, \"div\", 8);\n      i0.ɵɵtemplate(34, CreateWorkflowModalComponent_div_34_Template, 29, 16, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"mat-tab\", 15);\n      i0.ɵɵtemplate(36, CreateWorkflowModalComponent_h3_36_Template, 2, 0, \"h3\", 16);\n      i0.ɵɵtemplate(37, CreateWorkflowModalComponent_mat_accordion_37_Template, 31, 14, \"mat-accordion\", 17);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(38, \"div\", 18)(39, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function CreateWorkflowModalComponent_Template_button_click_39_listener() {\n        return ctx.onNoClick();\n      });\n      i0.ɵɵtext(40, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(41, CreateWorkflowModalComponent_button_41_Template, 2, 1, \"button\", 9);\n      i0.ɵɵtemplate(42, CreateWorkflowModalComponent_button_42_Template, 2, 1, \"button\", 9);\n      i0.ɵɵtemplate(43, CreateWorkflowModalComponent_button_43_Template, 2, 1, \"button\", 9);\n      i0.ɵɵtemplate(44, CreateWorkflowModalComponent_button_44_Template, 2, 1, \"button\", 9);\n      i0.ɵɵtemplate(45, CreateWorkflowModalComponent_button_45_Template, 2, 1, \"button\", 9);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"selectedIndex\", ctx.selected.value);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formControl\", ctx.bucketNameFormControl)(\"errorStateMatcher\", ctx.matcher)(\"ngModel\", ctx.bucketName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.bucketNameFormControl.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.bucketNameFormControl.hasError(\"forbidden\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selected.value === 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" Delete Buckets (\", ctx.boardBuckets.length, \") \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.showDelete ? \"expand_less\" : \"expand_more\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDelete);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.workflowType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"checked\", true)(\"value\", ctx.WorkflowType.GENERATION);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", false)(\"value\", ctx.WorkflowType.TASK);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", false)(\"value\", ctx.WorkflowType.DISTRIBUTION);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", false)(\"value\", ctx.WorkflowType.AI_CLASSIFICATION);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.workflowType === ctx.WorkflowType.DISTRIBUTION);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.workflowType === ctx.WorkflowType.TASK);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.workflowType === ctx.WorkflowType.GENERATION);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.workflowType === ctx.WorkflowType.AI_CLASSIFICATION);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.workflows || ctx.workflows.length === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.workflows);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.selected.value === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selected.value === 1 && ctx.workflowType === ctx.WorkflowType.DISTRIBUTION);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selected.value === 1 && ctx.workflowType === ctx.WorkflowType.TASK);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selected.value === 1 && ctx.workflowType === ctx.WorkflowType.GENERATION);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selected.value === 1 && ctx.workflowType === ctx.WorkflowType.AI_CLASSIFICATION);\n    }\n  },\n  styles: [\".list-accordion[_ngcontent-%COMP%] {\\n  padding: 10px;\\n}\\n\\n.list-accordion[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .list-accordion[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\\n  flex-basis: 0;\\n  align-items: center;\\n}\\n\\n.list-accordion[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\\n  justify-content: space-between;\\n}\\n\\n.source-destination[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n}\\n.source-destination[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  display: block;\\n}\\n.source-destination[_ngcontent-%COMP%]   mat-error[_ngcontent-%COMP%] {\\n  width: 100%;\\n  font-size: 75%;\\n}\\n\\n.arrow-icon-md[_ngcontent-%COMP%] {\\n  width: 2rem;\\n  height: 2rem;\\n  font-size: 2rem;\\n}\\n\\n.arrow-icon-lg[_ngcontent-%COMP%] {\\n  width: 3rem;\\n  height: 3rem;\\n  font-size: 3rem;\\n}\\n\\n.source-dest-info[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 20px 0px;\\n}\\n\\n#workflow-action-run[_ngcontent-%COMP%] {\\n  padding: 0px 5px;\\n  color: green;\\n}\\n\\n#workflow-action-delete[_ngcontent-%COMP%] {\\n  padding: 0px 5px;\\n  color: rgba(255, 0, 0, 0.708);\\n}\\n\\n#bucket-action-delete[_ngcontent-%COMP%] {\\n  position: absolute;\\n  right: 0;\\n}\\n\\n.delete-toggler[_ngcontent-%COMP%] {\\n  padding: 0 !important;\\n}\\n\\n.mat-radio-button[_ngcontent-%COMP%]    ~ .mat-radio-button[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n}\\n\\n.mat-form-field[_ngcontent-%COMP%] {\\n  margin-bottom: -10px;\\n}\\n\\nmat-chip[_ngcontent-%COMP%] {\\n  height: auto;\\n  line-height: 1.1em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtd29ya2Zsb3ctbW9kYWwvY3JlYXRlLXdvcmtmbG93LW1vZGFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQUNGOztBQUVBOztFQUVFLGFBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsOEJBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0FBQ0Y7QUFBRTtFQUNFLGNBQUE7QUFFSjtBQUFFO0VBQ0UsV0FBQTtFQUNBLGNBQUE7QUFFSjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFFQSxpQkFBQTtBQUFGOztBQUdBO0VBQ0UsZ0JBQUE7RUFDQSxZQUFBO0FBQUY7O0FBR0E7RUFDRSxnQkFBQTtFQUNBLDZCQUFBO0FBQUY7O0FBR0E7RUFDRSxrQkFBQTtFQUNBLFFBQUE7QUFBRjs7QUFHQTtFQUNFLHFCQUFBO0FBQUY7O0FBR0E7RUFDRSxpQkFBQTtBQUFGOztBQUdBO0VBQ0Usb0JBQUE7QUFBRjs7QUFHQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtBQUFGIiwic291cmNlc0NvbnRlbnQiOlsiLmxpc3QtYWNjb3JkaW9uIHtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuLmxpc3QtYWNjb3JkaW9uIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci10aXRsZSxcbi5saXN0LWFjY29yZGlvbiAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItZGVzY3JpcHRpb24ge1xuICBmbGV4LWJhc2lzOiAwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubGlzdC1hY2NvcmRpb24gLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9uIHtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uc291cmNlLWRlc3RpbmF0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBkaXYge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIG1hdC1lcnJvciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiA3NSU7XG4gIH1cbn1cblxuLmFycm93LWljb24tbWQge1xuICB3aWR0aDogMnJlbTtcbiAgaGVpZ2h0OiAycmVtO1xuICBmb250LXNpemU6IDJyZW07XG59XG5cbi5hcnJvdy1pY29uLWxnIHtcbiAgd2lkdGg6IDNyZW07XG4gIGhlaWdodDogM3JlbTtcbiAgZm9udC1zaXplOiAzcmVtO1xufVxuXG4uc291cmNlLWRlc3QtaW5mbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG5cbiAgcGFkZGluZzogMjBweCAwcHg7XG59XG5cbiN3b3JrZmxvdy1hY3Rpb24tcnVuIHtcbiAgcGFkZGluZzogMHB4IDVweDtcbiAgY29sb3I6IGdyZWVuO1xufVxuXG4jd29ya2Zsb3ctYWN0aW9uLWRlbGV0ZSB7XG4gIHBhZGRpbmc6IDBweCA1cHg7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMCwgMCwgMC43MDgpO1xufVxuXG4jYnVja2V0LWFjdGlvbi1kZWxldGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xufVxuXG4uZGVsZXRlLXRvZ2dsZXIge1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtcmFkaW8tYnV0dG9uIH4gLm1hdC1yYWRpby1idXR0b24ge1xuICBtYXJnaW4tbGVmdDogMTZweDtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogLTEwcHg7XG59XG5cbm1hdC1jaGlwIHtcbiAgaGVpZ2h0OiBhdXRvOyAvLyBvdmVycmlkZXMgZGVmYXVsdCBoZWlnaHQgMXB4XG4gIGxpbmUtaGVpZ2h0OiAxLjFlbTsgLy8ga2VlcHMgY2hpcCBmcm9tIFwic3F1YXJpbmcgb3V0XCIgYXQgb25lIGxpbmVcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","MAT_DIALOG_DATA","MatSnackBarConfig","BoardScope","ContainerType","DistributionWorkflowType","TaskActionType","WorkflowType","TaskWorkflowType","MyErrorStateMatcher","generateUniqueID","ConfirmModalComponent","i0","CreateWorkflowModalComponent","constructor","dialogRef","dialog","snackbarService","bucketService","boardService","workflowService","canvasService","groupService","data","GENERATION","RANDOM","required","_forbiddenNameValidator","snackbarConfig","duration","ngOnInit","board","tags","loadGroups","upvoteLimit","loadBucketsBoards","loadWorkflows","groupOptions","getByProjectId","project","projectID","sourceOptions","destOptions","boardBuckets","projectBoards","getMultipleBy","boards","scope","PROJECT_SHARED","concat","buckets","getAllByBoard","boardID","error","console","getAll","then","workflows","forEach","workflow","push","createBucket","bucket","bucketID","name","bucketName","posts","addedToView","create","openSnackBar","bucketNameFormControl","reset","onBucketCreation","toggleDeleteBoard","showDelete","deleteBucket","open","width","title","message","handleConfirm","delete","createDistributionWorkflow","_distributionWorkflowTypeSelected","_assembleDistributionWorkflow","createDistribution","selected","setValue","_clearWorkflowForm","createPeerReviewWorkflow","_actionSelected","_assemblePeerReviewWorkflow","createTask","createGenerationTaskWorkflow","_validGenerationTaskWorkflow","_assembleGenerationTaskWorkflow","createAIClassificationWorkflow","_validAIClassificationWorkflow","_assembleAIClassificationWorkflow","createAIClassification","runWorkflow","e","stopPropagation","_isTaskWorkflow","runTaskWorkflow","active","catch","_isAIClassificationWorkflow","runAIClassificationWorkflow","runDistributionWorkflow","deleteWorkflow","removeTask","workflowID","removeDistribution","filter","w","onNoClick","close","queueSnackbar","workflowNameFormControl","sourceFormControl","destinationFormControl","tagsFormControl","workflowTypeFormControl","classificationThemeFormControl","removeFromSourceFormControl","removeFromSource","postGeneration","numCategoryGeneration","_isBoard","object","undefined","requiredActions","_isDistributionWorkflow","classificationTheme","_validDistributionWorkflow","allowMatch","distributionDestinations","length","isMatch","distributionSource","some","dest","sourceDestinationMatchError","valid","_ppbSelected","postsPerBucket","distributionWorkflowType","UPVOTES","TAG","selectedTag","_distributionWorkflowTypeData","workflowName","source","_mapToContainer","destinations","_mapToContainers","type","_validPeerReviewWorkflow","groupsFormControl","promptFormControl","commentsRequired","tagsRequired","actions","COMMENT","amountRequired","taskSource","taskDestination","prompt","assignedGroups","map","g","groupID","taskWorkflowType","PEER_REVIEW","CREATE_POST","_placeholderContainer","_validBucketForm","control","forbidden","value","bucketsBoards","bOrB","bucketBoard","BOARD","id","BUCKET","WORKFLOW","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/create-workflow-modal/create-workflow-modal.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/create-workflow-modal/create-workflow-modal.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatDialog,\n} from '@angular/material/dialog';\nimport { MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { Board, BoardScope } from 'src/app/models/board';\nimport { Tag } from 'src/app/models/tag';\nimport Bucket from 'src/app/models/bucket';\nimport { Group } from 'src/app/models/group';\nimport {\n  Container,\n  ContainerType,\n  DistributionWorkflow,\n  DistributionWorkflowType,\n  TaskAction,\n  TaskActionType,\n  TaskWorkflow,\n  WorkflowType,\n  TaskWorkflowType,\n  AIClassificationWorkflow,\n} from 'src/app/models/workflow';\nimport { BoardService } from 'src/app/services/board.service';\nimport { BucketService } from 'src/app/services/bucket.service';\nimport { CanvasService } from 'src/app/services/canvas.service';\nimport { GroupService } from 'src/app/services/group.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { WorkflowService } from 'src/app/services/workflow.service';\nimport { MyErrorStateMatcher } from 'src/app/utils/ErrorStateMatcher';\nimport { generateUniqueID } from 'src/app/utils/Utils';\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\n\n@Component({\n  selector: 'app-create-workflow-modal',\n  templateUrl: './create-workflow-modal.component.html',\n  styleUrls: ['./create-workflow-modal.component.scss'],\n})\nexport class CreateWorkflowModalComponent implements OnInit {\n  // Properties\n  selected = new FormControl(0); // Controls which tab is currently selected (0: Buckets, 1: Create, 2: Manage)\n\n  // Data models\n  board: Board; // Current board\n  buckets: Bucket[]; // All buckets\n  boardBuckets: Bucket[]; // Buckets associated with the current board\n  workflows: any[] = []; // List of workflows\n  tags: Tag[]; // Available tags for the board\n  upvoteLimit: number; // Upvote limit for the board\n  selectedTag: string; // Selected tag for filtering (if applicable)\n\n  bucketName = '';\n  workflowName = '';\n  classificationTheme = '';\n  showDelete = false;\n\n  // Common fields between all workflows\n  WorkflowType: typeof WorkflowType = WorkflowType;\n  taskWorkflowType: typeof TaskWorkflowType = TaskWorkflowType;\n  workflowType: WorkflowType = WorkflowType.GENERATION;\n  sourceOptions: (Bucket | Board)[] = [];\n  destOptions: (Bucket | Board)[] = [];\n\n  // Fields for distribution workflow creation\n  distributionSource: Board | Bucket;\n  distributionDestinations: (Bucket | Board)[] = [];\n  postsPerBucket: number;\n  distributionWorkflowType: DistributionWorkflowType =\n    DistributionWorkflowType.RANDOM;\n  removeFromSource = false;\n\n  // Fields for peer review workflow and generation task workflow creation\n  groupOptions: Group[] = [];\n  taskSource: Board | Bucket;\n  taskDestination: Board | Bucket;\n  prompt: string;\n  assignedGroups: Group[] = [];\n  commentsRequired = false;\n  tagsRequired = false;\n  postGeneration = 1;\n  numCategoryGeneration = 2;\n\n  bucketNameFormControl = new FormControl('valid', [\n    Validators.required,\n    this._forbiddenNameValidator(),\n  ]);\n  workflowNameFormControl = new FormControl('valid', [Validators.required]);\n  sourceFormControl = new FormControl('valid', [Validators.required]);\n  destinationFormControl = new FormControl('valid', [Validators.required]);\n  numClassificationsFormControl = new FormControl('valid', [Validators.required]);\n  classificationThemeFormControl = new FormControl('valid', [Validators.required]);\n\n  sourceDestinationMatchError = new FormControl(false);\n\n  groupsFormControl = new FormControl('valid', [Validators.required]);\n  promptFormControl = new FormControl('valid', [Validators.required]);\n\n  workflowTypeFormControl = new FormControl('valid', [Validators.required]);\n  removeFromSourceFormControl = new FormControl('valid', [Validators.required]);\n\n  tagsFormControl = new FormControl();\n\n  matcher = new MyErrorStateMatcher();\n  snackbarConfig: MatSnackBarConfig;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateWorkflowModalComponent>,\n    public dialog: MatDialog,\n    private snackbarService: SnackbarService,\n    public bucketService: BucketService,\n    public boardService: BoardService,\n    public workflowService: WorkflowService,\n    public canvasService: CanvasService,\n    public groupService: GroupService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.snackbarConfig = new MatSnackBarConfig();\n    this.snackbarConfig.duration = 5000;\n  }\n\n  ngOnInit(): void {\n    // Initialization\n    this.board = this.data.board; // Load the current board from the passed data\n    this.tags = this.data.board.tags; // Load tags associated with the board\n    this.loadGroups(); // Load groups associated with the project\n    this.upvoteLimit = this.data.board.upvoteLimit; // Load the upvote limit for the board\n    this.loadBucketsBoards(); // Load buckets and boards for source/destination options\n    this.loadWorkflows(); // Load existing workflows for the board\n  }\n\n  // Fetches groups for the project\n  async loadGroups() {\n    this.groupOptions = await this.groupService.getByProjectId(\n      this.data.project.projectID\n    );\n  }\n\n  // Loads buckets and boards, updates source/destination options.\n  async loadBucketsBoards(): Promise<void> {\n    this.sourceOptions = [];\n    this.destOptions = [];\n    this.boardBuckets = [];\n\n    try {\n      // 1. Fetch Project Boards\n      const projectBoards = await this.boardService.getMultipleBy(\n        this.data.project.boards,\n        {\n          scope: BoardScope.PROJECT_SHARED,\n        }\n      );\n\n      // Add project boards FIRST\n      this.destOptions = this.destOptions.concat(projectBoards);\n      this.sourceOptions = this.sourceOptions.concat(projectBoards);\n\n      // 2. Fetch Buckets\n      const buckets = await this.bucketService.getAllByBoard(\n        this.data.board.boardID\n      );\n      this.boardBuckets = this.boardBuckets.concat(buckets);\n\n      // 3. Add buckets SECOND\n      this.sourceOptions = this.sourceOptions.concat(buckets);\n      this.destOptions = this.destOptions.concat(buckets);\n    } catch (error) {\n      console.error('Error loading boards and buckets:', error);\n    }\n  }\n\n  // Fetches workflows for the board from the workflowService.\n  async loadWorkflows(): Promise<void> {\n    return this.workflowService.getAll(this.board.boardID).then((workflows) => {\n      this.workflows = [];\n      workflows.forEach((workflow) => {\n        this.workflows.push(workflow);\n      });\n    });\n  }\n\n  // Creates a new bucket and updates UI.\n  createBucket(): void {\n    const bucket: Bucket = {\n      bucketID: generateUniqueID(),\n      boardID: this.data.board.boardID,\n      name: this.bucketName,\n      posts: [],\n      addedToView: false,\n    };\n\n    this.bucketService.create(bucket).then(() => {\n      this.loadBucketsBoards();\n      this.openSnackBar('Bucket: ' + bucket.name + ' created succesfully!');\n      this.bucketNameFormControl.reset();\n      if (this.data?.onBucketCreation) {\n        this.data?.onBucketCreation(bucket);\n      }\n    });\n  }\n\n  // Toggles visibility of bucket deletion controls.\n  toggleDeleteBoard() {\n    this.showDelete = !this.showDelete;\n  }\n\n  // Opens a confirmation dialog and deletes the bucket.\n  deleteBucket(bucket: Bucket) {\n    this.dialog.open(ConfirmModalComponent, {\n      width: '500px',\n      data: {\n        title: 'Confirmation',\n        message: 'Are you sure you want to delete this bucket?',\n        handleConfirm: () => {\n          this.bucketService.delete(bucket.bucketID).then(() => {\n            this.loadBucketsBoards();\n            this.openSnackBar(\n              'Bucket: ' + bucket.name + ' deleted succesfully!'\n            );\n          });\n        },\n      },\n    });\n  }\n\n  // Creates a distribution workflow.\n  createDistributionWorkflow(): void {\n    if (!this._distributionWorkflowTypeSelected()) return;\n\n    const workflow: DistributionWorkflow = this._assembleDistributionWorkflow();\n    this.workflowService.createDistribution(workflow).then(async () => {\n      await this.loadWorkflows();\n      this.selected.setValue(2);\n      this._clearWorkflowForm();\n    });\n  }\n\n  // Creates a peer review workflow.\n  createPeerReviewWorkflow(): void {\n    if (!this._actionSelected()) return;\n\n    const workflow: TaskWorkflow = this._assemblePeerReviewWorkflow();\n    this.workflowService.createTask(workflow).then(async () => {\n      await this.loadWorkflows();\n      this.selected.setValue(2);\n      this._clearWorkflowForm();\n    });\n  }\n\n  // Creates a generation task workflow.\n  createGenerationTaskWorkflow(): void {\n    if (!this._validGenerationTaskWorkflow()) return;\n    const workflow: TaskWorkflow = this._assembleGenerationTaskWorkflow();\n    this.workflowService.createTask(workflow).then(async () => {\n      await this.loadWorkflows();\n      this.selected.setValue(2);\n      this._clearWorkflowForm();\n    });\n  }\n\n  // Creates a AI classification workflow.\n  createAIClassificationWorkflow(): void {\n    if (!this._validAIClassificationWorkflow()) return;\n\n    const workflow: AIClassificationWorkflow = this._assembleAIClassificationWorkflow();\n    this.workflowService.createAIClassification(workflow).then(async () => {\n      await this.loadWorkflows();\n      this.selected.setValue(2);\n      this._clearWorkflowForm();\n    });\n  }\n\n  // Runs the specified workflow (task or distribution).\n  runWorkflow(e, workflow: TaskWorkflow | DistributionWorkflow | AIClassificationWorkflow): void {\n    e.stopPropagation();\n\n    if (this._isTaskWorkflow(workflow)) {\n      this.canvasService\n        .runTaskWorkflow(workflow)\n        .then(() => {\n          workflow.active = true;\n          this.openSnackBar('Workflow: ' + workflow.name + ' now active!');\n        })\n        .catch(() => {\n          this.openSnackBar(\n            'Unable to activate task workflow! Something went wrong.'\n          );\n        });\n    } else if (this._isAIClassificationWorkflow(workflow)) {\n      this.canvasService\n        .runAIClassificationWorkflow(workflow)\n        .then(async () => {\n          this.openSnackBar(\n            'Workflow: ' + workflow.name + ' completed successfully!'\n          );\n        })\n        .catch(() => {\n          this.openSnackBar('Cancelled AI workflow! Something went wrong.');\n        });\n    } else {\n      this.canvasService\n        .runDistributionWorkflow(workflow)\n        .then(async () => {\n          this.openSnackBar(\n            'Workflow: ' + workflow.name + ' completed successfully!'\n          );\n        })\n        .catch(() => {\n          this.openSnackBar('Cancelled distribution workflow! Something went wrong.');\n        });\n    } \n  }\n\n  // Opens a confirmation dialog and deletes the workflow.\n  async deleteWorkflow(\n    e,\n    workflow: TaskWorkflow | DistributionWorkflow\n  ): Promise<void> {\n    e.stopPropagation();\n\n    this.dialog.open(ConfirmModalComponent, {\n      width: '500px',\n      data: {\n        title: 'Confirmation',\n        message: 'Are you sure you want to delete this workflow?',\n        handleConfirm: async () => {\n          if (this._isTaskWorkflow(workflow)) {\n            await this.workflowService.removeTask(workflow.workflowID);\n          } else {\n            await this.workflowService.removeDistribution(workflow.workflowID);\n          }\n\n          this.workflows = this.workflows.filter(\n            (w) => w.workflowID !== workflow.workflowID\n          );\n        },\n      },\n    });\n  }\n\n  // Closes the dialog.\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // Displays a snackbar message.\n  openSnackBar(message: string): void {\n    this.snackbarService.queueSnackbar(message);\n  }\n\n  // Resets the workflow creation form.\n  _clearWorkflowForm() {\n    this.workflowNameFormControl.reset();\n    this.sourceFormControl.reset();\n    this.destinationFormControl.reset();\n    this.tagsFormControl.reset();\n    this.workflowTypeFormControl.reset();\n    this.classificationThemeFormControl.reset();\n    this.removeFromSourceFormControl.reset();\n    this.removeFromSource = false;\n    this.postGeneration = 1;\n    this.numCategoryGeneration = 2;\n  }\n\n  // Type guard to check if an object is a Board.\n  _isBoard(object: Board | Bucket): object is Board {\n    return (object as Board).tags !== undefined;\n  }\n\n  // Type guard to check if an object is a TaskWorkflow.\n  _isTaskWorkflow(\n    object: DistributionWorkflow | TaskWorkflow | AIClassificationWorkflow\n  ): object is TaskWorkflow {\n    return (object as TaskWorkflow).requiredActions !== undefined;\n  }\n\n  // Type guard to check if an object is a DistributionWorkflow.\n  _isDistributionWorkflow(object: DistributionWorkflow | TaskWorkflow | AIClassificationWorkflow\n  ): object is DistributionWorkflow {\n    return (object as DistributionWorkflow).removeFromSource !== undefined;\n  }\n\n  // Type guard to check if an object is a AIClassificationWorkflow.\n  _isAIClassificationWorkflow(object: DistributionWorkflow | TaskWorkflow | AIClassificationWorkflow\n  ): object is AIClassificationWorkflow {\n    return (object as AIClassificationWorkflow).classificationTheme !== undefined;\n  }\n\n  // Checks if a distribution workflow form is valid.\n  _validDistributionWorkflow(): boolean {\n    const allowMatch = this.distributionDestinations.length > 1;\n    const isMatch =\n      this.distributionSource &&\n      this.distributionDestinations.some(\n        (dest) => dest.name === this.distributionSource.name\n      );\n    this.sourceDestinationMatchError.setValue(!allowMatch && isMatch);\n    return (\n      (allowMatch || !isMatch) &&\n      this.workflowNameFormControl.valid &&\n      this.sourceFormControl.valid &&\n      this.destinationFormControl.valid\n    );\n  }\n\n  _ppbSelected(): boolean {\n    return this.postsPerBucket != null && this.postsPerBucket > 0;\n  }\n\n  _distributionWorkflowTypeSelected() {\n    return (\n      (this.distributionWorkflowType === DistributionWorkflowType.RANDOM &&\n        this.postsPerBucket > 0) ||\n      (this.distributionWorkflowType === DistributionWorkflowType.UPVOTES &&\n        this.upvoteLimit) ||\n      (this.distributionWorkflowType === DistributionWorkflowType.TAG &&\n        this.selectedTag)\n    );\n  }\n\n  _distributionWorkflowTypeData() {\n    if (this.distributionWorkflowType === DistributionWorkflowType.RANDOM)\n      return this.postsPerBucket;\n    else if (this.distributionWorkflowType === DistributionWorkflowType.UPVOTES)\n      return this.upvoteLimit;\n    else return this.selectedTag;\n  }\n\n  _assembleDistributionWorkflow(): DistributionWorkflow {\n    const workflowID: string = generateUniqueID();\n\n    const workflow: DistributionWorkflow = {\n      workflowID: workflowID,\n      boardID: this.board.boardID,\n      active: false,\n      name: this.workflowName,\n      source: this._mapToContainer(this.distributionSource),\n      destinations: this._mapToContainers(this.distributionDestinations),\n      distributionWorkflowType: {\n        type: this.distributionWorkflowType,\n        data: this._distributionWorkflowTypeData(),\n      },\n      removeFromSource: this.removeFromSource,\n    };\n\n    return workflow;\n  }\n\n  _validPeerReviewWorkflow(): boolean {\n    return (\n      this.workflowNameFormControl.valid &&\n      this.sourceFormControl.valid &&\n      this.destinationFormControl.valid &&\n      this.groupsFormControl.valid &&\n      this.promptFormControl.valid &&\n      this._actionSelected()\n    );\n  }\n\n  _validGenerationTaskWorkflow(): boolean {\n    return (\n      this.workflowNameFormControl.valid &&\n      this.destinationFormControl.valid &&\n      this.groupsFormControl.valid &&\n      this.promptFormControl.valid\n    );\n  }\n\n  _validAIClassificationWorkflow(): boolean {\n    return (\n      this.workflowNameFormControl.valid &&\n      this.sourceFormControl.valid &&\n      this.classificationThemeFormControl.valid\n    );\n  }\n\n  _actionSelected(): boolean {\n    return this.commentsRequired || this.tagsRequired;\n  }\n\n  _assemblePeerReviewWorkflow(): TaskWorkflow {\n    const workflowID: string = generateUniqueID();\n\n    const actions: TaskAction[] = [];\n    if (this.commentsRequired)\n      actions.push({\n        type: TaskActionType.COMMENT,\n        amountRequired: 1,\n      });\n    if (this.tagsRequired)\n      actions.push({\n        type: TaskActionType.TAG,\n        amountRequired: 1,\n      });\n\n    const workflow: TaskWorkflow = {\n      workflowID: workflowID,\n      boardID: this.board.boardID,\n      active: false,\n      name: this.workflowName,\n      source: this._mapToContainer(this.taskSource),\n      destinations: [this._mapToContainer(this.taskDestination)],\n      prompt: this.prompt,\n      requiredActions: actions,\n      assignedGroups: this.assignedGroups.map((g) => g.groupID),\n      type: this.taskWorkflowType.PEER_REVIEW,\n    };\n\n    return workflow;\n  }\n\n  _assembleGenerationTaskWorkflow(): TaskWorkflow {\n    const workflowID: string = generateUniqueID();\n\n    const actions: TaskAction[] = [];\n    if (this.postGeneration)\n      actions.push({\n        type: TaskActionType.CREATE_POST,\n        amountRequired: this.postGeneration,\n      });\n    if (this.commentsRequired)\n      actions.push({\n        type: TaskActionType.COMMENT,\n        amountRequired: 1,\n      });\n    if (this.tagsRequired)\n      actions.push({\n        type: TaskActionType.TAG,\n        amountRequired: 1,\n      });\n\n    const workflow: TaskWorkflow = {\n      workflowID: workflowID,\n      boardID: this.board.boardID,\n      active: false,\n      name: this.workflowName,\n      source: this._placeholderContainer(),\n      destinations: [this._mapToContainer(this.taskDestination)],\n      prompt: this.prompt,\n      requiredActions: actions,\n      assignedGroups: this.assignedGroups.map((g) => g.groupID),\n      type: this.taskWorkflowType.GENERATION,\n    };\n\n    return workflow;\n  }\n\n  _assembleAIClassificationWorkflow(): AIClassificationWorkflow {\n    const workflowID: string = generateUniqueID();\n\n    const workflow: AIClassificationWorkflow = {\n      workflowID: workflowID,\n      boardID: this.board.boardID,\n      active: false,\n      name: this.workflowName,\n      source: this._mapToContainer(this.taskSource),\n      destinations: [this._placeholderContainer()],\n      classificationTheme: this.classificationTheme,\n      numCategoryGeneration: this.numCategoryGeneration,\n      removeFromSource: this.removeFromSource,\n    };\n    \n    return workflow;\n  }\n\n  _validBucketForm(): boolean {\n    return this.bucketNameFormControl.valid;\n  }\n\n  _forbiddenNameValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const forbidden = this.board ? control.value == this.board.name : false;\n      return forbidden ? { forbidden: { value: control.value } } : null;\n    };\n  }\n\n  _mapToContainers(bucketsBoards: (Bucket | Board)[]): Container[] {\n    return bucketsBoards.map((bOrB) => this._mapToContainer(bOrB));\n  }\n\n  _mapToContainer(bucketBoard: Bucket | Board): Container {\n    if (this._isBoard(bucketBoard)) {\n      return {\n        type: ContainerType.BOARD,\n        id: bucketBoard.boardID,\n        name: bucketBoard.name,\n      };\n    } else {\n      return {\n        type: ContainerType.BUCKET,\n        id: bucketBoard.bucketID,\n        name: bucketBoard.name,\n      };\n    }\n  }\n\n  // Default to current board if no source required\n  _placeholderContainer() {\n    return {\n      type: ContainerType.WORKFLOW,\n      id: this.board.boardID,\n      name: 'CK Workspace',\n    };\n  }\n}\n","<h1 mat-dialog-title>CK Workflows</h1>\n<div mat-dialog-content>\n  <mat-tab-group\n    dynamicHeight\n    animationDuration=\"0ms\"\n    [selectedIndex]=\"selected.value\"\n    (selectedIndexChange)=\"selected.setValue($event)\"\n  >\n    <mat-tab label=\"Manage Buckets\">\n      <h2 style=\"margin-top: 20px\">Create New Bucket</h2>\n      <div style=\"display: flex\">\n        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n          <mat-label>Bucket Name</mat-label>\n          <input\n            matInput\n            [formControl]=\"bucketNameFormControl\"\n            [errorStateMatcher]=\"matcher\"\n            [(ngModel)]=\"bucketName\"\n          />\n          <mat-error *ngIf=\"bucketNameFormControl.hasError('required')\"\n            >Bucket name required!</mat-error\n          >\n          <mat-error *ngIf=\"bucketNameFormControl.hasError('forbidden')\"\n            >Bucket name cannot be the same as board name!</mat-error\n          >\n        </mat-form-field>\n        <button\n          mat-button\n          *ngIf=\"selected.value === 0\"\n          [disabled]=\"!_validBucketForm()\"\n          (click)=\"createBucket()\"\n        >\n          Create Bucket!\n        </button>\n      </div>\n\n      <div>\n        <button class=\"delete-toggler\" mat-button (click)=\"toggleDeleteBoard()\">\n          Delete Buckets ({{ boardBuckets.length }})\n          <mat-icon>{{ showDelete ? 'expand_less' : 'expand_more' }}</mat-icon>\n        </button>\n      </div>\n      <div\n        style=\"display: grid; grid-template-columns: 1fr 1fr\"\n        *ngIf=\"showDelete\"\n      >\n        <mat-card\n          *ngFor=\"let bucket of boardBuckets\"\n          style=\"\n            display: flex;\n            margin: 10px;\n            padding: 10px;\n            justify-content: space-between;\n          \"\n        >\n          <mat-card-title style=\"font-size: small; margin: auto 0\">\n            {{ bucket.name }}\n          </mat-card-title>\n          <button mat-icon-button (click)=\"deleteBucket(bucket)\">\n            <mat-icon style=\"color: red\"> delete </mat-icon>\n          </button>\n        </mat-card>\n      </div>\n    </mat-tab>\n    <mat-tab label=\"Create Workflow\">\n      <mat-radio-group [(ngModel)]=\"workflowType\">\n        <mat-radio-button\n          style=\"margin-top: 20px\"\n          [checked]=\"true\"\n          [value]=\"WorkflowType.GENERATION\"\n          >Generation Task</mat-radio-button\n        >\n        <mat-radio-button\n          style=\"margin-top: 20px\"\n          [checked]=\"false\"\n          [value]=\"WorkflowType.TASK\"\n          >Peer Review</mat-radio-button\n        >\n        <mat-radio-button\n          style=\"margin-top: 20px\"\n          [checked]=\"false\"\n          [value]=\"WorkflowType.DISTRIBUTION\"\n          >Distribution</mat-radio-button\n        >\n        <mat-radio-button\n          style=\"margin-top: 20px\"\n          [checked]=\"false\"\n          [value]=\"WorkflowType.AI_CLASSIFICATION\"\n          >AI Classification</mat-radio-button\n        >\n      </mat-radio-group>\n      <div *ngIf=\"workflowType === WorkflowType.DISTRIBUTION\">\n        <mat-form-field appearance=\"fill\" style=\"margin-top: 10px\">\n          <mat-label>Workflow Name</mat-label>\n          <input\n            [formControl]=\"workflowNameFormControl\"\n            [errorStateMatcher]=\"matcher\"\n            matInput\n            [(ngModel)]=\"workflowName\"\n          />\n          <mat-error *ngIf=\"workflowNameFormControl.hasError('required')\"\n            >Workflow name required!</mat-error\n          >\n        </mat-form-field>\n        <div class=\"source-destination\">\n          <div>\n            <mat-form-field\n              appearance=\"fill\"\n              style=\"font-size: 14px !important\"\n            >\n              <mat-label>Source</mat-label>\n              <mat-select\n                [(ngModel)]=\"distributionSource\"\n                [formControl]=\"sourceFormControl\"\n                (ngModelChange)=\"_validDistributionWorkflow()\"\n              >\n                <mat-option\n                  *ngFor=\"let option of sourceOptions\"\n                  [value]=\"option\"\n                >\n                  <ng-container *ngIf=\"option.hasOwnProperty('projectID')\"\n                    >CANVAS:</ng-container\n                  >\n                  <ng-container *ngIf=\"!option.hasOwnProperty('projectID')\"\n                    >BUCKET:</ng-container\n                  >\n                  {{ option.name }}</mat-option\n                >\n              </mat-select>\n              <mat-error *ngIf=\"sourceFormControl.hasError('required')\"\n                >Source required!</mat-error\n              >\n            </mat-form-field>\n            <mat-error *ngIf=\"sourceDestinationMatchError.value\">\n              Source and destination cannot be the same!\n            </mat-error>\n          </div>\n          <mat-icon class=\"arrow-icon-lg\">arrow_right_alt</mat-icon>\n          <mat-form-field appearance=\"fill\" style=\"font-size: 14px !important\">\n            <mat-label>Destination</mat-label>\n            <mat-select\n              [(ngModel)]=\"distributionDestinations\"\n              [formControl]=\"destinationFormControl\"\n              (ngModelChange)=\"_validDistributionWorkflow()\"\n              multiple\n            >\n              <mat-option *ngFor=\"let option of destOptions\" [value]=\"option\">\n                <ng-container *ngIf=\"option.hasOwnProperty('projectID')\"\n                  >CANVAS:</ng-container\n                >\n                <ng-container *ngIf=\"!option.hasOwnProperty('projectID')\"\n                  >BUCKET:</ng-container\n                >\n                {{ option.name }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"destinationFormControl.hasError('required')\"\n              >Destination required!</mat-error\n            >\n          </mat-form-field>\n        </div>\n        <section></section>\n        <section>\n          <h4>Choose Distribution:</h4>\n          <mat-radio-group\n            [(ngModel)]=\"distributionWorkflowType\"\n            [formControl]=\"workflowTypeFormControl\"\n          >\n            <mat-radio-button value=\"RANDOM\"\n              >Randomly distribute</mat-radio-button\n            >\n            <mat-radio-button value=\"TAG\"\n              >Copy all with specified tag</mat-radio-button\n            >\n            <mat-radio-button value=\"UPVOTES\"\n              >Copy all with min # upvotes</mat-radio-button\n            >\n          </mat-radio-group>\n          <div style=\"margin: 20px 0\">\n            <section *ngIf=\"distributionWorkflowType === 'RANDOM'\">\n              <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                <mat-label>Posts per Destination</mat-label>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  [(ngModel)]=\"postsPerBucket\"\n                  matInput\n                />\n              </mat-form-field>\n              <mat-error *ngIf=\"postsPerBucket <= 0\">\n                Enter a Positive Number\n              </mat-error>\n            </section>\n            <section *ngIf=\"distributionWorkflowType === 'TAG'\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Tags</mat-label>\n                <mat-select [(ngModel)]=\"selectedTag\">\n                  <mat-option *ngFor=\"let tag of tags\" [value]=\"tag\">\n                    {{ tag.name }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </section>\n            <section *ngIf=\"distributionWorkflowType === 'UPVOTES'\">\n              <div>\n                <mat-label style=\"font-weight: bold\"\n                  >Minimum Upvotes Per Post: {{ upvoteLimit }}</mat-label\n                >\n                <mat-slider\n                  class=\"slider\"\n                  min=\"1\"\n                  max=\"{{ board.upvoteLimit }}\"\n                  step=\"1\"\n                  [(ngModel)]=\"upvoteLimit\"\n                  thumbLabel\n                ></mat-slider>\n              </div>\n            </section>\n          </div>\n        </section>\n        <p>\n          <mat-checkbox\n            [(ngModel)]=\"removeFromSource\"\n            [formControl]=\"removeFromSourceFormControl\"\n          >\n            Remove From Source\n          </mat-checkbox>\n        </p>\n      </div>\n      <div *ngIf=\"workflowType === WorkflowType.TASK\">\n        <mat-form-field appearance=\"fill\" style=\"margin-top: 10px\">\n          <mat-label>Workflow Name</mat-label>\n          <input\n            [formControl]=\"workflowNameFormControl\"\n            [errorStateMatcher]=\"matcher\"\n            matInput\n            [(ngModel)]=\"workflowName\"\n          />\n          <mat-error *ngIf=\"workflowNameFormControl.hasError('required')\"\n            >Workflow name required!</mat-error\n          >\n        </mat-form-field>\n        <div class=\"source-destination\">\n          <mat-form-field appearance=\"fill\" style=\"font-size: 14px !important\">\n            <mat-label>Source</mat-label>\n            <mat-select\n              [(ngModel)]=\"taskSource\"\n              [formControl]=\"sourceFormControl\"\n              [errorStateMatcher]=\"matcher\"\n            >\n              <mat-option *ngFor=\"let option of sourceOptions\" [value]=\"option\">\n                <ng-container *ngIf=\"option.hasOwnProperty('projectID')\"\n                  >CANVAS:</ng-container\n                >\n                <ng-container *ngIf=\"!option.hasOwnProperty('projectID')\"\n                  >BUCKET:</ng-container\n                >\n                {{ option.name }}</mat-option\n              >\n            </mat-select>\n            <mat-error *ngIf=\"sourceFormControl.hasError('required')\"\n              >Source required!</mat-error\n            >\n          </mat-form-field>\n          <mat-icon class=\"arrow-icon-lg\">arrow_right_alt</mat-icon>\n          <mat-form-field appearance=\"fill\" style=\"font-size: 14px !important\">\n            <mat-label>Destination</mat-label>\n            <mat-select\n              [(ngModel)]=\"taskDestination\"\n              [formControl]=\"destinationFormControl\"\n              [errorStateMatcher]=\"matcher\"\n            >\n              <mat-option *ngFor=\"let option of destOptions\" [value]=\"option\">\n                <ng-container *ngIf=\"option.hasOwnProperty('projectID')\"\n                  >CANVAS:</ng-container\n                >\n                <ng-container *ngIf=\"!option.hasOwnProperty('projectID')\"\n                  >BUCKET:</ng-container\n                >\n                {{ option.name }}</mat-option\n              >\n            </mat-select>\n            <mat-error *ngIf=\"destinationFormControl.hasError('required')\"\n              >Destination required!</mat-error\n            >\n          </mat-form-field>\n        </div>\n        <section>\n          <div style=\"display: flex; flex-direction: row; gap: 10px\">\n            <mat-form-field\n              appearance=\"fill\"\n              style=\"font-size: 14px !important\"\n            >\n              <mat-label>Assigned Groups</mat-label>\n              <mat-select\n                [(ngModel)]=\"assignedGroups\"\n                [formControl]=\"groupsFormControl\"\n                [errorStateMatcher]=\"matcher\"\n                multiple\n              >\n                <mat-option\n                  *ngFor=\"let option of groupOptions\"\n                  [value]=\"option\"\n                  >{{ option.name }}</mat-option\n                >\n              </mat-select>\n              <mat-error *ngIf=\"groupsFormControl.hasError('required')\"\n                >At least one group required!</mat-error\n              >\n            </mat-form-field>\n          </div>\n        </section>\n        <section>\n          <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n            <mat-label>Student Prompt</mat-label>\n            <textarea\n              matInput\n              [formControl]=\"promptFormControl\"\n              [errorStateMatcher]=\"matcher\"\n              [(ngModel)]=\"prompt\"\n              placeholder=\"Please use tags to categorize each idea (e.g., financial, transportation, technology)\"\n            ></textarea>\n            <mat-error *ngIf=\"promptFormControl.hasError('required')\"\n              >Prompt is required!</mat-error\n            >\n          </mat-form-field>\n        </section>\n        <section>\n          <h4 style=\"font-weight: bold\">Workflow Actions:</h4>\n          <div style=\"display: flex; flex-direction: column; gap: 10px\">\n            <mat-checkbox [(ngModel)]=\"commentsRequired\">\n              Require minimum 1 comment per post\n            </mat-checkbox>\n            <mat-checkbox [(ngModel)]=\"tagsRequired\">\n              Require minimum 1 tag per post\n            </mat-checkbox>\n          </div>\n        </section>\n      </div>\n      <div *ngIf=\"workflowType === WorkflowType.GENERATION\">\n        <mat-form-field appearance=\"fill\" style=\"margin-top: 10px\">\n          <mat-label>Workflow Name</mat-label>\n          <input\n            [formControl]=\"workflowNameFormControl\"\n            [errorStateMatcher]=\"matcher\"\n            matInput\n            [(ngModel)]=\"workflowName\"\n          />\n          <mat-error *ngIf=\"workflowNameFormControl.hasError('required')\"\n            >Workflow name required!</mat-error\n          >\n        </mat-form-field>\n        <div class=\"source-destination\">\n          <mat-form-field appearance=\"fill\" style=\"font-size: 14px !important\">\n            <mat-label>Destination</mat-label>\n            <mat-select\n              [(ngModel)]=\"taskDestination\"\n              [formControl]=\"destinationFormControl\"\n              [errorStateMatcher]=\"matcher\"\n            >\n              <mat-option *ngFor=\"let option of destOptions\" [value]=\"option\">\n                <ng-container *ngIf=\"option.hasOwnProperty('projectID')\"\n                  >CANVAS:</ng-container\n                >\n                <ng-container *ngIf=\"!option.hasOwnProperty('projectID')\"\n                  >BUCKET:</ng-container\n                >\n                {{ option.name }}</mat-option\n              >\n            </mat-select>\n            <mat-error *ngIf=\"destinationFormControl.hasError('required')\"\n              >Destination required!</mat-error\n            >\n          </mat-form-field>\n        </div>\n        <section>\n          <div style=\"display: flex; flex-direction: row; gap: 10px\">\n            <mat-form-field\n              appearance=\"fill\"\n              style=\"font-size: 14px !important\"\n            >\n              <mat-label>Assigned Groups</mat-label>\n              <mat-select\n                [(ngModel)]=\"assignedGroups\"\n                [formControl]=\"groupsFormControl\"\n                [errorStateMatcher]=\"matcher\"\n                multiple\n              >\n                <mat-option\n                  *ngFor=\"let option of groupOptions\"\n                  [value]=\"option\"\n                  >{{ option.name }}</mat-option\n                >\n              </mat-select>\n              <mat-error *ngIf=\"groupsFormControl.hasError('required')\"\n                >At least one group required!</mat-error\n              >\n            </mat-form-field>\n          </div>\n        </section>\n        <section>\n          <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n            <mat-label>Student Prompt</mat-label>\n            <textarea\n              matInput\n              [formControl]=\"promptFormControl\"\n              [errorStateMatcher]=\"matcher\"\n              [(ngModel)]=\"prompt\"\n              placeholder=\"Please use tags to categorize each idea (e.g., financial, transportation, technology)\"\n            ></textarea>\n            <mat-error *ngIf=\"promptFormControl.hasError('required')\"\n              >Prompt is required!</mat-error\n            >\n          </mat-form-field>\n        </section>\n        <section>\n          <h4 style=\"font-weight: bold\">Workflow Actions:</h4>\n          <div>\n            <mat-label>Number of Posts to generate:</mat-label>\n            <mat-slider\n              class=\"slider\"\n              min=\"1\"\n              max=\"10\"\n              step=\"1\"\n              thumbLabel\n              [(ngModel)]=\"postGeneration\"\n            ></mat-slider>\n          </div>\n          <div style=\"display: flex; flex-direction: column; gap: 10px\">\n            <mat-checkbox [(ngModel)]=\"tagsRequired\">\n              Require minimum 1 tag per post\n            </mat-checkbox>\n          </div>\n        </section>\n      </div>\n\n      <div *ngIf=\"workflowType === WorkflowType.AI_CLASSIFICATION\">\n        <mat-form-field appearance=\"fill\" style=\"margin-top: 10px\">\n          <mat-label>Workflow Name</mat-label>\n          <input\n            [formControl]=\"workflowNameFormControl\"\n            [errorStateMatcher]=\"matcher\"\n            matInput\n            [(ngModel)]=\"workflowName\"\n          />\n          <mat-error *ngIf=\"workflowNameFormControl.hasError('required')\"\n            >Workflow name required!</mat-error\n          >\n        </mat-form-field>\n        <div class=\"source-destination\">\n          <mat-form-field appearance=\"fill\" style=\"font-size: 14px !important\">\n            <mat-label>Source</mat-label>\n            <mat-select\n              [(ngModel)]=\"taskSource\"\n              [formControl]=\"sourceFormControl\"\n              [errorStateMatcher]=\"matcher\"\n            >\n              <mat-option *ngFor=\"let option of sourceOptions\" [value]=\"option\">\n                <ng-container *ngIf=\"option.hasOwnProperty('projectID')\"\n                  >CANVAS:</ng-container\n                >\n                <ng-container *ngIf=\"!option.hasOwnProperty('projectID')\"\n                  >BUCKET:</ng-container\n                >\n                {{ option.name }}</mat-option\n              >\n            </mat-select>\n            <mat-error *ngIf=\"sourceFormControl.hasError('required')\"\n              >Source required!</mat-error\n            >\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"fill\"\n          style=\"font-size: 14px !important\">\n            <mat-label>Classification Theme</mat-label>\n            <input\n              [formControl]=\"classificationThemeFormControl\"\n              [errorStateMatcher]=\"matcher\"\n              matInput\n              [(ngModel)]=\"classificationTheme\"\n            />\n            <mat-error *ngIf=\"classificationThemeFormControl.hasError('required')\"\n              >Classification theme name required!</mat-error\n            >\n          </mat-form-field>\n        </div>\n        <section>\n          <h4 style=\"font-weight: bold\">Workflow Actions:</h4>\n          <div>\n            <mat-label>Number of Categories to generate:</mat-label>\n            <mat-slider\n              class=\"slider\"\n              min=\"2\"\n              max=\"4\"\n              step=\"1\"\n              thumbLabel\n              [(ngModel)]=\"numCategoryGeneration\"\n            ></mat-slider>\n          </div>\n          <p>\n            <mat-checkbox\n              [(ngModel)]=\"removeFromSource\"\n              [formControl]=\"removeFromSourceFormControl\"\n            >\n              Remove From Source\n            </mat-checkbox>\n          </p>\n        </section>\n      </div>\n\n    </mat-tab>\n    <mat-tab label=\"Manage Workflows\">\n      <h3\n        *ngIf=\"!workflows || workflows.length === 0\"\n        style=\"color: grey; text-align: center\"\n      >\n        No workflows created!\n      </h3>\n      <mat-accordion\n        class=\"list-accordion\"\n        multi\n        *ngFor=\"let workflow of workflows\"\n      >\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <mat-icon\n                [ngStyle]=\"{ color: workflow.active ? 'green' : 'grey' }\"\n                style=\"padding-right: 30px\"\n                >circle</mat-icon\n              >\n              {{ workflow.name }}\n            </mat-panel-title>\n            <mat-panel-description>\n              <mat-chip-list>\n                <mat-chip\n                  color=\"primary\"\n                  selected\n                  *ngIf=\"workflow.distributionWorkflowType\"\n                  >Distribution</mat-chip\n                >\n                <mat-chip\n                  color=\"primary\"\n                  selected\n                  *ngIf=\"\n                    workflow.requiredActions &&\n                    workflow.type != taskWorkflowType.GENERATION\n                  \"\n                  >Peer Review</mat-chip\n                >\n                <mat-chip\n                  color=\"primary\"\n                  selected\n                  *ngIf=\"workflow.type == taskWorkflowType.GENERATION\"\n                  >Generation</mat-chip\n                >\n              </mat-chip-list>\n              <div>\n                <button\n                  mat-icon-button\n                  [disabled]=\"workflow.active\"\n                  (click)=\"runWorkflow($event, workflow)\"\n                >\n                  <mat-icon id=\"workflow-action-run\"\n                    >play_circle_filled</mat-icon\n                  >\n                </button>\n                <button\n                  mat-icon-button\n                  (click)=\"deleteWorkflow($event, workflow)\"\n                >\n                  <mat-icon id=\"workflow-action-delete\">delete</mat-icon>\n                </button>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <div class=\"source-dest-info\">\n            <mat-chip-list>\n              <mat-chip>{{ workflow.source.name }}</mat-chip>\n            </mat-chip-list>\n            <mat-icon class=\"arrow-icon-md\">arrow_right_alt</mat-icon>\n            <mat-chip-list>\n              <mat-chip *ngFor=\"let destination of workflow.destinations\">{{\n                destination.name\n              }}</mat-chip>\n            </mat-chip-list>\n          </div>\n          <div *ngIf=\"workflow.distributionWorkflowType\">\n            <div *ngIf=\"workflow.distributionWorkflowType.type === 'RANDOM'\">\n              <h4>\n                Distribution Type:\n                <mat-chip color=\"accent\" selected style=\"margin: 0 5px\">\n                  Random\n                </mat-chip>\n              </h4>\n              <h4>\n                Posts Per Bucket/Board:\n                <mat-chip color=\"accent\" selected style=\"margin: 0 5px\">\n                  {{ workflow.distributionWorkflowType.data }}\n                </mat-chip>\n              </h4>\n            </div>\n            <div *ngIf=\"workflow.distributionWorkflowType.type === 'TAG'\">\n              <h4>\n                Distribution Type:\n                <mat-chip color=\"accent\" selected style=\"margin: 0 5px\">\n                  Tag\n                </mat-chip>\n              </h4>\n              <h4>\n                Selected Tag:<mat-chip\n                  [ngStyle]=\"{\n                    'background-color':\n                      workflow.distributionWorkflowType.data.color\n                  }\"\n                  style=\"margin: 0 5px\"\n                  selected\n                  >{{ workflow.distributionWorkflowType.data.name }}\n                </mat-chip>\n              </h4>\n            </div>\n            <div *ngIf=\"workflow.distributionWorkflowType.type === 'UPVOTES'\">\n              <h4>\n                Distribution Type:\n                <mat-chip color=\"accent\" selected style=\"margin: 0 5px\">\n                  Upvote\n                </mat-chip>\n              </h4>\n              <h4>\n                Minimum upvotes per post:\n                <mat-chip color=\"accent\" selected style=\"margin: 0 5px\">\n                  {{ workflow.distributionWorkflowType.data }}\n                </mat-chip>\n              </h4>\n            </div>\n          </div>\n          <div *ngIf=\"workflow.requiredActions\">\n            <h4>\n              Required Actions:\n              <mat-chip\n                color=\"accent\"\n                selected\n                style=\"margin: 0 5px\"\n                *ngFor=\"let action of workflow.requiredActions\"\n              >\n                1 {{ action.type.toLowerCase() }} per post\n              </mat-chip>\n            </h4>\n          </div>\n          <div *ngIf=\"workflow.type == taskWorkflowType.GENERATION\">\n            <h4>\n              Required Actions:\n              <mat-chip\n                color=\"accent\"\n                selected\n                style=\"margin: 0 5px\"\n                *ngFor=\"let action of workflow.requiredActions\"\n              >\n                Generate {{ action.amountRequired.toString() }} post(s)\n              </mat-chip>\n            </h4>\n          </div>\n          <div *ngIf=\"workflow.removeFromSource\">\n            <mat-chip color=\"warn\" selected>\n              Remove From Source Enabled\n            </mat-chip>\n          </div>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Close</button>\n  <button\n    mat-button\n    *ngIf=\"selected.value === 0\"\n    [disabled]=\"!_validBucketForm()\"\n    (click)=\"createBucket()\"\n  >\n    Create Bucket!\n  </button>\n  <button\n    mat-button\n    *ngIf=\"selected.value === 1 && workflowType === WorkflowType.DISTRIBUTION\"\n    [disabled]=\"!_validDistributionWorkflow()\"\n    (click)=\"createDistributionWorkflow()\"\n  >\n    Create Distribution Workflow!\n  </button>\n  <button\n    mat-button\n    *ngIf=\"selected.value === 1 && workflowType === WorkflowType.TASK\"\n    [disabled]=\"!_validPeerReviewWorkflow()\"\n    (click)=\"createPeerReviewWorkflow()\"\n  >\n    Create Peer Review Workflow!\n  </button>\n  <button\n    mat-button\n    *ngIf=\"selected.value === 1 && workflowType === WorkflowType.GENERATION\"\n    [disabled]=\"!_validGenerationTaskWorkflow()\"\n    (click)=\"createGenerationTaskWorkflow()\"\n  >\n    Create Generation Task Workflow!\n  </button>\n  <button\n    mat-button\n    *ngIf=\"selected.value === 1 && workflowType === WorkflowType.AI_CLASSIFICATION\"\n    [disabled]=\"!_validAIClassificationWorkflow()\"\n    (click)=\"createAIClassificationWorkflow()\"\n  >\n    Create AI Classification Workflow!\n  </button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}