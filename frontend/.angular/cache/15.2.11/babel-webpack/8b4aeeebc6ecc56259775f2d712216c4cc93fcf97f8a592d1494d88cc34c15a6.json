{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TodoItemType, CompletionQuality } from 'src/app/models/todoItem';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MyErrorStateMatcher } from 'src/app/utils/ErrorStateMatcher';\nimport { generateUniqueID } from 'src/app/utils/Utils';\nimport { TODO_TITLE_MAX_LENGTH, EXPANDED_TODO_TYPE } from 'src/app/utils/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/services/todoItem.service\";\nimport * as i3 from \"src/app/services/group.service\";\nfunction AddTodoListModalComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 23);\n    i0.ɵɵtext(1, \"Add Todo List Task\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddTodoListModalComponent_h1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 23);\n    i0.ɵɵtext(1, \"Edit Task\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddTodoListModalComponent_h1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 23);\n    i0.ɵɵtext(1, \"Restore Task\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddTodoListModalComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Task Title is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddTodoListModalComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Task Title is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"too long!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddTodoListModalComponent_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r14 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", option_r14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.EXPANDED_TODO_TYPE[option_r14], \" \");\n  }\n}\nfunction AddTodoListModalComponent_mat_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", group_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", group_r15.name, \" \");\n  }\n}\nfunction AddTodoListModalComponent_mat_option_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const hour_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", hour_r16);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", hour_r16, \" \");\n  }\n}\nfunction AddTodoListModalComponent_mat_option_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const minute_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", minute_r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 2, minute_r17, \"2.0\"), \" \");\n  }\n}\nfunction AddTodoListModalComponent_mat_option_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const period_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", period_r18);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", period_r18, \" \");\n  }\n}\nfunction AddTodoListModalComponent_button_57_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AddTodoListModalComponent_button_57_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.createTodoItem());\n    });\n    i0.ɵɵtext(1, \"Create Todo Item\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r11.taskTitleControl.valid || !ctx_r11.todoItemTypeFormControl.valid);\n  }\n}\nfunction AddTodoListModalComponent_button_58_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AddTodoListModalComponent_button_58_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateTodoItem());\n    });\n    i0.ɵɵtext(1, \"Update Todo Item\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r12.taskTitleControl.valid || !ctx_r12.todoItemTypeFormControl.valid);\n  }\n}\nfunction AddTodoListModalComponent_button_59_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AddTodoListModalComponent_button_59_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.restoreTodoItem());\n    });\n    i0.ɵɵtext(1, \"Restore Todo Item\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r13.taskTitleControl.valid || !ctx_r13.todoItemTypeFormControl.valid);\n  }\n}\nconst _c0 = function () {\n  return [\"AM\", \"PM\"];\n};\nexport class AddTodoListModalComponent {\n  constructor(dialogRef, todoItemService, groupService, data) {\n    this.dialogRef = dialogRef;\n    this.todoItemService = todoItemService;\n    this.groupService = groupService;\n    this.data = data;\n    this.taskTitle = '';\n    this.taskDescription = '';\n    this.taskDeadlineDate = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\n    this.timeHour = 12;\n    this.timeMinute = 0;\n    this.timePeriod = 'AM';\n    this.hourRange = Array(12).fill(0).map((_, i) => i + 1);\n    this.minuteRange = Array(4).fill(0).map((_, i) => i * 15);\n    this.taskTitleControl = new FormControl('', [Validators.required, Validators.maxLength(TODO_TITLE_MAX_LENGTH)]);\n    this.todoItemTypeFormControl = new FormControl('valid', [Validators.required]);\n    this.todoItemTypes = [];\n    this.EXPANDED_TODO_TYPE = EXPANDED_TODO_TYPE;\n    this.todoItemOptions = [TodoItemType.COGNITION, TodoItemType.SEL, TodoItemType.BEHAVIOURAL, TodoItemType.ATL, TodoItemType.CLASS];\n    this.matcher = new MyErrorStateMatcher();\n    this.editing = false;\n    this.restoring = false;\n    this.TODO_TITLE_MAX_LENGTH = TODO_TITLE_MAX_LENGTH;\n    this.todoTypeTooltip = `\n    Content learning (i.e., learning strategies for memorization, recall, or application of knowledge)\n\n    Social-emotional learning (i.e., supports for developing your emotional awareness, stress management, motivation, math identity, relationships, or critical/creative thinking)\n\n    ATL skills (i.e., thining skills, self-management skills, and research skills)\n\n    Classroom engagement (i.e., practices for improving learning engagement, e.g., note-taking, asking questions, designing/explaining/suggesting ideas, or generating/sharing ideas with classmates)\n  `;\n    this.projectID = data.projectID;\n    this.userID = data.userID;\n    if (data.todoItem) {\n      this.editing = true;\n      this.taskDeadlineDate = new Date(data.todoItem.deadline.date);\n      this.taskTitle = data.todoItem.title;\n      this.taskDescription = data.todoItem.description;\n      const time = data.todoItem.deadline.time.split(':');\n      this.timeHour = parseInt(time[0]);\n      this.timeMinute = parseInt(time[1]);\n      this.timePeriod = time[2].split(' ')[1];\n      this.todoItemTypes = data.todoItem.type;\n    } else if (data.restoreTodoItem) {\n      this.restoring = true;\n      this.taskTitle = data.restoreTodoItem.title;\n      this.taskDescription = data.restoreTodoItem.description;\n      this.todoItemTypes = data.restoreTodoItem.type;\n    }\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.userGroups = yield _this.groupService.getByUserAndProject(_this.userID, _this.projectID);\n      if (_this.data.group) {\n        _this.selectedGroup = _this.userGroups.find(g => g.groupID === _this.data.group.groupID);\n      }\n    })();\n  }\n  createTodoItem() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const todoItem = {\n        todoItemID: generateUniqueID(),\n        projectID: _this2.projectID,\n        userID: _this2.userID,\n        title: _this2.taskTitle,\n        description: _this2.taskDescription,\n        groupID: _this2.selectedGroup ? _this2.selectedGroup.groupID : '',\n        completed: false,\n        quality: CompletionQuality.N_A,\n        overdue: false,\n        type: _this2.todoItemTypes,\n        notifications: [],\n        deadline: {\n          date: _this2.taskDeadlineDate.toDateString(),\n          time: `${_this2.timeHour}:${String(_this2.timeMinute).padStart(2, '0')}:00 ${_this2.timePeriod}`\n        }\n      };\n      yield _this2.todoItemService.create(todoItem);\n      _this2.data.onComplete(todoItem);\n      _this2.dialogRef.close();\n      return todoItem;\n    })();\n  }\n  updateTodoItem() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const todoItem = {\n        title: _this3.taskTitle,\n        description: _this3.taskDescription,\n        groupID: _this3.selectedGroup ? _this3.selectedGroup.groupID : '',\n        type: _this3.todoItemTypes,\n        deadline: {\n          date: _this3.taskDeadlineDate.toDateString(),\n          time: `${_this3.timeHour}:${String(_this3.timeMinute).padStart(2, '0')}:00 ${_this3.timePeriod}`\n        }\n      };\n      const updatedTodo = yield _this3.todoItemService.update(_this3.data.todoItem.todoItemID, todoItem);\n      _this3.data.onComplete(updatedTodo);\n      _this3.dialogRef.close();\n    })();\n  }\n  restoreTodoItem() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const todoItem = {\n        title: _this4.taskTitle,\n        description: _this4.taskDescription,\n        completed: false,\n        quality: CompletionQuality.N_A,\n        overdue: false,\n        groupID: _this4.selectedGroup ? _this4.selectedGroup.groupID : '',\n        type: _this4.todoItemTypes,\n        deadline: {\n          date: _this4.taskDeadlineDate.toDateString(),\n          time: `${_this4.timeHour}:${String(_this4.timeMinute).padStart(2, '0')}:00 ${_this4.timePeriod}`\n        }\n      };\n      const restoredTodo = yield _this4.todoItemService.update(_this4.data.restoreTodoItem.todoItemID, todoItem);\n      _this4.data.onComplete(restoredTodo);\n      _this4.dialogRef.close();\n      return todoItem;\n    })();\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n}\nAddTodoListModalComponent.ɵfac = function AddTodoListModalComponent_Factory(t) {\n  return new (t || AddTodoListModalComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.TodoItemService), i0.ɵɵdirectiveInject(i3.GroupService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\nAddTodoListModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddTodoListModalComponent,\n  selectors: [[\"app-add-todo-list-modal\"]],\n  decls: 60,\n  vars: 34,\n  consts: [[\"mat-dialog-title\", \"\", 4, \"ngIf\"], [2, \"position\", \"relative\"], [\"appearance\", \"fill\", 2, \"width\", \"100%\"], [\"name\", \"taskTitle\", \"matInput\", \"\", \"autocomplete\", \"off\", 3, \"appAutofocus\", \"formControl\", \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"rows\", \"5\", \"cols\", \"40\", 3, \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"], [\"appearance\", \"fill\"], [\"multiple\", \"\", 3, \"ngModel\", \"formControl\", \"errorStateMatcher\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [2, \"margin-left\", \"15px\", 3, \"matTooltip\"], [\"appearance\", \"fill\", 2, \"float\", \"right\"], [3, \"ngModel\", \"value\", \"errorStateMatcher\", \"ngModelChange\", \"valueChange\"], [3, \"value\"], [\"matInput\", \"\", 3, \"min\", \"matDatepicker\", \"ngModel\", \"ngModelChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"appearance\", \"fill\", 2, \"width\", \"70px\", \"margin-left\", \"15px\"], [\"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"fill\", 2, \"width\", \"100px\", \"margin-left\", \"15px\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-dialog-title\", \"\"], [\"mat-button\", \"\", 3, \"disabled\", \"click\"]],\n  template: function AddTodoListModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddTodoListModalComponent_h1_0_Template, 2, 0, \"h1\", 0);\n      i0.ɵɵtemplate(1, AddTodoListModalComponent_h1_1_Template, 2, 0, \"h1\", 0);\n      i0.ɵɵtemplate(2, AddTodoListModalComponent_h1_2_Template, 2, 0, \"h1\", 0);\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"mat-form-field\", 2)(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTodoListModalComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.taskTitle = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, AddTodoListModalComponent_mat_error_8_Template, 4, 0, \"mat-error\", 4);\n      i0.ɵɵtemplate(9, AddTodoListModalComponent_mat_error_9_Template, 4, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 5)(11, \"mat-label\");\n      i0.ɵɵtext(12, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"textarea\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTodoListModalComponent_Template_textarea_ngModelChange_13_listener($event) {\n        return ctx.taskDescription = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\")(15, \"mat-form-field\", 7)(16, \"mat-label\");\n      i0.ɵɵtext(17, \"Select Type..\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"mat-select\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTodoListModalComponent_Template_mat_select_ngModelChange_18_listener($event) {\n        return ctx.todoItemTypes = $event;\n      });\n      i0.ɵɵtemplate(19, AddTodoListModalComponent_mat_option_19_Template, 2, 2, \"mat-option\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"mat-icon\", 10);\n      i0.ɵɵtext(21, \" info \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"mat-form-field\", 11)(23, \"mat-label\");\n      i0.ɵɵtext(24, \"(If Groupwork) Select Group\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"mat-select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTodoListModalComponent_Template_mat_select_ngModelChange_25_listener($event) {\n        return ctx.selectedGroup = $event;\n      })(\"valueChange\", function AddTodoListModalComponent_Template_mat_select_valueChange_25_listener($event) {\n        return ctx.selectedGroup = $event;\n      });\n      i0.ɵɵtemplate(26, AddTodoListModalComponent_mat_option_26_Template, 2, 2, \"mat-option\", 9);\n      i0.ɵɵelementStart(27, \"mat-option\", 13);\n      i0.ɵɵtext(28, \"None\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(29, \"div\")(30, \"mat-form-field\", 7)(31, \"mat-label\");\n      i0.ɵɵtext(32, \"Choose a date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTodoListModalComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.taskDeadlineDate = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"mat-hint\");\n      i0.ɵɵtext(35, \"MM/DD/YYYY\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"mat-datepicker-toggle\", 15)(37, \"mat-datepicker\", null, 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"mat-form-field\", 17)(40, \"mat-label\");\n      i0.ɵɵtext(41, \"Hour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"mat-select\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTodoListModalComponent_Template_mat_select_ngModelChange_42_listener($event) {\n        return ctx.timeHour = $event;\n      });\n      i0.ɵɵtemplate(43, AddTodoListModalComponent_mat_option_43_Template, 2, 2, \"mat-option\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"mat-form-field\", 19)(45, \"mat-label\");\n      i0.ɵɵtext(46, \"Minutes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"mat-select\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTodoListModalComponent_Template_mat_select_ngModelChange_47_listener($event) {\n        return ctx.timeMinute = $event;\n      });\n      i0.ɵɵtemplate(48, AddTodoListModalComponent_mat_option_48_Template, 3, 5, \"mat-option\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(49, \"mat-form-field\", 19)(50, \"mat-label\");\n      i0.ɵɵtext(51, \"Period\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"mat-select\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTodoListModalComponent_Template_mat_select_ngModelChange_52_listener($event) {\n        return ctx.timePeriod = $event;\n      });\n      i0.ɵɵtemplate(53, AddTodoListModalComponent_mat_option_53_Template, 2, 2, \"mat-option\", 9);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(54, \"div\", 20)(55, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function AddTodoListModalComponent_Template_button_click_55_listener() {\n        return ctx.onNoClick();\n      });\n      i0.ɵɵtext(56, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(57, AddTodoListModalComponent_button_57_Template, 2, 1, \"button\", 22);\n      i0.ɵɵtemplate(58, AddTodoListModalComponent_button_58_Template, 2, 1, \"button\", 22);\n      i0.ɵɵtemplate(59, AddTodoListModalComponent_button_59_Template, 2, 1, \"button\", 22);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r7 = i0.ɵɵreference(38);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editing && !ctx.restoring);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.restoring);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"appAutofocus\", true)(\"formControl\", ctx.taskTitleControl)(\"errorStateMatcher\", ctx.matcher)(\"ngModel\", ctx.taskTitle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.taskTitle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.taskTitle && ctx.taskTitle.length > ctx.TODO_TITLE_MAX_LENGTH);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"errorStateMatcher\", ctx.matcher)(\"ngModel\", ctx.taskDescription);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.todoItemTypes)(\"formControl\", ctx.todoItemTypeFormControl)(\"errorStateMatcher\", ctx.matcher);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todoItemOptions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matTooltip\", ctx.todoTypeTooltip);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedGroup)(\"value\", ctx.selectedGroup)(\"errorStateMatcher\", ctx.matcher);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userGroups);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"min\", ctx.taskDeadlineDate)(\"matDatepicker\", _r7)(\"ngModel\", ctx.taskDeadlineDate);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"for\", _r7);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.timeHour);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.hourRange);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.timeMinute);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.minuteRange);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.timePeriod);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(33, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editing && !ctx.restoring);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.restoring);\n    }\n  },\n  styles: [\".mat-tooltip {\\n  white-space: pre-line;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtdG9kby1saXN0LW1vZGFsL2FkZC10b2RvLWxpc3QtbW9kYWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIC5tYXQtdG9vbHRpcCB7XG4gIHdoaXRlLXNwYWNlOiBwcmUtbGluZTsgLy8gQWxsb3cgbGluZSBicmVha1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["MAT_DIALOG_DATA","TodoItemType","CompletionQuality","FormControl","Validators","MyErrorStateMatcher","generateUniqueID","TODO_TITLE_MAX_LENGTH","EXPANDED_TODO_TYPE","i0","AddTodoListModalComponent","constructor","dialogRef","todoItemService","groupService","data","Date","getTime","Array","fill","map","_","i","required","maxLength","COGNITION","SEL","BEHAVIOURAL","ATL","CLASS","projectID","userID","todoItem","editing","taskDeadlineDate","deadline","date","taskTitle","title","taskDescription","description","time","split","timeHour","parseInt","timeMinute","timePeriod","todoItemTypes","type","restoreTodoItem","restoring","ngOnInit","userGroups","getByUserAndProject","group","selectedGroup","find","g","groupID","createTodoItem","todoItemID","completed","quality","N_A","overdue","notifications","toDateString","String","padStart","create","onComplete","close","updateTodoItem","updatedTodo","update","restoredTodo","onNoClick","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/add-todo-list-modal/add-todo-list-modal.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/add-todo-list-modal/add-todo-list-modal.component.html"],"sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TodoItemService } from 'src/app/services/todoItem.service';\nimport { GroupService } from 'src/app/services/group.service';\nimport {\n  TodoItem,\n  TodoItemType,\n  CompletionQuality,\n} from 'src/app/models/todoItem';\nimport { Group } from 'src/app/models/group';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MyErrorStateMatcher } from 'src/app/utils/ErrorStateMatcher';\nimport { generateUniqueID } from 'src/app/utils/Utils';\nimport {\n  TODO_TITLE_MAX_LENGTH,\n  EXPANDED_TODO_TYPE,\n} from 'src/app/utils/constants';\n\n@Component({\n  selector: 'app-add-todo-list-modal',\n  templateUrl: './add-todo-list-modal.component.html',\n  styleUrls: ['./add-todo-list-modal.component.scss'],\n})\nexport class AddTodoListModalComponent implements OnInit {\n  taskTitle = '';\n  taskDescription = '';\n  taskDeadlineDate: Date = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\n  timeHour = 12;\n  timeMinute = 0;\n  timePeriod = 'AM';\n  hourRange = Array(12)\n    .fill(0)\n    .map((_, i) => i + 1);\n  minuteRange = Array(4)\n    .fill(0)\n    .map((_, i) => i * 15);\n  taskTitleControl = new FormControl('', [\n    Validators.required,\n    Validators.maxLength(TODO_TITLE_MAX_LENGTH),\n  ]);\n  todoItemTypeFormControl = new FormControl('valid', [Validators.required]);\n  todoItemTypes: TodoItemType[] = [];\n  EXPANDED_TODO_TYPE: typeof EXPANDED_TODO_TYPE = EXPANDED_TODO_TYPE;\n  todoItemOptions = [\n    TodoItemType.COGNITION,\n    TodoItemType.SEL,\n    TodoItemType.BEHAVIOURAL,\n    TodoItemType.ATL,\n    TodoItemType.CLASS,\n  ];\n  selectedGroup: Group | undefined;\n  userGroups: Group[];\n\n  matcher = new MyErrorStateMatcher();\n\n  projectID: string;\n  userID: string;\n  editing = false;\n  restoring = false;\n\n  TODO_TITLE_MAX_LENGTH = TODO_TITLE_MAX_LENGTH;\n\n  todoTypeTooltip = `\n    Content learning (i.e., learning strategies for memorization, recall, or application of knowledge)\n\n    Social-emotional learning (i.e., supports for developing your emotional awareness, stress management, motivation, math identity, relationships, or critical/creative thinking)\n\n    ATL skills (i.e., thining skills, self-management skills, and research skills)\n\n    Classroom engagement (i.e., practices for improving learning engagement, e.g., note-taking, asking questions, designing/explaining/suggesting ideas, or generating/sharing ideas with classmates)\n  `;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddTodoListModalComponent>,\n    public todoItemService: TodoItemService,\n    public groupService: GroupService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.projectID = data.projectID;\n    this.userID = data.userID;\n    if (data.todoItem) {\n      this.editing = true;\n      this.taskDeadlineDate = new Date(data.todoItem.deadline.date);\n      this.taskTitle = data.todoItem.title;\n      this.taskDescription = data.todoItem.description;\n      const time = data.todoItem.deadline.time.split(':');\n      this.timeHour = parseInt(time[0]);\n      this.timeMinute = parseInt(time[1]);\n      this.timePeriod = time[2].split(' ')[1];\n      this.todoItemTypes = data.todoItem.type;\n    } else if (data.restoreTodoItem) {\n      this.restoring = true;\n      this.taskTitle = data.restoreTodoItem.title;\n      this.taskDescription = data.restoreTodoItem.description;\n      this.todoItemTypes = data.restoreTodoItem.type;\n    }\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.userGroups = await this.groupService.getByUserAndProject(\n      this.userID,\n      this.projectID\n    );\n    if (this.data.group) {\n      this.selectedGroup = this.userGroups.find(\n        (g) => g.groupID === this.data.group.groupID\n      );\n    }\n  }\n\n  async createTodoItem() {\n    const todoItem: TodoItem = {\n      todoItemID: generateUniqueID(),\n      projectID: this.projectID,\n      userID: this.userID,\n      title: this.taskTitle,\n      description: this.taskDescription,\n      groupID: this.selectedGroup ? this.selectedGroup.groupID : '',\n      completed: false,\n      quality: CompletionQuality.N_A,\n      overdue: false,\n      type: this.todoItemTypes,\n      notifications: [],\n      deadline: {\n        date: this.taskDeadlineDate.toDateString(),\n        time: `${this.timeHour}:${String(this.timeMinute).padStart(\n          2,\n          '0'\n        )}:00 ${this.timePeriod}`,\n      },\n    };\n    await this.todoItemService.create(todoItem);\n    this.data.onComplete(todoItem);\n    this.dialogRef.close();\n    return todoItem;\n  }\n\n  async updateTodoItem() {\n    const todoItem: Partial<TodoItem> = {\n      title: this.taskTitle,\n      description: this.taskDescription,\n      groupID: this.selectedGroup ? this.selectedGroup.groupID : '',\n      type: this.todoItemTypes,\n      deadline: {\n        date: this.taskDeadlineDate.toDateString(),\n        time: `${this.timeHour}:${String(this.timeMinute).padStart(\n          2,\n          '0'\n        )}:00 ${this.timePeriod}`,\n      },\n    };\n\n    const updatedTodo = await this.todoItemService.update(\n      this.data.todoItem.todoItemID,\n      todoItem\n    );\n    this.data.onComplete(updatedTodo);\n    this.dialogRef.close();\n  }\n\n  async restoreTodoItem() {\n    const todoItem: Partial<TodoItem> = {\n      title: this.taskTitle,\n      description: this.taskDescription,\n      completed: false,\n      quality: CompletionQuality.N_A,\n      overdue: false,\n      groupID: this.selectedGroup ? this.selectedGroup.groupID : '',\n      type: this.todoItemTypes,\n      deadline: {\n        date: this.taskDeadlineDate.toDateString(),\n        time: `${this.timeHour}:${String(this.timeMinute).padStart(\n          2,\n          '0'\n        )}:00 ${this.timePeriod}`,\n      },\n    };\n\n    const restoredTodo = await this.todoItemService.update(\n      this.data.restoreTodoItem.todoItemID,\n      todoItem\n    );\n    this.data.onComplete(restoredTodo);\n    this.dialogRef.close();\n    return todoItem;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title *ngIf=\"!editing && !restoring\">Add Todo List Task</h1>\n<h1 mat-dialog-title *ngIf=\"editing\">Edit Task</h1>\n<h1 mat-dialog-title *ngIf=\"restoring\">Restore Task</h1>\n<div style=\"position: relative;\">\n  <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n    <mat-label>Title</mat-label>\n    <input\n      name=\"taskTitle\"\n      [appAutofocus]=\"true\"\n      [formControl]=\"taskTitleControl\"\n      [errorStateMatcher]=\"matcher\"\n      matInput\n      autocomplete=\"off\"\n      [(ngModel)]=\"taskTitle\"\n    />\n    <mat-error *ngIf=\"!taskTitle\"> Task Title is <strong>required</strong> </mat-error>\n    <mat-error *ngIf=\"taskTitle && taskTitle.length > TODO_TITLE_MAX_LENGTH\">\n      Task Title is <strong>too long!</strong>\n    </mat-error>\n  </mat-form-field>\n  <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n    <mat-label>Description</mat-label>\n    <textarea\n      [errorStateMatcher]=\"matcher\"\n      matInput\n      rows=\"5\"\n      cols=\"40\"\n      [(ngModel)]=\"taskDescription\"\n    ></textarea>\n  </mat-form-field>\n    <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Select Type..</mat-label>\n      <mat-select\n        [(ngModel)]=\"todoItemTypes\"\n        [formControl]=\"todoItemTypeFormControl\"\n        [errorStateMatcher]=\"matcher\"\n        multiple\n      >\n        <mat-option *ngFor=\"let option of todoItemOptions\" [value]=option>\n          {{ EXPANDED_TODO_TYPE[option] }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-icon \n      style=\"margin-left: 15px;\" \n      [matTooltip]=\"todoTypeTooltip\">\n      info\n    </mat-icon>\n    <mat-form-field appearance=\"fill\" style=\"float: right\">\n      <mat-label>(If Groupwork) Select Group</mat-label>\n      <mat-select\n        [(ngModel)]=\"selectedGroup\"\n        [(value)]=\"selectedGroup\"\n        [errorStateMatcher]=\"matcher\"\n      >\n        <mat-option *ngFor=\"let group of userGroups\" [value]=\"group\">\n          {{ group.name }}\n        </mat-option>\n        <mat-option [value]=\"\">None</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Choose a date</mat-label>\n      <input matInput [min]=\"taskDeadlineDate\" [matDatepicker]=\"picker\" [(ngModel)]=\"taskDeadlineDate\">\n      <mat-hint>MM/DD/YYYY</mat-hint>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" style=\"width: 70px; margin-left: 15px;\">\n      <mat-label>Hour</mat-label>\n      <mat-select [(ngModel)]=\"timeHour\" required>\n        <mat-option *ngFor=\"let hour of hourRange\" [value]=\"hour\">\n          {{hour}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" style=\"width: 100px; margin-left: 15px;\">\n      <mat-label>Minutes</mat-label>\n      <mat-select [(ngModel)]=\"timeMinute\" required>\n        <mat-option *ngFor=\"let minute of minuteRange\" [value]=\"minute\">\n          {{minute | number:'2.0'}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" style=\"width: 100px; margin-left: 15px;\">\n      <mat-label>Period</mat-label>\n      <mat-select [(ngModel)]=\"timePeriod\" required>\n        <mat-option *ngFor=\"let period of ['AM', 'PM']\" [value]=\"period\">\n          {{period}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Close</button>\n  <button \n    *ngIf=\"!editing && !restoring\"\n    mat-button [disabled]=\"!taskTitleControl.valid || !todoItemTypeFormControl.valid\" \n    (click)=\"createTodoItem()\"\n  >Create Todo Item</button>\n  <button \n    *ngIf=\"editing\"\n    mat-button [disabled]=\"!taskTitleControl.valid || !todoItemTypeFormControl.valid\" \n    (click)=\"updateTodoItem()\"\n  >Update Todo Item</button>\n  <button \n    *ngIf=\"restoring\"\n    mat-button [disabled]=\"!taskTitleControl.valid || !todoItemTypeFormControl.valid\" \n    (click)=\"restoreTodoItem()\"\n  >Restore Todo Item</button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}