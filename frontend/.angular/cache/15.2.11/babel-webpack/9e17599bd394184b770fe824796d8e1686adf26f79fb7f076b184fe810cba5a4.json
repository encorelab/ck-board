{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.redirectUrl = null;\n  }\n  getOneById(id) {\n    return this.http.get('auth/' + id, {\n      headers: {\n        cache: 'true'\n      }\n    }).toPromise();\n  }\n  getMultipleByIds(ids) {\n    return this.http.post('auth/multiple', ids).toPromise();\n  }\n  getByProject(projectID) {\n    return this.http.get('auth/project/' + projectID).toPromise();\n  }\n  register(user) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.http.post('auth/register', user).toPromise().then(result => {\n        localStorage.setItem('user', JSON.stringify(result.user));\n        localStorage.setItem('access_token', result.token);\n        localStorage.setItem('expires_at', result.expiresAt);\n        return true;\n      });\n    })();\n  }\n  login(email, password) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2.http.post('auth/login', {\n        email: email,\n        password: password\n      }).toPromise().then(result => {\n        localStorage.setItem('user', JSON.stringify(result.user));\n        localStorage.setItem('access_token', result.token);\n        localStorage.setItem('expires_at', result.expiresAt);\n        return true;\n      });\n    })();\n  }\n  isSsoEnabled() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.http.get('auth/is-sso-enabled').toPromise().then(response => {\n        return response.isSsoEnabled;\n      });\n    })();\n  }\n  trySsoLogin(attemptedUrl) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return _this4.http.get('auth/sso/handshake').toPromise().then(response => {\n        window.location.href = `${response.scoreSsoEndpoint}?sig=${response.sig}&sso=${response.sso}&redirectUrl=${attemptedUrl}`;\n        return false;\n      });\n    })();\n  }\n  ssoLogin(sso, sig) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      return _this5.http.get(`auth/sso/login/${sso}/${sig}`).toPromise().then(result => {\n        localStorage.setItem('user', JSON.stringify(result.user));\n        localStorage.setItem('access_token', result.token);\n        localStorage.setItem('expires_at', result.expiresAt);\n        window.location.href = result.redirectUrl;\n        return true;\n      });\n    })();\n  }\n  logout() {\n    localStorage.removeItem('user');\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('expires_at');\n  }\n  update(id, user) {\n    return this.http.post('auth/' + id, user).toPromise();\n  }\n  delete(id) {\n    return this.http.delete('auth/' + id).toPromise();\n  }\n  get loggedIn() {\n    const token = localStorage.getItem('access_token');\n    const expiry = localStorage.getItem('expires_at');\n    if (!expiry || !token) return false;\n    const expiryAsNumber = new Date(expiry).getTime();\n    return Date.now() < expiryAsNumber;\n  }\n  get token() {\n    return localStorage.getItem('access_token');\n  }\n  get user() {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      return JSON.parse(storedUser);\n    }\n    return null;\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,gBAAW,GAAkB,IAAI;EAEM;EAEvCC,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACF,IAAI,CACbG,GAAG,CAAO,OAAO,GAAGD,EAAE,EAAE;MAAEE,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAM;IAAE,CAAE,CAAC,CACvDC,SAAS,EAAE;EAChB;EAEAC,gBAAgB,CAACC,GAAa;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAS,eAAe,EAAED,GAAG,CAAC,CAACF,SAAS,EAAE;EACjE;EAEAI,YAAY,CAACC,SAAiB;IAC5B,OAAO,IAAI,CAACX,IAAI,CAACG,GAAG,CAAa,eAAe,GAAGQ,SAAS,CAAC,CAACL,SAAS,EAAE;EAC3E;EAEMM,QAAQ,CAACC,IAAU;IAAA;IAAA;MACvB,OAAO,KAAI,CAACb,IAAI,CACbS,IAAI,CAAgB,eAAe,EAAEI,IAAI,CAAC,CAC1CP,SAAS,EAAE,CACXQ,IAAI,CAAEC,MAAM,IAAI;QACfC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACF,IAAI,CAAC,CAAC;QACzDG,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,MAAM,CAACK,KAAK,CAAC;QAClDJ,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,MAAM,CAACM,SAAS,CAAC;QACpD,OAAO,IAAI;MACb,CAAC,CAAC;IAAC;EACP;EAEMC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IAAA;IAAA;MACzC,OAAO,MAAI,CAACxB,IAAI,CACbS,IAAI,CAAgB,YAAY,EAAE;QACjCc,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA;OACX,CAAC,CACDlB,SAAS,EAAE,CACXQ,IAAI,CAAEC,MAAM,IAAI;QACfC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACF,IAAI,CAAC,CAAC;QACzDG,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,MAAM,CAACK,KAAK,CAAC;QAClDJ,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,MAAM,CAACM,SAAS,CAAC;QACpD,OAAO,IAAI;MACb,CAAC,CAAC;IAAC;EACP;EAEMI,YAAY;IAAA;IAAA;MAChB,OAAO,MAAI,CAACzB,IAAI,CACbG,GAAG,CAAC,qBAAqB,CAAC,CAC1BG,SAAS,EAAE,CACXQ,IAAI,CAAEY,QAAa,IAAI;QACtB,OAAOA,QAAQ,CAACD,YAAY;MAC9B,CAAC,CAAC;IAAC;EACP;EAEME,WAAW,CAACC,YAAoB;IAAA;IAAA;MACpC,OAAO,MAAI,CAAC5B,IAAI,CACbG,GAAG,CAAC,oBAAoB,CAAC,CACzBG,SAAS,EAAE,CACXQ,IAAI,CAAEY,QAAa,IAAI;QACtBG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAGL,QAAQ,CAACM,gBAAgB,QAAQN,QAAQ,CAACO,GAAG,QAAQP,QAAQ,CAACQ,GAAG,gBAAgBN,YAAY,EAAE;QACzH,OAAO,KAAK;MACd,CAAC,CAAC;IAAC;EACP;EAEMO,QAAQ,CAACD,GAAkB,EAAED,GAAkB;IAAA;IAAA;MACnD,OAAO,MAAI,CAACjC,IAAI,CACbG,GAAG,CAAC,kBAAkB+B,GAAG,IAAID,GAAG,EAAE,CAAC,CACnC3B,SAAS,EAAE,CACXQ,IAAI,CAAEC,MAAW,IAAI;QACpBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACF,IAAI,CAAC,CAAC;QACzDG,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,MAAM,CAACK,KAAK,CAAC;QAClDJ,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,MAAM,CAACM,SAAS,CAAC;QACpDQ,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGhB,MAAM,CAACqB,WAAW;QACzC,OAAO,IAAI;MACb,CAAC,CAAC;IAAC;EACP;EAEAC,MAAM;IACJrB,YAAY,CAACsB,UAAU,CAAC,MAAM,CAAC;IAC/BtB,YAAY,CAACsB,UAAU,CAAC,cAAc,CAAC;IACvCtB,YAAY,CAACsB,UAAU,CAAC,YAAY,CAAC;EACvC;EAEAC,MAAM,CAACrC,EAAU,EAAEW,IAAmB;IACpC,OAAO,IAAI,CAACb,IAAI,CAACS,IAAI,CAAC,OAAO,GAAGP,EAAE,EAAEW,IAAI,CAAC,CAACP,SAAS,EAAE;EACvD;EAEAkC,MAAM,CAACtC,EAAU;IACf,OAAO,IAAI,CAACF,IAAI,CAACwC,MAAM,CAAC,OAAO,GAAGtC,EAAE,CAAC,CAACI,SAAS,EAAE;EACnD;EAEA,IAAWmC,QAAQ;IACjB,MAAMrB,KAAK,GAAGJ,YAAY,CAAC0B,OAAO,CAAC,cAAc,CAAC;IAClD,MAAMC,MAAM,GAAG3B,YAAY,CAAC0B,OAAO,CAAC,YAAY,CAAC;IAEjD,IAAI,CAACC,MAAM,IAAI,CAACvB,KAAK,EAAE,OAAO,KAAK;IAEnC,MAAMwB,cAAc,GAAG,IAAIC,IAAI,CAACF,MAAM,CAAC,CAACG,OAAO,EAAE;IAEjD,OAAOD,IAAI,CAACE,GAAG,EAAE,GAAGH,cAAc;EACpC;EAEA,IAAWxB,KAAK;IACd,OAAOJ,YAAY,CAAC0B,OAAO,CAAC,cAAc,CAAC;EAC7C;EAEA,IAAW7B,IAAI;IACb,MAAMmC,UAAU,GAAGhC,YAAY,CAAC0B,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIM,UAAU,EAAE;MACd,OAAO9B,IAAI,CAAC+B,KAAK,CAACD,UAAU,CAAC;;IAG/B,OAAO,IAAI;EACb;;;mBAlHWlD,WAAW;AAAA;;SAAXA,WAAW;EAAAoD,SAAXpD,WAAW;EAAAqD,YAFV;AAAM","names":["UserService","constructor","http","getOneById","id","get","headers","cache","toPromise","getMultipleByIds","ids","post","getByProject","projectID","register","user","then","result","localStorage","setItem","JSON","stringify","token","expiresAt","login","email","password","isSsoEnabled","response","trySsoLogin","attemptedUrl","window","location","href","scoreSsoEndpoint","sig","sso","ssoLogin","redirectUrl","logout","removeItem","update","delete","loggedIn","getItem","expiry","expiryAsNumber","Date","getTime","now","storedUser","parse","factory","providedIn"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/services/user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport User, { AuthUser, TokenResponse } from '../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  redirectUrl: string | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  getOneById(id: string): Promise<User> {\n    return this.http\n      .get<User>('auth/' + id, { headers: { cache: 'true' } })\n      .toPromise();\n  }\n\n  getMultipleByIds(ids: string[]) {\n    return this.http.post<User[]>('auth/multiple', ids).toPromise();\n  }\n\n  getByProject(projectID: string): Promise<AuthUser[]> {\n    return this.http.get<AuthUser[]>('auth/project/' + projectID).toPromise();\n  }\n\n  async register(user: User) {\n    return this.http\n      .post<TokenResponse>('auth/register', user)\n      .toPromise()\n      .then((result) => {\n        localStorage.setItem('user', JSON.stringify(result.user));\n        localStorage.setItem('access_token', result.token);\n        localStorage.setItem('expires_at', result.expiresAt);\n        return true;\n      });\n  }\n\n  async login(email: string, password: string): Promise<boolean> {\n    return this.http\n      .post<TokenResponse>('auth/login', {\n        email: email,\n        password: password,\n      })\n      .toPromise()\n      .then((result) => {\n        localStorage.setItem('user', JSON.stringify(result.user));\n        localStorage.setItem('access_token', result.token);\n        localStorage.setItem('expires_at', result.expiresAt);\n        return true;\n      });\n  }\n\n  async isSsoEnabled(): Promise<boolean> {\n    return this.http\n      .get('auth/is-sso-enabled')\n      .toPromise()\n      .then((response: any) => {\n        return response.isSsoEnabled;\n      });\n  }\n\n  async trySsoLogin(attemptedUrl: string): Promise<any> {\n    return this.http\n      .get('auth/sso/handshake')\n      .toPromise()\n      .then((response: any) => {\n        window.location.href = `${response.scoreSsoEndpoint}?sig=${response.sig}&sso=${response.sso}&redirectUrl=${attemptedUrl}`;\n        return false;\n      });\n  }\n\n  async ssoLogin(sso: string | null, sig: string | null): Promise<boolean> {\n    return this.http\n      .get(`auth/sso/login/${sso}/${sig}`)\n      .toPromise()\n      .then((result: any) => {\n        localStorage.setItem('user', JSON.stringify(result.user));\n        localStorage.setItem('access_token', result.token);\n        localStorage.setItem('expires_at', result.expiresAt);\n        window.location.href = result.redirectUrl;\n        return true;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('expires_at');\n  }\n\n  update(id: string, user: Partial<User>) {\n    return this.http.post('auth/' + id, user).toPromise();\n  }\n\n  delete(id: string) {\n    return this.http.delete('auth/' + id).toPromise();\n  }\n\n  public get loggedIn(): boolean {\n    const token = localStorage.getItem('access_token');\n    const expiry = localStorage.getItem('expires_at');\n\n    if (!expiry || !token) return false;\n\n    const expiryAsNumber = new Date(expiry).getTime();\n\n    return Date.now() < expiryAsNumber;\n  }\n\n  public get token(): string | null {\n    return localStorage.getItem('access_token');\n  }\n\n  public get user(): AuthUser | null {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      return JSON.parse(storedUser);\n    }\n\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}