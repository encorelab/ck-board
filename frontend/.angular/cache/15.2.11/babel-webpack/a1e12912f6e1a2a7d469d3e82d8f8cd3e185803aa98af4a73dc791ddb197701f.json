{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProjectService {\n  constructor(http) {\n    this.http = http;\n  }\n  get(projectID) {\n    return this.http.get('projects/' + projectID).toPromise();\n  }\n  getByUserID(id) {\n    return this.http.get('projects/users/' + id).toPromise();\n  }\n  create(project) {\n    return this.http.post('projects/', project).toPromise();\n  }\n  update(projectID, project) {\n    return this.http.post('projects/' + projectID, project).toPromise();\n  }\n  joinProject(code) {\n    return this.http.post(`projects/join`, {\n      code\n    }).toPromise();\n  }\n  remove(projectID) {\n    return this.http.delete('projects/' + projectID).toPromise();\n  }\n}\nProjectService.ɵfac = function ProjectService_Factory(t) {\n  return new (t || ProjectService)(i0.ɵɵinject(i1.HttpClient));\n};\nProjectService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProjectService,\n  factory: ProjectService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,GAAG,CAACC,SAAiB;IACnB,OAAO,IAAI,CAACF,IAAI,CAACC,GAAG,CAAU,WAAW,GAAGC,SAAS,CAAC,CAACC,SAAS,EAAE;EACpE;EAEAC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACC,GAAG,CAAY,iBAAiB,GAAGI,EAAE,CAAC,CAACF,SAAS,EAAE;EACrE;EAEAG,MAAM,CAACC,OAAgB;IACrB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,WAAW,EAAED,OAAO,CAAC,CAACJ,SAAS,EAAE;EAClE;EAEAM,MAAM,CAACP,SAAiB,EAAEK,OAAyB;IACjD,OAAO,IAAI,CAACP,IAAI,CACbQ,IAAI,CAAU,WAAW,GAAGN,SAAS,EAAEK,OAAO,CAAC,CAC/CJ,SAAS,EAAE;EAChB;EAEAO,WAAW,CAACC,IAAY;IACtB,OAAO,IAAI,CAACX,IAAI,CAACQ,IAAI,CAAU,eAAe,EAAE;MAAEG;IAAI,CAAE,CAAC,CAACR,SAAS,EAAE;EACvE;EAEAS,MAAM,CAACV,SAAiB;IACtB,OAAO,IAAI,CAACF,IAAI,CAACa,MAAM,CAAU,WAAW,GAAGX,SAAS,CAAC,CAACC,SAAS,EAAE;EACvE;;;mBA3BWL,cAAc;AAAA;;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;EAAAiB,YAFb;AAAM","names":["ProjectService","constructor","http","get","projectID","toPromise","getByUserID","id","create","project","post","update","joinProject","code","remove","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/services/project.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Project } from '../models/project';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private http: HttpClient) {}\n\n  get(projectID: string): Promise<Project> {\n    return this.http.get<Project>('projects/' + projectID).toPromise();\n  }\n\n  getByUserID(id: string): Promise<Project[]> {\n    return this.http.get<Project[]>('projects/users/' + id).toPromise();\n  }\n\n  create(project: Project): Promise<Project> {\n    return this.http.post<Project>('projects/', project).toPromise();\n  }\n\n  update(projectID: string, project: Partial<Project>): Promise<Project> {\n    return this.http\n      .post<Project>('projects/' + projectID, project)\n      .toPromise();\n  }\n\n  joinProject(code: string): Promise<Project> {\n    return this.http.post<Project>(`projects/join`, { code }).toPromise();\n  }\n\n  remove(projectID: string): Promise<Project> {\n    return this.http.delete<Project>('projects/' + projectID).toPromise();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}