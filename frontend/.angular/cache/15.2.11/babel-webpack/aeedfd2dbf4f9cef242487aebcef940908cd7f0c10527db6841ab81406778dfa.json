{"ast":null,"code":"export var ContainerType;\n(function (ContainerType) {\n  ContainerType[\"BOARD\"] = \"BOARD\";\n  ContainerType[\"BUCKET\"] = \"BUCKET\";\n  ContainerType[\"WORKFLOW\"] = \"WORKFLOW\";\n})(ContainerType || (ContainerType = {}));\nexport var DistributionWorkflowType;\n(function (DistributionWorkflowType) {\n  DistributionWorkflowType[\"RANDOM\"] = \"RANDOM\";\n  DistributionWorkflowType[\"TAG\"] = \"TAG\";\n  DistributionWorkflowType[\"UPVOTES\"] = \"UPVOTES\";\n})(DistributionWorkflowType || (DistributionWorkflowType = {}));\nexport class DistributionWorkflowTypeModel {\n  type;\n  data;\n}\nexport class Container {\n  type;\n  id;\n  name;\n}\nexport var WorkflowType;\n(function (WorkflowType) {\n  WorkflowType[\"DISTRIBUTION\"] = \"DISTRIBUTION\";\n  WorkflowType[\"TASK\"] = \"TASK\";\n  WorkflowType[\"GENERATION\"] = \"GENERATION\";\n})(WorkflowType || (WorkflowType = {}));\nexport var TaskWorkflowType;\n(function (TaskWorkflowType) {\n  TaskWorkflowType[\"PEER_REVIEW\"] = \"PEER_REVIEW\";\n  TaskWorkflowType[\"GENERATION\"] = \"GENERATION\";\n})(TaskWorkflowType || (TaskWorkflowType = {}));\nexport var TaskActionType;\n(function (TaskActionType) {\n  TaskActionType[\"COMMENT\"] = \"COMMENT\";\n  TaskActionType[\"TAG\"] = \"TAG\";\n  TaskActionType[\"CREATE_POST\"] = \"CREATE_POST\";\n})(TaskActionType || (TaskActionType = {}));\nexport var GroupTaskStatus;\n(function (GroupTaskStatus) {\n  GroupTaskStatus[\"INACTIVE\"] = \"INACTIVE\";\n  GroupTaskStatus[\"ACTIVE\"] = \"ACTIVE\";\n  GroupTaskStatus[\"COMPLETE\"] = \"COMPLETE\";\n})(GroupTaskStatus || (GroupTaskStatus = {}));\nexport class TaskAction {\n  type;\n  amountRequired;\n}\nexport class GroupTask {\n  groupTaskID;\n  groupID;\n  workflowID;\n  posts;\n  progress;\n  status;\n}\nexport class ExpandedGroupTask {\n  groupTask;\n  workflow;\n  group;\n}\nexport class Workflow {\n  workflowID;\n  boardID;\n  name;\n  active;\n  source;\n  destinations;\n}\nexport class DistributionWorkflow extends Workflow {\n  distributionWorkflowType;\n  removeFromSource;\n}\nexport class TaskWorkflow extends Workflow {\n  prompt;\n  requiredActions;\n  assignedGroups;\n  type;\n}\nconst workflows = {\n  DistributionWorkflow\n};\nexport default workflows;","map":{"version":3,"mappings":"AAEA,WAAYA,aAIX;AAJD,WAAYA,aAAa;EACvBA,gCAAe;EACfA,kCAAiB;EACjBA,sCAAqB;AACvB,CAAC,EAJWA,aAAa,KAAbA,aAAa;AAMzB,WAAYC,wBAIX;AAJD,WAAYA,wBAAwB;EAClCA,6CAAiB;EACjBA,uCAAW;EACXA,+CAAmB;AACrB,CAAC,EAJWA,wBAAwB,KAAxBA,wBAAwB;AAMpC,OAAM,MAAOC,6BAA6B;EACxCC,IAAI;EACJC,IAAI;;AAGN,OAAM,MAAOC,SAAS;EACpBF,IAAI;EACJG,EAAE;EACFC,IAAI;;AAGN,WAAYC,YAIX;AAJD,WAAYA,YAAY;EACtBA,6CAA6B;EAC7BA,6BAAa;EACbA,yCAAyB;AAC3B,CAAC,EAJWA,YAAY,KAAZA,YAAY;AAMxB,WAAYC,gBAGX;AAHD,WAAYA,gBAAgB;EAC1BA,+CAA2B;EAC3BA,6CAAyB;AAC3B,CAAC,EAHWA,gBAAgB,KAAhBA,gBAAgB;AAK5B,WAAYC,cAIX;AAJD,WAAYA,cAAc;EACxBA,qCAAmB;EACnBA,6BAAW;EACXA,6CAA2B;AAC7B,CAAC,EAJWA,cAAc,KAAdA,cAAc;AAM1B,WAAYC,eAIX;AAJD,WAAYA,eAAe;EACzBA,wCAAqB;EACrBA,oCAAiB;EACjBA,wCAAqB;AACvB,CAAC,EAJWA,eAAe,KAAfA,eAAe;AAM3B,OAAM,MAAOC,UAAU;EACrBT,IAAI;EACJU,cAAc;;AAWhB,OAAM,MAAOC,SAAS;EACpBC,WAAW;EACXC,OAAO;EACPC,UAAU;EACVC,KAAK;EACLC,QAAQ;EACRC,MAAM;;AAGR,OAAM,MAAOC,iBAAiB;EAC5BC,SAAS;EACTC,QAAQ;EACRC,KAAK;;AAGP,OAAM,MAAOC,QAAQ;EACnBR,UAAU;EACVS,OAAO;EACPnB,IAAI;EAEJoB,MAAM;EAENC,MAAM;EACNC,YAAY;;AAGd,OAAM,MAAOC,oBAAqB,SAAQL,QAAQ;EAChDM,wBAAwB;EACxBC,gBAAgB;;AAGlB,OAAM,MAAOC,YAAa,SAAQR,QAAQ;EACxCS,MAAM;EACNC,eAAe;EACfC,cAAc;EACdjC,IAAI;;AAGN,MAAMkC,SAAS,GAAG;EAChBP;CACD;AAED,eAAeO,SAAS","names":["ContainerType","DistributionWorkflowType","DistributionWorkflowTypeModel","type","data","Container","id","name","WorkflowType","TaskWorkflowType","TaskActionType","GroupTaskStatus","TaskAction","amountRequired","GroupTask","groupTaskID","groupID","workflowID","posts","progress","status","ExpandedGroupTask","groupTask","workflow","group","Workflow","boardID","active","source","destinations","DistributionWorkflow","distributionWorkflowType","removeFromSource","TaskWorkflow","prompt","requiredActions","assignedGroups","workflows"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/models/workflow.ts"],"sourcesContent":["import { Group } from './group';\n\nexport enum ContainerType {\n  BOARD = 'BOARD',\n  BUCKET = 'BUCKET',\n  WORKFLOW = 'WORKFLOW',\n}\n\nexport enum DistributionWorkflowType {\n  RANDOM = 'RANDOM',\n  TAG = 'TAG',\n  UPVOTES = 'UPVOTES',\n}\n\nexport class DistributionWorkflowTypeModel {\n  type: DistributionWorkflowType;\n  data: any;\n}\n\nexport class Container {\n  type: ContainerType;\n  id: string;\n  name: string;\n}\n\nexport enum WorkflowType {\n  DISTRIBUTION = 'DISTRIBUTION',\n  TASK = 'TASK',\n  GENERATION = 'GENERATION',\n}\n\nexport enum TaskWorkflowType {\n  PEER_REVIEW = 'PEER_REVIEW',\n  GENERATION = 'GENERATION',\n}\n\nexport enum TaskActionType {\n  COMMENT = 'COMMENT',\n  TAG = 'TAG',\n  CREATE_POST = 'CREATE_POST',\n}\n\nexport enum GroupTaskStatus {\n  INACTIVE = 'INACTIVE',\n  ACTIVE = 'ACTIVE',\n  COMPLETE = 'COMPLETE',\n}\n\nexport class TaskAction {\n  type: TaskActionType;\n  amountRequired: number;\n}\n\nexport type GroupTaskEntity = 'default' | 'expanded';\n\nexport type GroupTaskType<T> = T extends 'default'\n  ? GroupTask\n  : T extends 'expanded'\n  ? ExpandedGroupTask\n  : never;\n\nexport class GroupTask {\n  groupTaskID: string;\n  groupID: string;\n  workflowID: string;\n  posts: string[];\n  progress: Map<string, TaskAction[]>;\n  status: GroupTaskStatus;\n}\n\nexport class ExpandedGroupTask {\n  groupTask: GroupTask;\n  workflow: TaskWorkflow;\n  group: Group;\n}\n\nexport class Workflow {\n  workflowID: string;\n  boardID: string;\n  name: string;\n\n  active: boolean;\n\n  source: Container;\n  destinations: Container[];\n}\n\nexport class DistributionWorkflow extends Workflow {\n  distributionWorkflowType: DistributionWorkflowTypeModel;\n  removeFromSource: boolean;\n}\n\nexport class TaskWorkflow extends Workflow {\n  prompt: string;\n  requiredActions: TaskAction[];\n  assignedGroups: string[];\n  type?: TaskWorkflowType;\n}\n\nconst workflows = {\n  DistributionWorkflow,\n};\n\nexport default workflows;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}