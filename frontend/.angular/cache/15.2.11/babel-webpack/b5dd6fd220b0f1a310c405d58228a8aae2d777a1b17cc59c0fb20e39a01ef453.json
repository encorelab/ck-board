{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { fabric } from 'fabric';\nimport { generateCode, generateUniqueID } from 'src/app/utils/Utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/utils/FabricUtils\";\nimport * as i3 from \"src/app/services/user.service\";\nimport * as i4 from \"src/app/services/fileUpload.service\";\nfunction AddProjectModalComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Project name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddProjectModalComponent_div_18_mat_chip_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip\");\n    i0.ɵɵtext(1, \" Image Saved! \");\n    i0.ɵɵelementStart(2, \"mat-icon\", 17);\n    i0.ɵɵlistener(\"click\", function AddProjectModalComponent_div_18_mat_chip_2_Template_mat_icon_click_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.removeBgImg());\n    });\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddProjectModalComponent_div_18_mat_chip_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip\", 18, 9);\n    i0.ɵɵlistener(\"click\", function AddProjectModalComponent_div_18_mat_chip_3_Template_mat_chip_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.compressFile());\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\", 19);\n    i0.ɵɵtext(3, \"upload\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Upload Default Background Image For Personal Boards \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddProjectModalComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"mat-chip-list\");\n    i0.ɵɵtemplate(2, AddProjectModalComponent_div_18_mat_chip_2_Template, 4, 0, \"mat-chip\", 5);\n    i0.ɵɵtemplate(3, AddProjectModalComponent_div_18_mat_chip_3_Template, 5, 0, \"mat-chip\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.personalBoardSetting.bgImage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.personalBoardSetting.bgImage);\n  }\n}\nexport class AddProjectModalComponent {\n  constructor(dialogRef, fabricUtils, userService, fileUploadService, data) {\n    this.dialogRef = dialogRef;\n    this.fabricUtils = fabricUtils;\n    this.userService = userService;\n    this.fileUploadService = fileUploadService;\n    this.data = data;\n    this.name = '';\n    this.personalBoardSetting = {\n      enabled: false,\n      bgImage: null\n    };\n    this.membershipDisabledEditable = false;\n  }\n  ngOnInit() {}\n  compressFile() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const image = yield _this.fileUploadService.compressFile();\n      const url = yield _this.fileUploadService.upload(image);\n      fabric.Image.fromURL(url, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (image) {\n          const imgSettings = _this.fabricUtils.createImageSettings(image);\n          _this.personalBoardSetting.bgImage = {\n            url,\n            imgSettings\n          };\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n  removeBgImg() {\n    this.personalBoardSetting.bgImage = null;\n  }\n  handleDialogSubmit() {\n    const projectID = generateUniqueID();\n    this.data.createProject({\n      projectID: projectID,\n      teacherIDs: [this.data.user.userID],\n      name: this.name,\n      members: [this.data.user.userID],\n      boards: [],\n      studentJoinCode: generateCode(5).toString(),\n      teacherJoinCode: generateCode(5).toString(),\n      personalBoardSetting: this.personalBoardSetting,\n      membershipDisabled: this.membershipDisabledEditable\n    });\n    this.dialogRef.close();\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n}\nAddProjectModalComponent.ɵfac = function AddProjectModalComponent_Factory(t) {\n  return new (t || AddProjectModalComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.FabricUtils), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.FileUploadService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\nAddProjectModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddProjectModalComponent,\n  selectors: [[\"app-add-project-modal\"]],\n  decls: 24,\n  vars: 6,\n  consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"projectNameInput\", \"ngModel\"], [4, \"ngIf\"], [2, \"color\", \"grey\"], [1, \"membership-checkbox-list\"], [\"matTooltip\", \"All future project members will have a personal board assigned to them. These boards\\n      will be private and only visible to teachers and the assigned member.\", 3, \"ngModel\", \"ngModelChange\"], [\"tooltip\", \"matTooltip\"], [\"matTooltip\", \"Setting can be updated after project creation.\", 3, \"ngModel\", \"ngModelChange\"], [\"style\", \"margin-top: 20px;\", 4, \"ngIf\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"disabled\", \"click\"], [2, \"margin-top\", \"20px\"], [\"color\", \"primary\", \"selected\", \"\", \"matTooltip\", \"All personal boards created will be equipped with the uploaded background image, by default.\", 3, \"click\", 4, \"ngIf\"], [1, \"cancel\", 3, \"click\"], [\"color\", \"primary\", \"selected\", \"\", \"matTooltip\", \"All personal boards created will be equipped with the uploaded background image, by default.\", 3, \"click\"], [1, \"chip-icon\"]],\n  template: function AddProjectModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Project Configuration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"mat-form-field\", 2)(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Project Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3, 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AddProjectModalComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, AddProjectModalComponent_mat_error_8_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"h5\", 6);\n      i0.ɵɵtext(10, \"Membership Settings:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"mat-checkbox\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AddProjectModalComponent_Template_mat_checkbox_ngModelChange_12_listener($event) {\n        return ctx.personalBoardSetting.enabled = $event;\n      });\n      i0.ɵɵtext(14, \" Create Personal Boards for Project Members \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-checkbox\", 10, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AddProjectModalComponent_Template_mat_checkbox_ngModelChange_15_listener($event) {\n        return ctx.membershipDisabledEditable = $event;\n      });\n      i0.ɵɵtext(17, \" Restrict users from joining this project \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, AddProjectModalComponent_div_18_Template, 4, 2, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function AddProjectModalComponent_Template_button_click_20_listener() {\n        return ctx.onNoClick();\n      });\n      i0.ɵɵtext(21, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function AddProjectModalComponent_Template_button_click_22_listener() {\n        return ctx.handleDialogSubmit();\n      });\n      i0.ɵɵtext(23, \" Create Project! \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(7);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r0.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.personalBoardSetting.enabled);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.membershipDisabledEditable);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.personalBoardSetting.enabled);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  styles: [\".cancel[_ngcontent-%COMP%] {\\n  padding-left: 10px;\\n  width: 12px;\\n  height: 15px;\\n  font-size: medium;\\n}\\n\\n.membership-checkbox-list[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtcHJvamVjdC1tb2RhbC9hZGQtcHJvamVjdC1tb2RhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FuY2VsIHtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICB3aWR0aDogMTJweDtcbiAgaGVpZ2h0OiAxNXB4O1xuICBmb250LXNpemU6IG1lZGl1bTtcbn1cblxuLm1lbWJlcnNoaXAtY2hlY2tib3gtbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["MAT_DIALOG_DATA","fabric","generateCode","generateUniqueID","i0","AddProjectModalComponent","constructor","dialogRef","fabricUtils","userService","fileUploadService","data","enabled","bgImage","ngOnInit","compressFile","image","url","upload","Image","fromURL","imgSettings","createImageSettings","personalBoardSetting","removeBgImg","handleDialogSubmit","projectID","createProject","teacherIDs","user","userID","name","members","boards","studentJoinCode","toString","teacherJoinCode","membershipDisabled","membershipDisabledEditable","close","onNoClick","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/add-project-modal/add-project-modal.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/add-project-modal/add-project-modal.component.html"],"sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { fabric } from 'fabric';\nimport { PersonalBoardSetting } from 'src/app/models/project';\nimport { FileUploadService } from 'src/app/services/fileUpload.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { FabricUtils, ImageSettings } from 'src/app/utils/FabricUtils';\nimport { generateCode, generateUniqueID } from 'src/app/utils/Utils';\n\n@Component({\n  selector: 'app-add-project-modal',\n  templateUrl: './add-project-modal.component.html',\n  styleUrls: ['./add-project-modal.component.scss'],\n})\nexport class AddProjectModalComponent implements OnInit {\n  name = '';\n\n  personalBoardSetting: PersonalBoardSetting = {\n    enabled: false,\n    bgImage: null,\n  };\n  membershipDisabledEditable = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddProjectModalComponent>,\n    public fabricUtils: FabricUtils,\n    public userService: UserService,\n    public fileUploadService: FileUploadService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {}\n\n  async compressFile() {\n    const image = await this.fileUploadService.compressFile();\n    const url = await this.fileUploadService.upload(image);\n    fabric.Image.fromURL(url, async (image) => {\n      const imgSettings = this.fabricUtils.createImageSettings(image);\n      this.personalBoardSetting.bgImage = { url, imgSettings };\n    });\n  }\n\n  removeBgImg() {\n    this.personalBoardSetting.bgImage = null;\n  }\n\n  handleDialogSubmit() {\n    const projectID = generateUniqueID();\n    this.data.createProject({\n      projectID: projectID,\n      teacherIDs: [this.data.user.userID],\n      name: this.name,\n      members: [this.data.user.userID],\n      boards: [],\n      studentJoinCode: generateCode(5).toString(),\n      teacherJoinCode: generateCode(5).toString(),\n      personalBoardSetting: this.personalBoardSetting,\n      membershipDisabled: this.membershipDisabledEditable,\n    });\n    this.dialogRef.close();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>Project Configuration</h1>\n<div mat-dialog-content>\n  <mat-form-field\n    appearance=\"outline\"\n    style=\"width: 100%\"\n  >\n    <mat-label>Project Name</mat-label>\n    <input\n      matInput\n      [(ngModel)]=\"name\"\n      #projectNameInput=\"ngModel\"\n      required\n    />\n    <mat-error *ngIf=\"projectNameInput.invalid\">\n      Project name is required.\n    </mat-error>\n  </mat-form-field>\n  <h5 style=\"color: grey\">Membership Settings:</h5>\n  <div class=\"membership-checkbox-list\">\n    <mat-checkbox\n      [(ngModel)]=\"personalBoardSetting.enabled\"\n      #tooltip=\"matTooltip\"\n      matTooltip=\"All future project members will have a personal board assigned to them. These boards\n      will be private and only visible to teachers and the assigned member.\"\n    > Create Personal Boards for Project Members\n    </mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"membershipDisabledEditable\" #tooltip=\"matTooltip\"\n        matTooltip=\"Setting can be updated after project creation.\">\n      Restrict users from joining this project\n    </mat-checkbox>\n  </div>\n  <div *ngIf=\"personalBoardSetting.enabled\" style=\"margin-top: 20px;\">\n    <mat-chip-list>\n      <mat-chip *ngIf=\"personalBoardSetting.bgImage\">\n        Image Saved!\n        <mat-icon class=\"cancel\" (click)=\"removeBgImg()\">cancel</mat-icon>\n      </mat-chip>\n      <mat-chip *ngIf=\"!personalBoardSetting.bgImage\" (click)=\"compressFile()\" color=\"primary\" selected #tooltip=\"matTooltip\"\n      matTooltip=\"All personal boards created will be equipped with the uploaded background image, by default.\">\n        <mat-icon class=\"chip-icon\">upload</mat-icon>\n        Upload Default Background Image For Personal Boards\n      </mat-chip>\n    </mat-chip-list>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\n  <button\n    mat-button\n    (click)=\"handleDialogSubmit()\"\n    [disabled]=\"projectNameInput.invalid\"\n    cdkFocusInitial\n  >\n    Create Project!\n  </button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}