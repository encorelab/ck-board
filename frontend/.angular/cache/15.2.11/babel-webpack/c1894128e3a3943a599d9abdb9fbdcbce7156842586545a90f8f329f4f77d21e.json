{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MyErrorStateMatcher } from 'src/app/utils/ErrorStateMatcher';\nimport { generateUniqueID } from 'src/app/utils/Utils';\nimport { ConfirmModalComponent } from '../../confirm-modal/confirm-modal.component';\nimport { MoveGroupMembersComponent } from '../move-group-members/move-group-members.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/group.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"src/app/services/snackbar.service\";\nconst _c0 = [\"selectGroups\"];\nfunction ManageGroupModalComponent_div_5_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Group Name is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c1 = function (a0) {\n  return [a0];\n};\nfunction ManageGroupModalComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h4\");\n    i0.ɵɵtext(2, \"Enter a new group name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-form-field\", 15)(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Group Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function ManageGroupModalComponent_div_5_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.editGroup.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ManageGroupModalComponent_div_5_mat_error_7_Template, 4, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"app-move-group-members\", 17);\n    i0.ɵɵlistener(\"updateGroups\", function ManageGroupModalComponent_div_5_Template_app_move_group_members_updateGroups_8_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateEditGroupMembers($event[0]));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.editNameControl)(\"errorStateMatcher\", ctx_r0.matcher)(\"ngModel\", ctx_r0.editGroup.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.editNameControl.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"projectID\", ctx_r0.data.project.projectID)(\"groups\", i0.ɵɵpureFunction1(7, _c1, ctx_r0.editGroup))(\"headerText\", \"Select students to add to your group:\");\n  }\n}\nfunction ManageGroupModalComponent_mat_list_6_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Group Name is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ManageGroupModalComponent_mat_list_6_mat_list_item_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-list-item\")(1, \"mat-icon\", 24);\n    i0.ɵɵtext(2, \"group\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function ManageGroupModalComponent_mat_list_6_mat_list_item_11_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const group_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.openEdit(group_r13));\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function ManageGroupModalComponent_mat_list_6_mat_list_item_11_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const group_r13 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.deleteGroup(group_r13));\n    });\n    i0.ɵɵelementStart(9, \"mat-icon\");\n    i0.ɵɵtext(10, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const group_r13 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(group_r13.name);\n  }\n}\nfunction ManageGroupModalComponent_mat_list_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-list\")(1, \"div\", 18)(2, \"mat-form-field\", 19)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Group Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 20);\n    i0.ɵɵtemplate(6, ManageGroupModalComponent_mat_list_6_mat_error_6_Template, 4, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function ManageGroupModalComponent_mat_list_6_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.createGroup());\n    });\n    i0.ɵɵtext(8, \" Create \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 22);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, ManageGroupModalComponent_mat_list_6_mat_list_item_11_Template, 11, 1, \"mat-list-item\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r1.groupNameControl)(\"errorStateMatcher\", ctx_r1.matcher);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.groupNameControl.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.groupNameControl.valid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Groups: \", ctx_r1.groups.length, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.groups);\n  }\n}\nfunction ManageGroupModalComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r19 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", group_r19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" (\", group_r19.members.length, \") \", group_r19.name, \" \");\n  }\n}\nfunction ManageGroupModalComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function ManageGroupModalComponent_div_16_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.closeEdit());\n    });\n    i0.ɵɵtext(2, \" Back \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function ManageGroupModalComponent_div_16_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.updateGroup(ctx_r22.editGroup));\n    });\n    i0.ɵɵtext(4, \" Update \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r4.editNameControl.valid);\n  }\n}\nfunction ManageGroupModalComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function ManageGroupModalComponent_div_17_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.closeModal());\n    });\n    i0.ɵɵtext(2, \" Close \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ManageGroupModalComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function ManageGroupModalComponent_div_18_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.child.shuffleBetweenGroups());\n    });\n    i0.ɵɵtext(2, \" Shuffle \");\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"shuffle\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\")(6, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function ManageGroupModalComponent_div_18_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.closeModal());\n    });\n    i0.ɵɵtext(7, \" Close without saving \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function ManageGroupModalComponent_div_18_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.saveGroups());\n    });\n    i0.ɵɵtext(9, \" Save Groups \");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class ManageGroupModalComponent {\n  constructor(groupService, dialog, dialogRef, snackbarService, data) {\n    this.groupService = groupService;\n    this.dialog = dialog;\n    this.dialogRef = dialogRef;\n    this.snackbarService = snackbarService;\n    this.data = data;\n    this.groups = [];\n    this.selectedGroups = [];\n    this.showEdit = false;\n    this.selectedTab = 0;\n    this.groupsHasChanged = false;\n    this.groupNameControl = new FormControl('', [Validators.required]);\n    this.editNameControl = new FormControl('', [Validators.required]);\n    this.matcher = new MyErrorStateMatcher();\n  }\n  ngOnInit() {\n    this.initializeGroups();\n    this.dialogRef.disableClose = true;\n    this.dialogRef.backdropClick().subscribe(() => {\n      this.handleCloseConfirm();\n    });\n  }\n  initializeGroups() {\n    this.groups = [];\n    this.groupService.getByProjectId(this.data.project.projectID).then(groups => {\n      if (groups) this.groups.push(...groups);\n    });\n  }\n  updateGroups(groups) {\n    this.updatedGroups = [];\n    this.updatedGroups.push(...groups);\n  }\n  groupsChanged(changed) {\n    this.groupsHasChanged = changed;\n  }\n  saveGroups() {\n    const promises = [];\n    this.updatedGroups.forEach(group => {\n      promises.push(this.groupService.update(group.groupID, group));\n      if (this.editGroup && this.editGroup.groupID === group.groupID) this.editGroup = group;\n      this.groups.forEach((elem, index) => {\n        if (elem.groupID === group.groupID) this.groups[index] = group;\n      });\n    });\n    Promise.all(promises).then(() => {\n      this.snackbarService.queueSnackbar('Successfully saved groups');\n    }).catch(error => {\n      this.snackbarService.queueSnackbar(error.data.message);\n    });\n    this.groupsChanged(false);\n  }\n  updateEditGroupMembers(group) {\n    this.editGroup.members = group.members;\n  }\n  openEdit(group) {\n    this.showEdit = true;\n    this.editGroup = group;\n  }\n  closeEdit() {\n    this.showEdit = false;\n  }\n  closeModal() {\n    this.dialogRef.close();\n  }\n  handleCloseConfirm() {\n    var _this = this;\n    if (this.groupsHasChanged) {\n      this.dialog.open(ConfirmModalComponent, {\n        width: '500px',\n        data: {\n          title: 'Confirmation',\n          message: 'You have unsaved changes',\n          confirmLabel: 'Save groups',\n          cancelLabel: 'Close without saving',\n          handleConfirm: function () {\n            var _ref = _asyncToGenerator(function* () {\n              _this.saveGroups();\n            });\n            return function handleConfirm() {\n              return _ref.apply(this, arguments);\n            };\n          }(),\n          handleCancel: function () {\n            var _ref2 = _asyncToGenerator(function* () {\n              _this.closeModal();\n            });\n            return function handleCancel() {\n              return _ref2.apply(this, arguments);\n            };\n          }()\n        }\n      });\n    } else {\n      this.closeModal();\n    }\n  }\n  tabChanged(tabChangeEvent) {\n    this.selectedTab = tabChangeEvent.index;\n  }\n  /* --- CRUD operations --- */\n  updateGroup(group) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.groupService.update(group.groupID, group);\n      _this2.closeEdit();\n      _this2.groups.forEach((elem, index) => {\n        if (elem.groupID === group.groupID) _this2.groups[index] = group;\n      });\n    })();\n  }\n  createGroup() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const group = {\n        groupID: generateUniqueID(),\n        projectID: _this3.data.project.projectID,\n        name: _this3.groupNameControl.value,\n        members: []\n      };\n      yield _this3.groupService.create(group);\n      _this3.groupNameControl.reset();\n      _this3.groups.push(group);\n    })();\n  }\n  deleteGroup(group) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.dialog.open(ConfirmModalComponent, {\n        width: '500px',\n        data: {\n          title: 'Confirmation',\n          message: 'Are you sure you want to permanently delete this group?',\n          handleConfirm: function () {\n            var _ref3 = _asyncToGenerator(function* () {\n              yield _this4.groupService.delete(group.groupID);\n              _this4.groups.forEach((obj, index) => {\n                if (obj.groupID == group.groupID) _this4.groups.splice(index, 1);\n              });\n            });\n            return function handleConfirm() {\n              return _ref3.apply(this, arguments);\n            };\n          }()\n        }\n      });\n    })();\n  }\n}\nManageGroupModalComponent.ɵfac = function ManageGroupModalComponent_Factory(t) {\n  return new (t || ManageGroupModalComponent)(i0.ɵɵdirectiveInject(i1.GroupService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.SnackbarService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\nManageGroupModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ManageGroupModalComponent,\n  selectors: [[\"app-manage-group-modal\"]],\n  viewQuery: function ManageGroupModalComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(MoveGroupMembersComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.select = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.child = _t.first);\n    }\n  },\n  decls: 19,\n  vars: 10,\n  consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"dynamicHeight\", \"\", \"animationDuration\", \"0ms\", 3, \"selectedTabChange\"], [\"label\", \"Groups\"], [\"style\", \"margin-top: 20px\", 4, \"ngIf\"], [4, \"ngIf\"], [\"label\", \"Multi-Group Assign\"], [\"appearance\", \"fill\", 2, \"margin-top\", \"20px\"], [\"multiple\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"selectGroups\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"groups\", \"projectID\", \"headerText\", \"updateGroups\", \"groupsChanged\"], [\"mat-dialog-actions\", \"\"], [\"class\", \"multi-group-actions\", 4, \"ngIf\"], [2, \"margin-top\", \"20px\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"name\", \"editName\", \"matInput\", \"\", \"autocomplete\", \"off\", \"cdkFocusInitial\", \"\", 3, \"formControl\", \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"], [3, \"projectID\", \"groups\", \"headerText\", \"updateGroups\"], [1, \"create-group-container\"], [\"appearance\", \"outline\", 1, \"create-group-form\"], [\"name\", \"groupName\", \"matInput\", \"\", \"autocomplete\", \"off\", \"cdkFocusInitial\", \"\", 3, \"formControl\", \"errorStateMatcher\"], [\"type\", \"submit\", \"mat-button\", \"\", \"cdkFocusInitial\", \"\", 1, \"create-group-submit\", 3, \"disabled\", \"click\"], [\"mat-subheader\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-list-icon\", \"\"], [\"mat-line\", \"\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Edit Group\", 3, \"click\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Delete Group\", 3, \"click\"], [3, \"value\"], [\"mat-button\", \"\", \"matTooltip\", \"Back\", 3, \"click\"], [\"type\", \"submit\", \"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"disabled\", \"click\"], [1, \"multi-group-actions\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Shuffle members between selected groups\", 3, \"click\"], [\"mat-button\", \"\", 3, \"click\"]],\n  template: function ManageGroupModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Manage Groups\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"mat-tab-group\", 2);\n      i0.ɵɵlistener(\"selectedTabChange\", function ManageGroupModalComponent_Template_mat_tab_group_selectedTabChange_3_listener($event) {\n        return ctx.tabChanged($event);\n      });\n      i0.ɵɵelementStart(4, \"mat-tab\", 3);\n      i0.ɵɵtemplate(5, ManageGroupModalComponent_div_5_Template, 9, 9, \"div\", 4);\n      i0.ɵɵtemplate(6, ManageGroupModalComponent_mat_list_6_Template, 12, 6, \"mat-list\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-tab\", 6)(8, \"mat-form-field\", 7)(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Select Groups...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-select\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageGroupModalComponent_Template_mat_select_ngModelChange_11_listener($event) {\n        return ctx.selectedGroups = $event;\n      });\n      i0.ɵɵtemplate(13, ManageGroupModalComponent_mat_option_13_Template, 2, 3, \"mat-option\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"app-move-group-members\", 11);\n      i0.ɵɵlistener(\"updateGroups\", function ManageGroupModalComponent_Template_app_move_group_members_updateGroups_14_listener($event) {\n        return ctx.updateGroups($event);\n      })(\"groupsChanged\", function ManageGroupModalComponent_Template_app_move_group_members_groupsChanged_14_listener($event) {\n        return ctx.groupsChanged($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(15, \"div\", 12);\n      i0.ɵɵtemplate(16, ManageGroupModalComponent_div_16_Template, 5, 1, \"div\", 5);\n      i0.ɵɵtemplate(17, ManageGroupModalComponent_div_17_Template, 3, 0, \"div\", 5);\n      i0.ɵɵtemplate(18, ManageGroupModalComponent_div_18_Template, 10, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.showEdit);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.showEdit);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedGroups);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"groups\", ctx.selectedGroups)(\"projectID\", ctx.data.project.projectID)(\"headerText\", \"Move students manually with drag&drop or randomly using the shuffle button:\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showEdit && ctx.selectedTab === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.showEdit && ctx.selectedTab === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedTab === 1);\n    }\n  },\n  styles: [\".create-group-container[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.create-group-form[_ngcontent-%COMP%] {\\n  width: 80%;\\n}\\n\\n.create-group-submit[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.select-groups-container[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n}\\n\\n.multi-group-actions[_ngcontent-%COMP%] {\\n  padding-top: 10px;\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.select-group[_ngcontent-%COMP%] {\\n  overflow: hidden;\\n  min-width: 0;\\n  max-width: 100px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ncm91cHMvbWFuYWdlLWdyb3VwLW1vZGFsL21hbmFnZS1ncm91cC1tb2RhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7QUFDSjs7QUFFQTtFQUNJLFVBQUE7QUFDSjs7QUFFQTtFQUNJLG1CQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtFQUNBLGFBQUE7RUFDQSw4QkFBQTtFQUNBLFdBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSw4QkFBQTtBQUNKOztBQUVBO0VBQ0ksZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuY3JlYXRlLWdyb3VwLWNvbnRhaW5lciB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uY3JlYXRlLWdyb3VwLWZvcm0ge1xuICAgIHdpZHRoOiA4MCU7XG59XG5cbi5jcmVhdGUtZ3JvdXAtc3VibWl0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uc2VsZWN0LWdyb3Vwcy1jb250YWluZXIge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5tdWx0aS1ncm91cC1hY3Rpb25zIHtcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLnNlbGVjdC1ncm91cCB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtaW4td2lkdGg6IDA7XG4gICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","MAT_DIALOG_DATA","MyErrorStateMatcher","generateUniqueID","ConfirmModalComponent","MoveGroupMembersComponent","i0","ManageGroupModalComponent","constructor","groupService","dialog","dialogRef","snackbarService","data","required","ngOnInit","initializeGroups","disableClose","backdropClick","subscribe","handleCloseConfirm","groups","getByProjectId","project","projectID","then","push","updateGroups","updatedGroups","groupsChanged","changed","groupsHasChanged","saveGroups","promises","forEach","group","update","groupID","editGroup","elem","index","Promise","all","queueSnackbar","catch","error","message","updateEditGroupMembers","members","openEdit","showEdit","closeEdit","closeModal","close","open","width","title","confirmLabel","cancelLabel","handleConfirm","handleCancel","tabChanged","tabChangeEvent","selectedTab","updateGroup","createGroup","name","groupNameControl","value","create","reset","deleteGroup","delete","obj","splice","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/groups/manage-group-modal/manage-group-modal.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/groups/manage-group-modal/manage-group-modal.component.html"],"sourcesContent":["import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { MatOption } from '@angular/material/core';\nimport { MatSelect } from '@angular/material/select';\nimport { MyErrorStateMatcher } from 'src/app/utils/ErrorStateMatcher';\nimport { generateUniqueID } from 'src/app/utils/Utils';\nimport { ConfirmModalComponent } from '../../confirm-modal/confirm-modal.component';\nimport { MoveGroupMembersComponent } from '../move-group-members/move-group-members.component';\nimport { GroupService } from 'src/app/services/group.service';\nimport { Group } from 'src/app/models/group';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-manage-group-modal',\n  templateUrl: './manage-group-modal.component.html',\n  styleUrls: ['./manage-group-modal.component.scss'],\n})\nexport class ManageGroupModalComponent implements OnInit {\n  @ViewChild('selectGroups') select: MatSelect;\n  @ViewChild(MoveGroupMembersComponent) child: MoveGroupMembersComponent;\n\n  groups: Group[] = [];\n  selectedGroups: Group[] = [];\n  updatedGroups: Group[];\n  showEdit = false;\n  editGroup: Group;\n  selectedTab: Number = 0;\n  groupsHasChanged = false;\n\n  groupNameControl = new FormControl('', [Validators.required]);\n  editNameControl = new FormControl('', [Validators.required]);\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    private groupService: GroupService,\n    private dialog: MatDialog,\n    private dialogRef: MatDialogRef<ManageGroupModalComponent>,\n    private snackbarService: SnackbarService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeGroups();\n    this.dialogRef.disableClose = true;\n    this.dialogRef.backdropClick().subscribe(() => {\n      this.handleCloseConfirm();\n    });\n  }\n\n  private initializeGroups(): void {\n    this.groups = [];\n    this.groupService\n      .getByProjectId(this.data.project.projectID)\n      .then((groups) => {\n        if (groups) this.groups.push(...groups);\n      });\n  }\n\n  updateGroups(groups: Group[]): void {\n    this.updatedGroups = [];\n    this.updatedGroups.push(...groups);\n  }\n\n  groupsChanged(changed: boolean): void {\n    this.groupsHasChanged = changed;\n  }\n\n  saveGroups(): void {\n    const promises: Promise<Group>[] = [];\n    this.updatedGroups.forEach((group) => {\n      promises.push(this.groupService.update(group.groupID, group));\n      if (this.editGroup && this.editGroup.groupID === group.groupID)\n        this.editGroup = group;\n      this.groups.forEach((elem, index) => {\n        if (elem.groupID === group.groupID) this.groups[index] = group;\n      });\n    });\n    Promise.all(promises)\n      .then(() => {\n        this.snackbarService.queueSnackbar('Successfully saved groups');\n      })\n      .catch((error) => {\n        this.snackbarService.queueSnackbar(error.data.message);\n      });\n    this.groupsChanged(false);\n  }\n\n  updateEditGroupMembers(group: Group): void {\n    this.editGroup.members = group.members;\n  }\n\n  openEdit(group: Group): void {\n    this.showEdit = true;\n    this.editGroup = group;\n  }\n\n  closeEdit(): void {\n    this.showEdit = false;\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n  }\n\n  handleCloseConfirm(): void {\n    if (this.groupsHasChanged) {\n      this.dialog.open(ConfirmModalComponent, {\n        width: '500px',\n        data: {\n          title: 'Confirmation',\n          message: 'You have unsaved changes',\n          confirmLabel: 'Save groups',\n          cancelLabel: 'Close without saving',\n          handleConfirm: async () => {\n            this.saveGroups();\n          },\n          handleCancel: async () => {\n            this.closeModal();\n          },\n        },\n      });\n    } else {\n      this.closeModal();\n    }\n  }\n\n  tabChanged(tabChangeEvent: MatTabChangeEvent): void {\n    this.selectedTab = tabChangeEvent.index;\n  }\n\n  /* --- CRUD operations --- */\n\n  async updateGroup(group: Group) {\n    await this.groupService.update(group.groupID, group);\n    this.closeEdit();\n    this.groups.forEach((elem, index) => {\n      if (elem.groupID === group.groupID) this.groups[index] = group;\n    });\n  }\n\n  async createGroup() {\n    const group: Group = {\n      groupID: generateUniqueID(),\n      projectID: this.data.project.projectID,\n      name: this.groupNameControl.value,\n      members: [],\n    };\n    await this.groupService.create(group);\n    this.groupNameControl.reset();\n    this.groups.push(group);\n  }\n\n  async deleteGroup(group: Group) {\n    this.dialog.open(ConfirmModalComponent, {\n      width: '500px',\n      data: {\n        title: 'Confirmation',\n        message: 'Are you sure you want to permanently delete this group?',\n        handleConfirm: async () => {\n          await this.groupService.delete(group.groupID);\n          this.groups.forEach((obj, index) => {\n            if (obj.groupID == group.groupID) this.groups.splice(index, 1);\n          });\n        },\n      },\n    });\n  }\n}\n","<h1 mat-dialog-title>Manage Groups</h1>\n<div mat-dialog-content>\n  <mat-tab-group dynamicHeight animationDuration=\"0ms\" (selectedTabChange)=\"tabChanged($event)\">\n    <mat-tab label=\"Groups\">\n      <div\n        *ngIf=\"showEdit\"\n        style=\"margin-top: 20px\"\n      >\n        <h4>Enter a new group name:</h4>\n        <mat-form-field\n          appearance=\"outline\"\n          style=\"width: 100%;\"\n        >\n          <mat-label>Group Name</mat-label>\n          <input\n            name=\"editName\"\n            [formControl]=\"editNameControl\"\n            [errorStateMatcher]=\"matcher\"\n            [(ngModel)]=\"editGroup.name\"\n            matInput\n            autocomplete=\"off\"\n            cdkFocusInitial\n          />\n          <mat-error *ngIf=\"!editNameControl.value\">Group Name is <strong>required</strong></mat-error>\n        </mat-form-field>\n        <app-move-group-members\n          [projectID]=\"data.project.projectID\"\n          [groups]=\"[editGroup]\"\n          [headerText]=\"'Select students to add to your group:'\"\n          (updateGroups)=\"updateEditGroupMembers($event[0])\"\n        >\n        </app-move-group-members>\n      </div>\n      <mat-list *ngIf=\"!showEdit\">\n        <div class=\"create-group-container\">\n          <mat-form-field\n            appearance=\"outline\"\n            class=\"create-group-form\"\n          >\n            <mat-label>Group Name</mat-label>\n            <input\n              name=\"groupName\"\n              [formControl]=\"groupNameControl\"\n              [errorStateMatcher]=\"matcher\"\n              matInput\n              autocomplete=\"off\"\n              cdkFocusInitial\n            />\n            <mat-error *ngIf=\"!groupNameControl.value\">Group Name is <strong>required</strong></mat-error>\n          </mat-form-field>\n          <button\n            type=\"submit\"\n            [disabled]=\"!groupNameControl.valid\"\n            mat-button\n            class=\"create-group-submit\"\n            (click)=\"createGroup()\"\n            cdkFocusInitial\n          >\n            Create\n          </button>\n        </div>\n        \n        <div mat-subheader>Groups: {{ groups.length }}</div>\n        <mat-list-item *ngFor=\"let group of groups\">\n          <mat-icon mat-list-icon>group</mat-icon>\n          <div mat-line>{{ group.name }}</div>\n          <button \n            mat-icon-button\n            matTooltip=\"Edit Group\"\n            (click)=\"openEdit(group)\"\n          >\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button \n            mat-icon-button\n            matTooltip=\"Delete Group\"\n            (click)=\"deleteGroup(group)\"\n          >\n            <mat-icon>delete</mat-icon>\n          </button>\n        </mat-list-item>\n      </mat-list>\n    </mat-tab>\n    <mat-tab label=\"Multi-Group Assign\">\n      <mat-form-field\n        appearance=\"fill\"\n        style=\"margin-top: 20px;\"\n      >\n        <mat-label>Select Groups...</mat-label>\n        <mat-select\n          #selectGroups\n          [(ngModel)]=\"selectedGroups\"\n          multiple\n        >\n          <mat-option\n            *ngFor=\"let group of groups\"\n            [value]=\"group\"\n          >\n            ({{ group.members.length }}) {{ group.name }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <app-move-group-members\n        [groups]=\"selectedGroups\"\n        [projectID]=\"data.project.projectID\"\n        [headerText]=\"'Move students manually with drag&drop or randomly using the shuffle button:'\"\n        (updateGroups)=\"updateGroups($event)\"\n        (groupsChanged)=\"groupsChanged($event)\"\n      >\n      </app-move-group-members>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n<div mat-dialog-actions>\n  <div *ngIf=\"showEdit && selectedTab === 0\" >\n    <button \n      mat-button\n      matTooltip=\"Back\"\n      (click)=\"closeEdit()\"\n    >\n      Back\n    </button>\n    <button\n      type=\"submit\"\n      [disabled]=\"!editNameControl.valid\"\n      mat-button\n      cdkFocusInitial\n      (click)=\"updateGroup(this.editGroup)\"\n    >\n      Update\n    </button>\n  </div>\n  <div *ngIf=\"!showEdit && selectedTab === 0\">\n    <button \n      mat-button\n      matTooltip=\"Back\"\n      (click)=\"closeModal ()\"\n    >\n      Close\n    </button>\n  </div>\n  <div class=\"multi-group-actions\" *ngIf=\"selectedTab === 1\" >\n    <button\n      mat-icon-button\n      matTooltip=\"Shuffle members between selected groups\"\n      (click)=\"child.shuffleBetweenGroups()\"\n    >\n      Shuffle <mat-icon>shuffle</mat-icon>\n    </button>\n    <div>\n      <button\n        mat-button\n        (click)=\"closeModal()\"\n      >\n        Close without saving\n      </button>\n      <button\n        mat-button\n        (click)=\"saveGroups()\"\n      >\n        Save Groups\n      </button>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}