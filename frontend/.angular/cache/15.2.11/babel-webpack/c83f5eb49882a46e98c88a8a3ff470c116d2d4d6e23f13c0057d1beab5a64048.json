{"ast":null,"code":"export class MyErrorStateMatcher {\n  isErrorState(control, form) {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}","map":{"version":3,"mappings":"AAGA,OAAM,MAAOA,mBAAmB;EAC9BC,YAAY,CACVC,OAA2B,EAC3BC,IAAwC;IAExC,MAAMC,WAAW,GAAGD,IAAI,IAAIA,IAAI,CAACE,SAAS;IAC1C,OAAO,CAAC,EACNH,OAAO,IACPA,OAAO,CAACI,OAAO,KACdJ,OAAO,CAACK,KAAK,IAAIL,OAAO,CAACM,OAAO,IAAIJ,WAAW,CAAC,CAClD;EACH","names":["MyErrorStateMatcher","isErrorState","control","form","isSubmitted","submitted","invalid","dirty","touched"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/utils/ErrorStateMatcher.ts"],"sourcesContent":["import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(\n      control &&\n      control.invalid &&\n      (control.dirty || control.touched || isSubmitted)\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}