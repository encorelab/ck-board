{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as Highcharts from 'highcharts';\nimport more from 'highcharts/highcharts-more';\nimport exporting from 'highcharts/modules/exporting';\nimport nodata from 'highcharts/modules/no-data-to-display';\nimport { DimensionType } from 'src/app/models/learner';\nimport { createClassGraph, createStudentGraph } from 'src/app/utils/highchart';\nimport { AddLearnerModalComponent } from '../add-learner-modal/add-learner-modal.component';\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\nimport * as saveAs from 'file-saver';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/learner.service\";\nimport * as i2 from \"src/app/services/project.service\";\nimport * as i3 from \"src/app/services/user.service\";\nimport * as i4 from \"@angular/material/dialog\";\nfunction LearnerModelsComponent_mat_select_4_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const student_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", student_r5.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(student_r5.value.username);\n  }\n}\nfunction LearnerModelsComponent_mat_select_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-select\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function LearnerModelsComponent_mat_select_4_Template_mat_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.modelSubject = $event);\n    })(\"selectionChange\", function LearnerModelsComponent_mat_select_4_Template_mat_select_selectionChange_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.subjectChange());\n    });\n    i0.ɵɵelementStart(1, \"mat-option\", 8);\n    i0.ɵɵtext(2, \"All Students (Diagnostic)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-option\", 8);\n    i0.ɵɵtext(4, \"All Students (Reassessment)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, LearnerModelsComponent_mat_select_4_mat_option_5_Template, 2, 2, \"mat-option\", 9);\n    i0.ɵɵpipe(6, \"keyvalue\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.modelSubject);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r0.DimensionType.DIAGNOSTIC);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r0.DimensionType.REASSESSMENT);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 4, ctx_r0.idToUser));\n  }\n}\nfunction LearnerModelsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" No Learner Models!\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LearnerModelsComponent_ng_container_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"highcharts-chart\", 12);\n    i0.ɵɵlistener(\"updateChange\", function LearnerModelsComponent_ng_container_7_div_1_Template_highcharts_chart_updateChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const modelCard_r10 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(modelCard_r10.updateFlag = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const modelCard_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"Highcharts\", ctx_r9.Highcharts)(\"options\", modelCard_r10.chartOptions)(\"update\", modelCard_r10.updateFlag)(\"oneToOne\", true);\n  }\n}\nfunction LearnerModelsComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LearnerModelsComponent_ng_container_7_div_1_Template, 2, 4, \"div\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.modelCards);\n  }\n}\nfunction LearnerModelsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵlistener(\"click\", function LearnerModelsComponent_div_8_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.handleCreateModel());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 14);\n    i0.ɵɵtext(2, \"add_box\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵtext(4, \"Create Learner Model\");\n    i0.ɵɵelementEnd()();\n  }\n}\nmore(Highcharts);\nexporting(Highcharts);\nnodata(Highcharts);\nHighcharts.setOptions({\n  lang: {\n    noData: 'No data available. Please specify dimension values for students.'\n  }\n});\nexport class LearnerModelsComponent {\n  constructor(learnerService, projectService, userService, dialog) {\n    var _this = this;\n    this.learnerService = learnerService;\n    this.projectService = projectService;\n    this.userService = userService;\n    this.dialog = dialog;\n    this.studentView = false;\n    this.modelCards = [];\n    this.DimensionType = DimensionType;\n    this.Highcharts = Highcharts;\n    this.chartOptions = {};\n    this.idToUser = new Map();\n    this.modelSubject = DimensionType.DIAGNOSTIC;\n    this.classDimensionFilter = DimensionType.DIAGNOSTIC;\n    this.updateFlag = false;\n    this.onEditData = model => {\n      this.dialog.open(AddLearnerModalComponent, {\n        data: {\n          isEditing: true,\n          model: model,\n          board: this.board,\n          selectedStudentID: this.modelSubject,\n          onUpdate: model => {\n            this.refreshModelCard(model);\n          }\n        },\n        minWidth: 720,\n        maxWidth: 1280\n      });\n    };\n    this.onExport = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (model) {\n        const rows = ['student_id,student_username,dimension,diagnostic,reassessment'];\n        model.data.forEach(value => {\n          const {\n            userID,\n            username\n          } = value.student;\n          rows.push(`${userID},${username},${value.dimension},${value.diagnostic},${value.reassessment}`);\n        });\n        const csvArray = rows.join('\\r\\n');\n        const blob = new Blob([csvArray], {\n          type: 'text/csv'\n        });\n        const projectName = (yield _this.projectService.get(_this.board.projectID)).name;\n        saveAs(blob, `${projectName}_${model.name}.csv`);\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.onDeleteModel = model => {\n      this.dialog.open(ConfirmModalComponent, {\n        width: '500px',\n        data: {\n          title: 'Confirmation',\n          message: 'Are you sure you want to delete this learner model?',\n          handleConfirm: function () {\n            var _ref2 = _asyncToGenerator(function* () {\n              yield _this.learnerService.deleteModel(model.modelID);\n              _this.modelCards = _this.modelCards.filter(m => m.model.modelID !== model.modelID);\n            });\n            return function handleConfirm() {\n              return _ref2.apply(this, arguments);\n            };\n          }()\n        }\n      });\n    };\n  }\n  ngOnInit() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n      const models = yield _this2.learnerService.getByProjects([_this2.project.projectID]);\n      for (const model of models) {\n        _this2.modelCards.push({\n          model: model,\n          dimensionType: DimensionType.DIAGNOSTIC,\n          chartOptions: _this2.createChartOptions(model, !_this2.studentView),\n          updateFlag: false\n        });\n        model.data.map(d => _this2.idToUser.set(d.student.userID, d.student));\n      }\n      if (_this2.studentView) {\n        _this2.modelSubject = (_b = (_a = _this2.userService.user) === null || _a === void 0 ? void 0 : _a.userID) !== null && _b !== void 0 ? _b : '';\n        _this2.subjectChange();\n      }\n    })();\n  }\n  createChartOptions(model, enableExporting) {\n    if (this.modelSubject == DimensionType.DIAGNOSTIC || this.modelSubject == DimensionType.REASSESSMENT) {\n      return createClassGraph(model, {\n        onEditData: this.onEditData,\n        onExport: this.onExport,\n        onDeleteModel: this.onDeleteModel\n      }, this.modelSubject, enableExporting);\n    } else {\n      return createStudentGraph(model, {\n        onEditData: this.onEditData,\n        onExport: this.onExport,\n        onDeleteModel: this.onDeleteModel\n      }, this.idToUser.get(this.modelSubject), enableExporting);\n    }\n  }\n  refreshModelCard(model, modelCard) {\n    if (!modelCard) {\n      modelCard = this.modelCards.find(m => m.model.modelID === model.modelID);\n    }\n    if (modelCard) {\n      modelCard.model = model;\n      modelCard.chartOptions = this.createChartOptions(model, !this.studentView);\n      modelCard.updateFlag = true;\n    }\n  }\n  dimensionTypeChange(modelCard) {\n    this.refreshModelCard(modelCard.model);\n  }\n  subjectChange() {\n    this.modelCards.map(mc => this.refreshModelCard(mc.model, mc));\n  }\n  dimTypeFilterChange(dim) {\n    this.classDimensionFilter = dim;\n  }\n  handleCreateModel() {\n    this.dialog.open(AddLearnerModalComponent, {\n      data: {\n        isEditing: false,\n        board: this.board,\n        onCreate: model => {\n          this.modelCards.push({\n            model: model,\n            dimensionType: DimensionType.DIAGNOSTIC,\n            chartOptions: this.createChartOptions(model, !this.studentView),\n            updateFlag: false\n          });\n          model.data.map(d => this.idToUser.set(d.student.userID, d.student));\n        }\n      },\n      minWidth: 720,\n      maxWidth: 1280\n    });\n  }\n}\nLearnerModelsComponent.ɵfac = function LearnerModelsComponent_Factory(t) {\n  return new (t || LearnerModelsComponent)(i0.ɵɵdirectiveInject(i1.LearnerService), i0.ɵɵdirectiveInject(i2.ProjectService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.MatDialog));\n};\nLearnerModelsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LearnerModelsComponent,\n  selectors: [[\"app-learner-models\"]],\n  inputs: {\n    board: \"board\",\n    project: \"project\",\n    studentView: \"studentView\"\n  },\n  decls: 9,\n  vars: 4,\n  consts: [[2, \"background\", \"#fafafa\"], [1, \"example-spacer\"], [\"style\", \"width: 15%; font-size: 15px\", \"placeholder\", \"Filter Models\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\", 4, \"ngIf\"], [\"class\", \"heading\", 4, \"ngIf\"], [1, \"graphs\"], [4, \"ngIf\"], [\"class\", \"graph-add\", 3, \"click\", 4, \"ngIf\"], [\"placeholder\", \"Filter Models\", 2, \"width\", \"15%\", \"font-size\", \"15px\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"heading\"], [4, \"ngFor\", \"ngForOf\"], [1, \"graph-highchart\", 3, \"Highcharts\", \"options\", \"update\", \"oneToOne\", \"updateChange\"], [1, \"graph-add\", 3, \"click\"], [1, \"plus-icon\"], [1, \"plus-text\"]],\n  template: function LearnerModelsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"span\");\n      i0.ɵɵtext(2, \"Learner Models\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"span\", 1);\n      i0.ɵɵtemplate(4, LearnerModelsComponent_mat_select_4_Template, 7, 6, \"mat-select\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, LearnerModelsComponent_div_5_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementStart(6, \"div\", 4);\n      i0.ɵɵtemplate(7, LearnerModelsComponent_ng_container_7_Template, 2, 1, \"ng-container\", 5);\n      i0.ɵɵtemplate(8, LearnerModelsComponent_div_8_Template, 5, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.studentView);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.studentView && ctx.modelCards.length === 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.modelCards.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.studentView);\n    }\n  },\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 365:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: Only 0 arguments allowed, but 1 was passed.\\\\n  \\u250C\\u2500\\u2500> src/styles.scss\\\\n12\\u2502 @include mat.core($custom-typography);\\\\n  \\u2502 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invocation\\\\n  \\u2575\\\\n  \\u250C\\u2500\\u2500> node_modules/@angular/material/core/_core.scss\\\\n8 \\u2502 @mixin core() {\\\\n  \\u2502        \\u2501\\u2501\\u2501\\u2501\\u2501\\u2501 declaration\\\\n  \\u2575\\\\n  src/styles.scss 12:1                                                 core()\\\\n  src/styles.scss 12:1                                                 @import\\\\n  src/app/components/learner-models/learner-models.component.scss 2:9  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[365]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["Highcharts","more","exporting","nodata","DimensionType","createClassGraph","createStudentGraph","AddLearnerModalComponent","ConfirmModalComponent","saveAs","i0","setOptions","lang","noData","LearnerModelsComponent","constructor","learnerService","projectService","userService","dialog","Map","DIAGNOSTIC","model","open","data","isEditing","board","selectedStudentID","modelSubject","onUpdate","refreshModelCard","minWidth","maxWidth","rows","forEach","value","userID","username","student","push","dimension","diagnostic","reassessment","csvArray","join","blob","Blob","type","projectName","get","projectID","name","width","title","message","handleConfirm","deleteModel","modelID","modelCards","filter","m","ngOnInit","models","getByProjects","project","dimensionType","chartOptions","createChartOptions","studentView","updateFlag","map","d","idToUser","set","user","subjectChange","enableExporting","REASSESSMENT","onEditData","onExport","onDeleteModel","modelCard","find","dimensionTypeChange","mc","dimTypeFilterChange","dim","classDimensionFilter","handleCreateModel","onCreate","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/learner-models/learner-models.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/learner-models/learner-models.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport * as Highcharts from 'highcharts';\nimport more from 'highcharts/highcharts-more';\nimport exporting from 'highcharts/modules/exporting';\nimport nodata from 'highcharts/modules/no-data-to-display';\nimport { Board } from 'src/app/models/board';\nimport { Project } from 'src/app/models/project';\nimport LearnerModel, { DimensionType } from 'src/app/models/learner';\nimport { AuthUser } from 'src/app/models/user';\nimport { LearnerService } from 'src/app/services/learner.service';\nimport { createClassGraph, createStudentGraph } from 'src/app/utils/highchart';\nimport { AddLearnerModalComponent } from '../add-learner-modal/add-learner-modal.component';\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\nimport { ProjectService } from 'src/app/services/project.service';\nimport * as saveAs from 'file-saver';\nimport { UserService } from 'src/app/services/user.service';\n\nmore(Highcharts);\nexporting(Highcharts);\nnodata(Highcharts);\n\nHighcharts.setOptions({\n  lang: {\n    noData: 'No data available. Please specify dimension values for students.',\n  },\n});\n\nexport interface LearnerInput {\n  board: Board;\n}\n\nexport interface ModelCard {\n  model: LearnerModel;\n  dimensionType: DimensionType;\n  chartOptions: Highcharts.Options;\n  updateFlag: boolean;\n}\n\n@Component({\n  selector: 'app-learner-models',\n  templateUrl: './learner-models.component.html',\n  styleUrls: ['./learner-models.component.scss'],\n})\nexport class LearnerModelsComponent implements OnInit {\n  @Input() board: Board;\n  @Input() project: Project;\n  @Input() studentView?: boolean = false;\n\n  modelCards: ModelCard[] = [];\n\n  DimensionType: typeof DimensionType = DimensionType;\n  Highcharts: typeof Highcharts = Highcharts;\n  chartOptions: Highcharts.Options = {};\n\n  idToUser: Map<string, AuthUser> = new Map<string, AuthUser>();\n  modelSubject: string = DimensionType.DIAGNOSTIC;\n  classDimensionFilter: DimensionType = DimensionType.DIAGNOSTIC;\n\n  updateFlag: boolean = false;\n\n  constructor(\n    public learnerService: LearnerService,\n    public projectService: ProjectService,\n    public userService: UserService,\n    public dialog: MatDialog\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const models = await this.learnerService.getByProjects([\n      this.project.projectID,\n    ]);\n    for (const model of models) {\n      this.modelCards.push({\n        model: model,\n        dimensionType: DimensionType.DIAGNOSTIC,\n        chartOptions: this.createChartOptions(model, !this.studentView),\n        updateFlag: false,\n      });\n      model.data.map((d) => this.idToUser.set(d.student.userID, d.student));\n    }\n    if (this.studentView) {\n      this.modelSubject = this.userService.user?.userID ?? '';\n      this.subjectChange();\n    }\n  }\n\n  createChartOptions(\n    model: LearnerModel,\n    enableExporting: boolean\n  ): Highcharts.Options {\n    if (\n      this.modelSubject == DimensionType.DIAGNOSTIC ||\n      this.modelSubject == DimensionType.REASSESSMENT\n    ) {\n      return createClassGraph(\n        model,\n        {\n          onEditData: this.onEditData,\n          onExport: this.onExport,\n          onDeleteModel: this.onDeleteModel,\n        },\n        this.modelSubject,\n        enableExporting\n      );\n    } else {\n      return createStudentGraph(\n        model,\n        {\n          onEditData: this.onEditData,\n          onExport: this.onExport,\n          onDeleteModel: this.onDeleteModel,\n        },\n        this.idToUser.get(this.modelSubject)!,\n        enableExporting\n      );\n    }\n  }\n\n  refreshModelCard(model: LearnerModel, modelCard?: ModelCard): void {\n    if (!modelCard) {\n      modelCard = this.modelCards.find(\n        (m) => m.model.modelID === model.modelID\n      );\n    }\n    if (modelCard) {\n      modelCard.model = model;\n      modelCard.chartOptions = this.createChartOptions(\n        model,\n        !this.studentView\n      );\n      modelCard.updateFlag = true;\n    }\n  }\n\n  onEditData = (model: LearnerModel): void => {\n    this.dialog.open(AddLearnerModalComponent, {\n      data: {\n        isEditing: true,\n        model: model,\n        board: this.board,\n        selectedStudentID: this.modelSubject,\n        onUpdate: (model: LearnerModel) => {\n          this.refreshModelCard(model);\n        },\n      },\n      minWidth: 720,\n      maxWidth: 1280,\n    });\n  };\n\n  onExport = async (model: LearnerModel): Promise<void> => {\n    const rows: string[] = [\n      'student_id,student_username,dimension,diagnostic,reassessment',\n    ];\n    model.data.forEach((value) => {\n      const { userID, username } = value.student;\n      rows.push(\n        `${userID},${username},${value.dimension},${value.diagnostic},${value.reassessment}`\n      );\n    });\n    const csvArray = rows.join('\\r\\n');\n    const blob = new Blob([csvArray], { type: 'text/csv' });\n    const projectName = (await this.projectService.get(this.board.projectID))\n      .name;\n    saveAs(blob, `${projectName}_${model.name}.csv`);\n  };\n\n  onDeleteModel = (model: LearnerModel): void => {\n    this.dialog.open(ConfirmModalComponent, {\n      width: '500px',\n      data: {\n        title: 'Confirmation',\n        message: 'Are you sure you want to delete this learner model?',\n        handleConfirm: async () => {\n          await this.learnerService.deleteModel(model.modelID);\n          this.modelCards = this.modelCards.filter(\n            (m) => m.model.modelID !== model.modelID\n          );\n        },\n      },\n    });\n  };\n\n  dimensionTypeChange(modelCard: ModelCard): void {\n    this.refreshModelCard(modelCard.model);\n  }\n\n  subjectChange(): void {\n    this.modelCards.map((mc) => this.refreshModelCard(mc.model, mc));\n  }\n\n  dimTypeFilterChange(dim: DimensionType): void {\n    this.classDimensionFilter = dim;\n  }\n\n  handleCreateModel(): void {\n    this.dialog.open(AddLearnerModalComponent, {\n      data: {\n        isEditing: false,\n        board: this.board,\n        onCreate: (model: LearnerModel) => {\n          this.modelCards.push({\n            model: model,\n            dimensionType: DimensionType.DIAGNOSTIC,\n            chartOptions: this.createChartOptions(model, !this.studentView),\n            updateFlag: false,\n          });\n          model.data.map((d) => this.idToUser.set(d.student.userID, d.student));\n        },\n      },\n      minWidth: 720,\n      maxWidth: 1280,\n    });\n  }\n}\n","<mat-toolbar style=\"background: #fafafa;\">\n  <span>Learner Models</span>\n  <span class=\"example-spacer\"></span>\n  <mat-select style=\"width: 15%; font-size: 15px\" [(ngModel)]=\"modelSubject\" (selectionChange)=\"subjectChange()\" placeholder=\"Filter Models\" *ngIf=\"!studentView\">\n    <mat-option [value]=\"DimensionType.DIAGNOSTIC\">All Students (Diagnostic)</mat-option>\n    <mat-option [value]=\"DimensionType.REASSESSMENT\">All Students (Reassessment)</mat-option>\n    <mat-option *ngFor=\"let student of idToUser | keyvalue\" [value]=\"student.key\">{{student.value.username}}</mat-option>\n  </mat-select>\n</mat-toolbar>\n<div *ngIf=\"studentView && modelCards.length === 0\" class=\"heading\">\n  No Learner Models!\n</div>\n<div class=\"graphs\">\n  <ng-container *ngIf=\"modelCards.length > 0\">\n    <div *ngFor=\"let modelCard of modelCards\">\n      <highcharts-chart \n      class=\"graph-highchart\"\n      [Highcharts]=\"Highcharts\"\n      [options]=\"modelCard.chartOptions\"\n      [(update)]=\"modelCard.updateFlag\"\n      [oneToOne]=\"true\"\n      ></highcharts-chart>\n    </div>\n  </ng-container>\n  <div class=\"graph-add\" (click)=\"handleCreateModel()\" *ngIf=\"!studentView\">\n    <mat-icon class=\"plus-icon\">add_box</mat-icon>\n    <div class=\"plus-text\">Create Learner Model</div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}