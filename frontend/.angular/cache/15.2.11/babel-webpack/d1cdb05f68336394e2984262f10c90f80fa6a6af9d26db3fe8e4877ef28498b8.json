{"ast":null,"code":"import _asyncToGenerator from \"/Users/marieklinaeva/github/ck-board/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\nimport { Role } from 'src/app/models/user';\nimport { MyErrorStateMatcher } from 'src/app/utils/ErrorStateMatcher';\nimport * as saveAs from 'file-saver';\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/legacy-dialog\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/services/learner.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/legacy-button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/legacy-form-field\";\nimport * as i9 from \"@angular/material/legacy-input\";\nimport * as i10 from \"@angular/material/legacy-chips\";\nimport * as i11 from \"@angular/material/legacy-core\";\nimport * as i12 from \"@angular/material/legacy-select\";\nimport * as i13 from \"@angular/material/legacy-radio\";\nimport * as i14 from \"@angular/material/legacy-table\";\nimport * as i15 from \"@angular/material/legacy-paginator\";\nimport * as i16 from \"../../autofocus.directive\";\nfunction AddLearnerModalComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Model name is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddLearnerModalComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Model name is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"too long!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddLearnerModalComponent_mat_chip_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip\", 15);\n    i0.ɵɵlistener(\"removed\", function AddLearnerModalComponent_mat_chip_15_Template_mat_chip_removed_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.askToClearData());\n    });\n    i0.ɵɵtext(1, \" Clear Data \");\n    i0.ɵɵelementStart(2, \"mat-icon\", 16);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddLearnerModalComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    i0.ɵɵtext(2, \"Dimensions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-form-field\", 19)(4, \"mat-label\");\n    i0.ɵɵtext(5, \"New Dimension Name...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function AddLearnerModalComponent_div_16_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.newDimensionText = $event);\n    })(\"keyup.enter\", function AddLearnerModalComponent_div_16_Template_input_keyup_enter_6_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.addDimension());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function AddLearnerModalComponent_div_16_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.addDimension());\n    });\n    i0.ɵɵtext(8, \" Add Dimension \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.newDimensionText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r3.newDimensionText.length < 1);\n  }\n}\nfunction AddLearnerModalComponent_div_17_mat_chip_2_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 16);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddLearnerModalComponent_div_17_mat_chip_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip\", 24);\n    i0.ɵɵlistener(\"removed\", function AddLearnerModalComponent_div_17_mat_chip_2_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const dim_r16 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.removeDimension(dim_r16));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, AddLearnerModalComponent_div_17_mat_chip_2_mat_icon_2_Template, 2, 0, \"mat-icon\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dim_r16 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dim_r16, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.modelDataInputType === \"MANUAL_ENTRY\");\n  }\n}\nfunction AddLearnerModalComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"mat-chip-list\");\n    i0.ɵɵtemplate(2, AddLearnerModalComponent_div_17_mat_chip_2_Template, 3, 2, \"mat-chip\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.dimensions);\n  }\n}\nfunction AddLearnerModalComponent_div_18_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r21.errorMessage, \" \");\n  }\n}\nfunction AddLearnerModalComponent_div_18_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"p\");\n    i0.ɵɵtext(2, \"The CSV file must contain 5 ordered columns starting from: student_id, username, dimension, diagnostic value, reassessment value. Each row (line) specifies diagnostic and reassessment values per student and dimension. Diagnostic and reassessment values must be between 0 and 100 (inclusive). In the example below, the first row corresponding to CarterJones specifies a diagnostic value of 23 and reassessment value of 45 for Dimension1. Remember to include the header row! \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"pre\");\n    i0.ɵɵtext(4, \"            \");\n    i0.ɵɵelement(5, \"code\", 35);\n    i0.ɵɵtext(6, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \"To find each student's corresponding id, you can search the table or download them via CSV.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function AddLearnerModalComponent_div_18_div_14_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.exportStudentInfo());\n    });\n    i0.ɵɵtext(10, \"Download Student Info\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r22.template, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AddLearnerModalComponent_div_18_div_15_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 49);\n    i0.ɵɵtext(1, \" Username \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddLearnerModalComponent_div_18_div_15_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 50);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r34 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r34.username, \" \");\n  }\n}\nfunction AddLearnerModalComponent_div_18_div_15_th_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 49);\n    i0.ɵɵtext(1, \" ID \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddLearnerModalComponent_div_18_div_15_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 50);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r35 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r35.id, \" \");\n  }\n}\nfunction AddLearnerModalComponent_div_18_div_15_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 51);\n  }\n}\nfunction AddLearnerModalComponent_div_18_div_15_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 52);\n  }\n}\nfunction AddLearnerModalComponent_div_18_div_15_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 53)(1, \"td\", 54);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r26 = i0.ɵɵreference(7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"No data matching the filter \\\"\", _r26.value, \"\\\"\");\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25, 100];\n};\nfunction AddLearnerModalComponent_div_18_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"div\", 18);\n    i0.ɵɵtext(2, \"Student Info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Filter\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 38, 39);\n    i0.ɵɵlistener(\"keyup\", function AddLearnerModalComponent_div_18_div_15_Template_input_keyup_6_listener($event) {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r37.applyFilter($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"table\", 40);\n    i0.ɵɵelementContainerStart(9, 41);\n    i0.ɵɵtemplate(10, AddLearnerModalComponent_div_18_div_15_th_10_Template, 2, 0, \"th\", 42);\n    i0.ɵɵtemplate(11, AddLearnerModalComponent_div_18_div_15_td_11_Template, 2, 1, \"td\", 43);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(12, 44);\n    i0.ɵɵtemplate(13, AddLearnerModalComponent_div_18_div_15_th_13_Template, 2, 0, \"th\", 42);\n    i0.ɵɵtemplate(14, AddLearnerModalComponent_div_18_div_15_td_14_Template, 2, 1, \"td\", 43);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(15, AddLearnerModalComponent_div_18_div_15_tr_15_Template, 1, 0, \"tr\", 45);\n    i0.ɵɵtemplate(16, AddLearnerModalComponent_div_18_div_15_tr_16_Template, 1, 0, \"tr\", 46);\n    i0.ɵɵtemplate(17, AddLearnerModalComponent_div_18_div_15_tr_17_Template, 3, 1, \"tr\", 47);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"mat-paginator\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"dataSource\", ctx_r23.dataSource);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r23.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r23.displayedColumns);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(4, _c0));\n  }\n}\nfunction AddLearnerModalComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AddLearnerModalComponent_div_18_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const _r20 = i0.ɵɵreference(4);\n      return i0.ɵɵresetView(_r20.click());\n    });\n    i0.ɵɵtext(2, \"Choose File\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 27, 28);\n    i0.ɵɵlistener(\"change\", function AddLearnerModalComponent_div_18_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.onFileSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddLearnerModalComponent_div_18_mat_error_5_Template, 2, 1, \"mat-error\", 29);\n    i0.ɵɵelementStart(6, \"div\")(7, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function AddLearnerModalComponent_div_18_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.toggleCSVHelp());\n    });\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \" How to format the CSV file? \");\n    i0.ɵɵelementStart(11, \"mat-icon\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\");\n    i0.ɵɵtemplate(14, AddLearnerModalComponent_div_18_div_14_Template, 11, 1, \"div\", 31);\n    i0.ɵɵtemplate(15, AddLearnerModalComponent_div_18_div_15_Template, 19, 5, \"div\", 32);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isError);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r5.showCSVHelp ? \"expand_less\" : \"expand_more\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.showCSVHelp);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.showCSVHelp);\n  }\n}\nfunction AddLearnerModalComponent_div_19_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r45 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r45.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r45.value.username);\n  }\n}\nfunction AddLearnerModalComponent_div_19_div_20_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 65);\n    i0.ɵɵlistener(\"ngModelChange\", function AddLearnerModalComponent_div_19_div_20_input_4_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const dimensionValue_r46 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(dimensionValue_r46.diagnostic = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dimensionValue_r46 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", dimensionValue_r46.diagnostic);\n  }\n}\nfunction AddLearnerModalComponent_div_19_div_20_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 65);\n    i0.ɵɵlistener(\"ngModelChange\", function AddLearnerModalComponent_div_19_div_20_input_5_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r56);\n      const dimensionValue_r46 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(dimensionValue_r46.reassessment = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dimensionValue_r46 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", dimensionValue_r46.reassessment);\n  }\n}\nfunction AddLearnerModalComponent_div_19_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\")(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, AddLearnerModalComponent_div_19_div_20_input_4_Template, 1, 1, \"input\", 64);\n    i0.ɵɵtemplate(5, AddLearnerModalComponent_div_19_div_20_input_5_Template, 1, 1, \"input\", 64);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const dimensionValue_r46 = ctx.$implicit;\n    const ctx_r44 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(dimensionValue_r46.dimension);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r44.selectedAssessment === \"Diagnostic\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r44.selectedAssessment === \"Re-assessment\");\n  }\n}\nfunction AddLearnerModalComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r59 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 55);\n    i0.ɵɵtext(2, \"Select Student & Assessment Type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"mat-form-field\", 56)(5, \"mat-label\");\n    i0.ɵɵtext(6, \"Student\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-select\", 57);\n    i0.ɵɵlistener(\"ngModelChange\", function AddLearnerModalComponent_div_19_Template_mat_select_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r58 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r58.selectedStudent = $event);\n    })(\"selectionChange\", function AddLearnerModalComponent_div_19_Template_mat_select_selectionChange_7_listener() {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r60 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r60.studentChange());\n    });\n    i0.ɵɵtemplate(8, AddLearnerModalComponent_div_19_mat_option_8_Template, 2, 2, \"mat-option\", 58);\n    i0.ɵɵpipe(9, \"keyvalue\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"mat-form-field\", 56)(11, \"mat-label\");\n    i0.ɵɵtext(12, \"Assessment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-select\", 57);\n    i0.ɵɵlistener(\"ngModelChange\", function AddLearnerModalComponent_div_19_Template_mat_select_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r61 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r61.selectedAssessment = $event);\n    })(\"selectionChange\", function AddLearnerModalComponent_div_19_Template_mat_select_selectionChange_13_listener() {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r62 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r62.assessmentChange());\n    });\n    i0.ɵɵelementStart(14, \"mat-option\", 59);\n    i0.ɵɵtext(15, \"Diagnostic\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"mat-option\", 60);\n    i0.ɵɵtext(17, \"Re-assessment\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(18, \"div\", 61);\n    i0.ɵɵtext(19, \"Data Series\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, AddLearnerModalComponent_div_19_div_20_Template, 6, 3, \"div\", 62);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.selectedStudent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 4, ctx_r6.idToStudent));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.selectedAssessment);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.filteredDimensions);\n  }\n}\nfunction AddLearnerModalComponent_button_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r64 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AddLearnerModalComponent_button_23_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r63 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r63.updateModel());\n    });\n    i0.ɵɵtext(1, \"Update Model\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddLearnerModalComponent_button_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r66 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AddLearnerModalComponent_button_24_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r66);\n      const ctx_r65 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r65.createModel());\n    });\n    i0.ɵɵtext(1, \"Create Model\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport var DataInputMethod;\n(function (DataInputMethod) {\n  DataInputMethod[\"CSV\"] = \"CSV\";\n  DataInputMethod[\"MANUAL_ENTRY\"] = \"MANUAL_ENTRY\";\n})(DataInputMethod || (DataInputMethod = {}));\nexport class AddLearnerModalComponent {\n  dialogRef;\n  dialog;\n  userService;\n  learnerService;\n  data;\n  paginator;\n  name = '';\n  newDimensionText = '';\n  dimensions = new Set();\n  modelData = [];\n  stuDimToVals = new Map();\n  DELIMITER = ',,,';\n  modelDataInputType = DataInputMethod.MANUAL_ENTRY;\n  importCSV = null;\n  filteredDimensions = [];\n  selectedStudent;\n  selectedAssessment;\n  showCSVHelp = false;\n  isError = false;\n  errorMessage = '';\n  displayedColumns = ['username', 'id'];\n  tableData = [];\n  dataSource = new MatTableDataSource();\n  template = `# student_id, student_username, dimension, diagnostic, reassessment\n06e209ee-0500-4777-bb6a-9cd44a74dd80, CarterJones, Dimension 1, 23, 45\n06e209ee-0500-4777-bb6a-9cd44a74dd80, AbbyCruise, Dimension 2, 76, 54`;\n  idToStudent = new Map();\n  nameControl = new UntypedFormControl('', [Validators.required, Validators.maxLength(50)]);\n  matcher = new MyErrorStateMatcher();\n  constructor(dialogRef, dialog, userService, learnerService, data) {\n    this.dialogRef = dialogRef;\n    this.dialog = dialog;\n    this.userService = userService;\n    this.learnerService = learnerService;\n    this.data = data;\n    if (data.isEditing && data.model) {\n      this.name = data.model.name;\n      this.modelData = data.model.data;\n      data.model.dimensions.map(d => this.dimensions.add(d));\n      data.model.data.map(d => {\n        this.stuDimToVals.set(this.buildKey(d.student.userID, d.dimension), d);\n      });\n    }\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      (yield _this.userService.getByProject(_this.data.board.projectID)).map(u => {\n        if (_this.data.isEditing && u.userID === _this.data.selectedStudentID) {\n          _this.selectedStudent = u;\n          _this.selectedAssessment = 'Diagnostic';\n          _this.studentChange();\n        }\n        if (u.role == Role.STUDENT) {\n          _this.idToStudent.set(u.userID, u);\n        }\n      });\n      _this.createStudentInfoTable();\n    })();\n  }\n  addDimension() {\n    this.dimensions.add(this.newDimensionText);\n    if (this.modelDataInputType === 'MANUAL_ENTRY') {\n      this.createValuesPerDimension(this.newDimensionText);\n      this.filteredDimensions.push();\n    }\n    this.newDimensionText = '';\n  }\n  removeDimension(dimension) {\n    var _this2 = this;\n    this.dialog.open(ConfirmModalComponent, {\n      width: '500px',\n      data: {\n        title: 'WARNING',\n        message: 'This action will delete this dimension for all students including all associated data.',\n        handleConfirm: function () {\n          var _ref = _asyncToGenerator(function* () {\n            _this2.dimensions.delete(dimension);\n            _this2.removeValuesPerDimension(dimension);\n          });\n          return function handleConfirm() {\n            return _ref.apply(this, arguments);\n          };\n        }()\n      }\n    });\n  }\n  onFileSelected(event) {\n    this.importCSV = event.target.files[0] ?? null;\n    this.showCSVHelp = false;\n    const fileReader = new FileReader();\n    fileReader.onload = e => {\n      const result = fileReader.result;\n      if (typeof result !== 'string') {\n        return;\n      }\n      for (const row of result.split('\\n').splice(1)) {\n        const values = row.split(',');\n        const student = this.idToStudent.get(values[0]);\n        const diagnostic = Number(values[3]);\n        const reassessment = Number(values[4]);\n        if (!student) {\n          this.showError(`Student with ID: ${values[0]} does not exist. Please ensure the file is properly formatted based on the template below.`);\n          this.showCSVHelp = true;\n          this.clearData();\n          return;\n        } else if (isNaN(diagnostic) || isNaN(reassessment) || diagnostic < 0 || diagnostic > 100 || reassessment < 0 || reassessment > 100) {\n          this.showError(`The diagnostic or reassessment values should be numbers between 0-100 (inclusive).`);\n          this.showCSVHelp = true;\n          this.clearData();\n          return;\n        }\n        this.dimensions.add(values[2]);\n        const dimValue = {\n          student: student,\n          dimension: values[2],\n          diagnostic: Number(values[3]),\n          reassessment: Number(values[4])\n        };\n        this.stuDimToVals.set(this.buildKey(values[0], values[2]), dimValue);\n        this.modelData.push(dimValue);\n      }\n      for (const dim of this.dimensions) {\n        this.createValuesPerDimension(dim);\n      }\n      this.hideError();\n    };\n    fileReader.readAsText(this.importCSV);\n  }\n  studentChange() {\n    if (this.selectedStudent && this.selectedAssessment) {\n      this.filteredDimensions = [];\n      this.stuDimToVals.forEach((dimValue, stuDim) => {\n        if (stuDim.split(this.DELIMITER)[0] === this.selectedStudent?.userID) {\n          this.filteredDimensions.push(dimValue);\n        }\n      });\n    }\n  }\n  assessmentChange() {\n    if (this.selectedStudent != null && this.selectedAssessment) {\n      this.filteredDimensions = [];\n      this.stuDimToVals.forEach((dimValue, stuDim) => {\n        if (stuDim.split(this.DELIMITER)[0] === this.selectedStudent?.userID) {\n          this.filteredDimensions.push(dimValue);\n        }\n      });\n    }\n  }\n  createValuesPerDimension(dim) {\n    for (const [id, stu] of this.idToStudent) {\n      if (this.stuDimToVals.has(this.buildKey(id, dim))) continue;\n      const dimValue = {\n        student: stu,\n        dimension: dim,\n        diagnostic: 0,\n        reassessment: 0\n      };\n      if (this.selectedStudent?.userID === id) {\n        this.filteredDimensions.push(dimValue);\n      }\n      this.stuDimToVals.set(this.buildKey(id, dim), dimValue);\n      this.modelData.push(dimValue);\n    }\n  }\n  removeValuesPerDimension(dim) {\n    for (const [key, val] of this.stuDimToVals) {\n      if (key.split(this.DELIMITER)[1] === dim) {\n        this.stuDimToVals.delete(key);\n      }\n    }\n    this.filteredDimensions = this.filteredDimensions.filter(f => f.dimension !== dim);\n    this.modelData = this.modelData.filter(m => m.dimension !== dim);\n  }\n  buildKey(userID, dimension) {\n    return userID + this.DELIMITER + dimension;\n  }\n  askToClearData() {\n    var _this3 = this;\n    this.dialog.open(ConfirmModalComponent, {\n      width: '500px',\n      data: {\n        title: 'WARNING',\n        message: 'This action will remove all dimensions and associated data.',\n        handleConfirm: function () {\n          var _ref2 = _asyncToGenerator(function* () {\n            _this3.clearData();\n          });\n          return function handleConfirm() {\n            return _ref2.apply(this, arguments);\n          };\n        }()\n      }\n    });\n  }\n  clearData() {\n    this.importCSV = null;\n    this.dimensions.clear();\n    this.stuDimToVals.clear();\n    this.modelData = [];\n    this.filteredDimensions = [];\n    this.selectedAssessment = null;\n    this.selectedStudent = null;\n  }\n  showError(message) {\n    this.isError = true;\n    this.errorMessage = message;\n  }\n  hideError() {\n    this.isError = false;\n    this.errorMessage = '';\n  }\n  createStudentInfoTable() {\n    this.idToStudent.forEach((user, id) => {\n      this.tableData.push({\n        id,\n        username: user.username\n      });\n    });\n    this.dataSource = new MatTableDataSource(this.tableData);\n    this.dataSource.paginator = this.paginator;\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  exportStudentInfo() {\n    const rows = ['student_id,student_username,dimension,diagnostic,reassessment'];\n    this.idToStudent.forEach((user, id) => {\n      rows.push(`${id},${user.username},Sample Dimension, 0, 0`);\n    });\n    const csvArray = rows.join('\\r\\n');\n    const blob = new Blob([csvArray], {\n      type: 'text/csv'\n    });\n    saveAs(blob, `${this.data.board.projectID}_student_info.csv`);\n  }\n  toggleCSVHelp() {\n    this.showCSVHelp = !this.showCSVHelp;\n  }\n  onClose() {\n    this.dialogRef.close();\n  }\n  updateModel() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (_this4.data.isEditing && _this4.data.onUpdate && _this4.data.model) {\n        const model = yield _this4.learnerService.updateModel(_this4.data.model.modelID, _this4.name, Array.from(_this4.dimensions), _this4.modelData);\n        _this4.data.onUpdate(model);\n        _this4.dialogRef.close();\n      }\n    })();\n  }\n  createModel() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this5.data.isEditing && _this5.data.onCreate) {\n        const model = yield _this5.learnerService.createModel(_this5.data.board.projectID, _this5.data.board.boardID, _this5.name, Array.from(_this5.dimensions), _this5.modelData);\n        _this5.data.onCreate(model);\n        _this5.dialogRef.close();\n      }\n    })();\n  }\n  static ɵfac = function AddLearnerModalComponent_Factory(t) {\n    return new (t || AddLearnerModalComponent)(i0.ɵɵdirectiveInject(i1.MatLegacyDialogRef), i0.ɵɵdirectiveInject(i1.MatLegacyDialog), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.LearnerService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddLearnerModalComponent,\n    selectors: [[\"app-add-learner-modal\"]],\n    viewQuery: function AddLearnerModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 25,\n    vars: 17,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"appearance\", \"fill\", 2, \"padding-top\", \"10px\", \"width\", \"100%\"], [\"name\", \"name\", \"matInput\", \"\", \"autocomplete\", \"off\", 3, \"appAutofocus\", \"formControl\", \"errorStateMatcher\", \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"padding\", \"10px 20px 15px 0\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"CSV\", 3, \"disabled\"], [\"value\", \"MANUAL_ENTRY\", 2, \"padding\", \"0 0 0 10px\", 3, \"disabled\"], [\"removable\", \"\", 3, \"removed\", 4, \"ngIf\"], [\"style\", \"padding-top: 10px;\", 4, \"ngIf\"], [\"style\", \"margin-bottom: 20px;\", 4, \"ngIf\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"removable\", \"\", 3, \"removed\"], [\"matChipRemove\", \"\"], [2, \"padding-top\", \"10px\"], [2, \"font-weight\", \"bold\", \"padding\", \"0 0 10px 0\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [2, \"margin-bottom\", \"20px\"], [\"selected\", \"\", \"color\", \"accent\", \"removable\", \"\", 3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"selected\", \"\", \"color\", \"accent\", \"removable\", \"\", 3, \"removed\"], [\"matChipRemove\", \"\", 4, \"ngIf\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"hidden\", \"\", \"type\", \"file\", 3, \"change\"], [\"fileInput\", \"\"], [\"style\", \"padding-top: 10px; font-weight: bold;\", 4, \"ngIf\"], [\"mat-button\", \"\", 1, \"csv-help-toggler\", 2, \"color\", \"grey\", 3, \"click\"], [\"style\", \"width: 55%; float:left\", 4, \"ngIf\"], [\"style\", \"width: 40%; float:right\", 4, \"ngIf\"], [2, \"padding-top\", \"10px\", \"font-weight\", \"bold\"], [2, \"width\", \"55%\", \"float\", \"left\"], [3, \"innerHTML\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"accent\", 2, \"margin-left\", \"10px\", 3, \"click\"], [2, \"width\", \"40%\", \"float\", \"right\"], [\"matInput\", \"\", \"placeholder\", \"Ex. Carter\", 3, \"keyup\"], [\"input\", \"\"], [\"mat-table\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"username\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"id\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"mat-row\", 4, \"matNoDataRow\"], [3, \"pageSizeOptions\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [1, \"mat-row\"], [\"colspan\", \"4\", 1, \"mat-cell\"], [2, \"font-weight\", \"bold\", \"padding\", \"10px 0 0 0\"], [\"appearance\", \"fill\", 2, \"padding\", \"10px 10px\"], [3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"Diagnostic\"], [\"value\", \"Re-assessment\"], [2, \"font-weight\", \"bold\", \"margin-bottom\", \"10px\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"type\", \"number\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"type\", \"number\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function AddLearnerModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"mat-form-field\", 2)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Model Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AddLearnerModalComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, AddLearnerModalComponent_mat_error_7_Template, 4, 0, \"mat-error\", 4);\n        i0.ɵɵtemplate(8, AddLearnerModalComponent_mat_error_8_Template, 4, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5)(10, \"mat-radio-group\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AddLearnerModalComponent_Template_mat_radio_group_ngModelChange_10_listener($event) {\n          return ctx.modelDataInputType = $event;\n        });\n        i0.ɵɵelementStart(11, \"mat-radio-button\", 7);\n        i0.ɵɵtext(12, \" Import Data via CSV \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-radio-button\", 8);\n        i0.ɵɵtext(14, \" Manual Entry \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, AddLearnerModalComponent_mat_chip_15_Template, 4, 0, \"mat-chip\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, AddLearnerModalComponent_div_16_Template, 9, 2, \"div\", 10);\n        i0.ɵɵtemplate(17, AddLearnerModalComponent_div_17_Template, 3, 1, \"div\", 11);\n        i0.ɵɵtemplate(18, AddLearnerModalComponent_div_18_Template, 16, 4, \"div\", 4);\n        i0.ɵɵtemplate(19, AddLearnerModalComponent_div_19_Template, 21, 6, \"div\", 4);\n        i0.ɵɵelementStart(20, \"div\", 12)(21, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function AddLearnerModalComponent_Template_button_click_21_listener() {\n          return ctx.onClose();\n        });\n        i0.ɵɵtext(22, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, AddLearnerModalComponent_button_23_Template, 2, 0, \"button\", 14);\n        i0.ɵɵtemplate(24, AddLearnerModalComponent_button_24_Template, 2, 0, \"button\", 14);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.data.isEditing ? \"Edit\" : \"Create\", \" Learner Model\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"appAutofocus\", true)(\"formControl\", ctx.nameControl)(\"errorStateMatcher\", ctx.matcher)(\"ngModel\", ctx.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.name && ctx.name.length > 50);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.modelDataInputType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.dimensions.size > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.importCSV !== null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.importCSV !== null || ctx.dimensions.size > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.modelDataInputType === \"MANUAL_ENTRY\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.modelDataInputType === \"MANUAL_ENTRY\" || ctx.importCSV !== null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.modelDataInputType === \"CSV\" && ctx.importCSV === null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.importCSV !== null || ctx.dimensions.size > 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.data.isEditing && ctx.nameControl.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.data.isEditing && ctx.nameControl.valid);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgModel, i5.FormControlDirective, i6.MatLegacyButton, i7.MatIcon, i1.MatLegacyDialogTitle, i1.MatLegacyDialogContent, i1.MatLegacyDialogActions, i8.MatLegacyError, i8.MatLegacyFormField, i8.MatLegacyLabel, i9.MatLegacyInput, i10.MatLegacyChipList, i10.MatLegacyChip, i10.MatLegacyChipRemove, i11.MatLegacyOption, i12.MatLegacySelect, i13.MatLegacyRadioGroup, i13.MatLegacyRadioButton, i14.MatLegacyTable, i14.MatLegacyHeaderCellDef, i14.MatLegacyHeaderRowDef, i14.MatLegacyColumnDef, i14.MatLegacyCellDef, i14.MatLegacyRowDef, i14.MatLegacyHeaderCell, i14.MatLegacyCell, i14.MatLegacyHeaderRow, i14.MatLegacyRow, i14.MatLegacyNoDataRow, i15.MatLegacyPaginator, i16.AutofocusDirective, i4.KeyValuePipe],\n    styles: [\".dimensions-list[_ngcontent-%COMP%] {\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n}\\n\\n.csv-help-toggler[_ngcontent-%COMP%] {\\n  padding: 10px 0 0 0 !important;\\n}\\n\\npre[_ngcontent-%COMP%] {\\n  background: #f4f4f4;\\n  border: 1px solid #ddd;\\n  border-left: 3px solid #f36d33;\\n  color: #666;\\n  page-break-inside: avoid;\\n  font-family: monospace;\\n  font-size: 15px;\\n  line-height: 1.6;\\n  margin-bottom: 1.6em;\\n  white-space: pre-line;\\n  width: 100%;\\n  overflow: auto;\\n  padding: 0.5em 0.8em;\\n  display: block;\\n  word-wrap: break-word;\\n}\\n\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.mat-mdc-form-field[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtbGVhcm5lci1tb2RhbC9hZGQtbGVhcm5lci1tb2RhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0VBQ0Esb0JBQUE7QUFDRjs7QUFFQTtFQUNFLDhCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0EsOEJBQUE7RUFDQSxXQUFBO0VBQ0Esd0JBQUE7RUFDQSxzQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLG9CQUFBO0VBQ0EscUJBQUE7RUFDQSxXQUFBO0VBQ0EsY0FBQTtFQUNBLG9CQUFBO0VBQ0EsY0FBQTtFQUNBLHFCQUFBO0FBQ0Y7O0FBRUEsY0FBQTtBQUNBO0VBQ0UsV0FBQTtBQUNGOztBQUVBO0VBQ0UsZUFBQTtFQUNBLFdBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5kaW1lbnNpb25zLWxpc3Qge1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG59XG5cbi5jc3YtaGVscC10b2dnbGVyIHtcbiAgcGFkZGluZzogMTBweCAwIDAgMCAhaW1wb3J0YW50O1xufVxuXG5wcmUge1xuICBiYWNrZ3JvdW5kOiAjZjRmNGY0O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICBib3JkZXItbGVmdDogM3B4IHNvbGlkICNmMzZkMzM7XG4gIGNvbG9yOiAjNjY2O1xuICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgbWFyZ2luLWJvdHRvbTogMS42ZW07XG4gIHdoaXRlLXNwYWNlOiBwcmUtbGluZTtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBwYWRkaW5nOiAwLjVlbSAwLjhlbTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxuLyogU3RydWN0dXJlICovXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LW1kYy1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB3aWR0aDogMTAwJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["UntypedFormControl","Validators","MAT_LEGACY_DIALOG_DATA","MAT_DIALOG_DATA","MatLegacyTableDataSource","MatTableDataSource","Role","MyErrorStateMatcher","saveAs","MatLegacyPaginator","MatPaginator","ConfirmModalComponent","i0","DataInputMethod","AddLearnerModalComponent","dialogRef","dialog","userService","learnerService","data","paginator","name","newDimensionText","dimensions","Set","modelData","stuDimToVals","Map","DELIMITER","modelDataInputType","MANUAL_ENTRY","importCSV","filteredDimensions","selectedStudent","selectedAssessment","showCSVHelp","isError","errorMessage","displayedColumns","tableData","dataSource","template","idToStudent","nameControl","required","maxLength","matcher","constructor","isEditing","model","map","d","add","set","buildKey","student","userID","dimension","ngOnInit","getByProject","board","projectID","u","selectedStudentID","studentChange","role","STUDENT","createStudentInfoTable","addDimension","createValuesPerDimension","push","removeDimension","open","width","title","message","handleConfirm","delete","removeValuesPerDimension","onFileSelected","event","target","files","fileReader","FileReader","onload","e","result","row","split","splice","values","get","diagnostic","Number","reassessment","showError","clearData","isNaN","dimValue","dim","hideError","readAsText","forEach","stuDim","assessmentChange","id","stu","has","key","val","filter","f","m","askToClearData","clear","user","username","applyFilter","filterValue","value","trim","toLowerCase","firstPage","exportStudentInfo","rows","csvArray","join","blob","Blob","type","toggleCSVHelp","onClose","close","updateModel","onUpdate","modelID","Array","from","createModel","onCreate","boardID","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/add-learner-modal/add-learner-modal.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/add-learner-modal/add-learner-modal.component.html"],"sourcesContent":["import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport {\n  MatLegacyDialogRef as MatDialogRef,\n  MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA,\n  MatLegacyDialog as MatDialog,\n} from '@angular/material/legacy-dialog';\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\nimport { Board } from 'src/app/models/board';\nimport LearnerModel, { DimensionValue } from 'src/app/models/learner';\nimport { AuthUser, Role } from 'src/app/models/user';\nimport { LearnerService } from 'src/app/services/learner.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { MyErrorStateMatcher } from 'src/app/utils/ErrorStateMatcher';\nimport * as saveAs from 'file-saver';\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\n\nexport interface StudentElement {\n  id: string;\n  username: string;\n}\n\nexport interface AddLearnerInput {\n  isEditing: boolean;\n  board: Board;\n\n  onCreate?: Function;\n\n  model?: LearnerModel;\n  selectedStudentID?: string;\n  onUpdate?: Function;\n}\n\nexport enum DataInputMethod {\n  CSV = 'CSV',\n  MANUAL_ENTRY = 'MANUAL_ENTRY',\n}\n\n@Component({\n  selector: 'app-add-learner-modal',\n  templateUrl: './add-learner-modal.component.html',\n  styleUrls: ['./add-learner-modal.component.scss'],\n})\nexport class AddLearnerModalComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  name: string = '';\n\n  newDimensionText: string = '';\n  dimensions: Set<string> = new Set<string>();\n\n  modelData: DimensionValue[] = [];\n  stuDimToVals: Map<string, DimensionValue> = new Map<string, DimensionValue>();\n  DELIMITER = ',,,';\n\n  modelDataInputType: DataInputMethod = DataInputMethod.MANUAL_ENTRY;\n  importCSV: any = null;\n  filteredDimensions: DimensionValue[] = [];\n  selectedStudent: AuthUser | null;\n  selectedAssessment: string | null;\n\n  showCSVHelp: boolean = false;\n  isError = false;\n  errorMessage = '';\n  displayedColumns: string[] = ['username', 'id'];\n  tableData: StudentElement[] = [];\n  dataSource: MatTableDataSource<StudentElement> = new MatTableDataSource();\n  template: string = `# student_id, student_username, dimension, diagnostic, reassessment\n06e209ee-0500-4777-bb6a-9cd44a74dd80, CarterJones, Dimension 1, 23, 45\n06e209ee-0500-4777-bb6a-9cd44a74dd80, AbbyCruise, Dimension 2, 76, 54`;\n\n  idToStudent: Map<string, AuthUser> = new Map<string, AuthUser>();\n  nameControl = new UntypedFormControl('', [\n    Validators.required,\n    Validators.maxLength(50),\n  ]);\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    public dialogRef: MatDialogRef<AddLearnerModalComponent>,\n    private dialog: MatDialog,\n    private userService: UserService,\n    private learnerService: LearnerService,\n    @Inject(MAT_DIALOG_DATA) public data: AddLearnerInput\n  ) {\n    if (data.isEditing && data.model) {\n      this.name = data.model.name;\n      this.modelData = data.model.data;\n      data.model.dimensions.map((d) => this.dimensions.add(d));\n      data.model.data.map((d) => {\n        this.stuDimToVals.set(this.buildKey(d.student.userID, d.dimension), d);\n      });\n    }\n  }\n\n  async ngOnInit(): Promise<void> {\n    (await this.userService.getByProject(this.data.board.projectID)).map(\n      (u) => {\n        if (this.data.isEditing && u.userID === this.data.selectedStudentID) {\n          this.selectedStudent = u;\n          this.selectedAssessment = 'Diagnostic';\n          this.studentChange();\n        }\n        if (u.role == Role.STUDENT) {\n          this.idToStudent.set(u.userID, u);\n        }\n      }\n    );\n    this.createStudentInfoTable();\n  }\n\n  addDimension(): void {\n    this.dimensions.add(this.newDimensionText);\n    if (this.modelDataInputType === 'MANUAL_ENTRY') {\n      this.createValuesPerDimension(this.newDimensionText);\n      this.filteredDimensions.push();\n    }\n    this.newDimensionText = '';\n  }\n\n  removeDimension(dimension: string): void {\n    this.dialog.open(ConfirmModalComponent, {\n      width: '500px',\n      data: {\n        title: 'WARNING',\n        message:\n          'This action will delete this dimension for all students including all associated data.',\n        handleConfirm: async () => {\n          this.dimensions.delete(dimension);\n          this.removeValuesPerDimension(dimension);\n        },\n      },\n    });\n  }\n\n  onFileSelected(event: any): void {\n    this.importCSV = event.target.files[0] ?? null;\n    this.showCSVHelp = false;\n    const fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      const result = fileReader.result;\n      if (typeof result !== 'string') {\n        return;\n      }\n      for (const row of result.split('\\n').splice(1)) {\n        const values = row.split(',');\n        const student = this.idToStudent.get(values[0]);\n        const diagnostic = Number(values[3]);\n        const reassessment = Number(values[4]);\n\n        if (!student) {\n          this.showError(\n            `Student with ID: ${values[0]} does not exist. Please ensure the file is properly formatted based on the template below.`\n          );\n          this.showCSVHelp = true;\n          this.clearData();\n          return;\n        } else if (\n          isNaN(diagnostic) ||\n          isNaN(reassessment) ||\n          diagnostic < 0 ||\n          diagnostic > 100 ||\n          reassessment < 0 ||\n          reassessment > 100\n        ) {\n          this.showError(\n            `The diagnostic or reassessment values should be numbers between 0-100 (inclusive).`\n          );\n          this.showCSVHelp = true;\n          this.clearData();\n          return;\n        }\n\n        this.dimensions.add(values[2]);\n        const dimValue = {\n          student: student,\n          dimension: values[2],\n          diagnostic: Number(values[3]),\n          reassessment: Number(values[4]),\n        };\n        this.stuDimToVals.set(this.buildKey(values[0], values[2]), dimValue);\n        this.modelData.push(dimValue);\n      }\n      for (const dim of this.dimensions) {\n        this.createValuesPerDimension(dim);\n      }\n      this.hideError();\n    };\n    fileReader.readAsText(this.importCSV);\n  }\n\n  studentChange(): void {\n    if (this.selectedStudent && this.selectedAssessment) {\n      this.filteredDimensions = [];\n      this.stuDimToVals.forEach((dimValue, stuDim) => {\n        if (stuDim.split(this.DELIMITER)[0] === this.selectedStudent?.userID) {\n          this.filteredDimensions.push(dimValue);\n        }\n      });\n    }\n  }\n\n  assessmentChange(): void {\n    if (this.selectedStudent != null && this.selectedAssessment) {\n      this.filteredDimensions = [];\n      this.stuDimToVals.forEach((dimValue, stuDim) => {\n        if (stuDim.split(this.DELIMITER)[0] === this.selectedStudent?.userID) {\n          this.filteredDimensions.push(dimValue);\n        }\n      });\n    }\n  }\n\n  createValuesPerDimension(dim: string): void {\n    for (const [id, stu] of this.idToStudent) {\n      if (this.stuDimToVals.has(this.buildKey(id, dim))) continue;\n      const dimValue = {\n        student: stu,\n        dimension: dim,\n        diagnostic: 0,\n        reassessment: 0,\n      };\n      if (this.selectedStudent?.userID === id) {\n        this.filteredDimensions.push(dimValue);\n      }\n      this.stuDimToVals.set(this.buildKey(id, dim), dimValue);\n      this.modelData.push(dimValue);\n    }\n  }\n\n  removeValuesPerDimension(dim: string): void {\n    for (const [key, val] of this.stuDimToVals) {\n      if (key.split(this.DELIMITER)[1] === dim) {\n        this.stuDimToVals.delete(key);\n      }\n    }\n\n    this.filteredDimensions = this.filteredDimensions.filter(\n      (f) => f.dimension !== dim\n    );\n\n    this.modelData = this.modelData.filter((m) => m.dimension !== dim);\n  }\n\n  buildKey(userID: string, dimension: string): string {\n    return userID + this.DELIMITER + dimension;\n  }\n\n  askToClearData(): void {\n    this.dialog.open(ConfirmModalComponent, {\n      width: '500px',\n      data: {\n        title: 'WARNING',\n        message: 'This action will remove all dimensions and associated data.',\n        handleConfirm: async () => {\n          this.clearData();\n        },\n      },\n    });\n  }\n\n  clearData(): void {\n    this.importCSV = null;\n    this.dimensions.clear();\n    this.stuDimToVals.clear();\n    this.modelData = [];\n    this.filteredDimensions = [];\n    this.selectedAssessment = null;\n    this.selectedStudent = null;\n  }\n\n  showError(message: string): void {\n    this.isError = true;\n    this.errorMessage = message;\n  }\n\n  hideError(): void {\n    this.isError = false;\n    this.errorMessage = '';\n  }\n\n  createStudentInfoTable(): void {\n    this.idToStudent.forEach((user, id) => {\n      this.tableData.push({ id, username: user.username });\n    });\n    this.dataSource = new MatTableDataSource(this.tableData);\n    this.dataSource.paginator = this.paginator;\n  }\n\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  exportStudentInfo(): void {\n    const rows: string[] = [\n      'student_id,student_username,dimension,diagnostic,reassessment',\n    ];\n    this.idToStudent.forEach((user, id) => {\n      rows.push(`${id},${user.username},Sample Dimension, 0, 0`);\n    });\n    const csvArray = rows.join('\\r\\n');\n    const blob = new Blob([csvArray], { type: 'text/csv' });\n    saveAs(blob, `${this.data.board.projectID}_student_info.csv`);\n  }\n\n  toggleCSVHelp(): void {\n    this.showCSVHelp = !this.showCSVHelp;\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  async updateModel(): Promise<void> {\n    if (this.data.isEditing && this.data.onUpdate && this.data.model) {\n      const model = await this.learnerService.updateModel(\n        this.data.model.modelID,\n        this.name,\n        Array.from(this.dimensions),\n        this.modelData\n      );\n      this.data.onUpdate(model);\n      this.dialogRef.close();\n    }\n  }\n\n  async createModel(): Promise<void> {\n    if (!this.data.isEditing && this.data.onCreate) {\n      const model = await this.learnerService.createModel(\n        this.data.board.projectID,\n        this.data.board.boardID,\n        this.name,\n        Array.from(this.dimensions),\n        this.modelData\n      );\n      this.data.onCreate(model);\n      this.dialogRef.close();\n    }\n  }\n}\n","<h1 mat-dialog-title>{{ data.isEditing ? 'Edit' : 'Create' }} Learner Model</h1>\n<div mat-dialog-content>\n  <mat-form-field appearance=\"fill\" style=\"padding-top: 10px; width: 100%\">\n    <mat-label>Model Name</mat-label>\n    <input\n      name=\"name\"\n      [appAutofocus]=\"true\"\n      [formControl]=\"nameControl\"\n      [errorStateMatcher]=\"matcher\"\n      matInput\n      autocomplete=\"off\"\n      [(ngModel)]=\"name\"\n    />\n    <mat-error *ngIf=\"!name\">Model name is <strong>required</strong> </mat-error>\n    <mat-error *ngIf=\"name && name.length > 50\">\n      Model name is <strong>too long!</strong>\n    </mat-error>\n  </mat-form-field>\n  <div style=\"display: flex; justify-content: space-between; padding: 10px 20px 15px 0\">\n    <mat-radio-group [(ngModel)]=\"modelDataInputType\">\n      <mat-radio-button value=\"CSV\" [disabled]=\"dimensions.size > 0\">\n        Import Data via CSV\n      </mat-radio-button>\n      <mat-radio-button value=\"MANUAL_ENTRY\" [disabled]=\"importCSV !== null\" style=\"padding: 0 0 0 10px\">\n        Manual Entry\n      </mat-radio-button>\n    </mat-radio-group>\n    <mat-chip *ngIf=\"importCSV !== null || dimensions.size > 0\" removable (removed)=\"askToClearData()\">\n      Clear Data\n      <mat-icon matChipRemove>cancel</mat-icon>\n    </mat-chip>\n  </div>\n  <div *ngIf=\"modelDataInputType === 'MANUAL_ENTRY'\" style=\"padding-top: 10px;\">\n    <div style=\"font-weight: bold; padding: 0 0 10px 0;\">Dimensions</div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>New Dimension Name...</mat-label>\n      <input matInput [(ngModel)]=\"newDimensionText\" (keyup.enter)=\"addDimension()\" />\n    </mat-form-field>\n    <button\n      mat-button\n      [disabled]=\"newDimensionText.length < 1\"\n      color=\"primary\"\n      (click)=\"addDimension()\"\n    >\n      Add Dimension\n    </button>\n  </div>\n  <div *ngIf=\"modelDataInputType === 'MANUAL_ENTRY' || importCSV !== null\" style=\"margin-bottom: 20px;\">\n    <mat-chip-list>\n      <mat-chip *ngFor=\"let dim of dimensions\" selected color=\"accent\" removable (removed)=\"removeDimension(dim)\">\n        {{ dim }}\n        <mat-icon *ngIf=\"modelDataInputType === 'MANUAL_ENTRY'\" matChipRemove>cancel</mat-icon>\n      </mat-chip>\n    </mat-chip-list>\n  </div>\n  <div *ngIf=\"modelDataInputType === 'CSV' && importCSV === null\">\n    <button type=\"button\" mat-raised-button (click)=\"fileInput.click()\" color=\"accent\">Choose File</button>\n    <input hidden (change)=\"onFileSelected($event)\" #fileInput type=\"file\">\n    <mat-error *ngIf=\"isError\" style=\"padding-top: 10px; font-weight: bold;\">\n      {{ errorMessage }}\n    </mat-error>\n    <div>\n      <button class=\"csv-help-toggler\" mat-button style=\"color: grey;\" (click)=\"toggleCSVHelp()\">\n        <mat-icon>info</mat-icon>\n        How to format the CSV file?\n        <mat-icon>{{ showCSVHelp ? 'expand_less' : 'expand_more' }}</mat-icon>\n      </button>\n      <div>\n        <div *ngIf=\"showCSVHelp\" style=\"width: 55%; float:left\">\n          <p>The CSV file must contain 5 ordered columns starting from: student_id, username, dimension, diagnostic value, reassessment value. Each\n            row (line) specifies diagnostic and reassessment values per student and dimension. Diagnostic and reassessment values must be between 0 and 100 (inclusive). \n            In the example below, the first row corresponding to CarterJones specifies a diagnostic value of 23 and reassessment value of 45 for Dimension1. Remember to include the header row! \n          </p>\n          <pre>\n            <code [innerHTML]=\"template\"></code>\n          </pre>\n          <p>To find each student's corresponding id, you can search the table or download them via CSV.</p>\n          <button type=\"button\" mat-raised-button (click)=\"exportStudentInfo()\" color=\"accent\" style=\"margin-left: 10px\">Download Student Info</button>\n        </div>\n        <div *ngIf=\"showCSVHelp\" style=\"width: 40%; float:right\">\n          <div style=\"font-weight: bold; padding: 0 0 10px 0;\">Student Info</div>\n          <mat-form-field>\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Carter\" #input>\n          </mat-form-field>\n          <table mat-table [dataSource]=\"dataSource\">\n            <ng-container matColumnDef=\"username\">\n              <th mat-header-cell *matHeaderCellDef> Username </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"id\">\n              <th mat-header-cell *matHeaderCellDef> ID </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n            </tr>\n          </table>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"importCSV !== null || dimensions.size > 0\">\n    <div style=\"font-weight: bold; padding: 10px 0 0 0;\">Select Student & Assessment Type:</div>\n    <div>\n      <mat-form-field appearance=\"fill\" style=\"padding: 10px 10px;\">\n        <mat-label>Student</mat-label>\n        <mat-select [(ngModel)]=\"selectedStudent\" (selectionChange)=\"studentChange()\">\n          <mat-option *ngFor=\"let item of idToStudent | keyvalue\" [value]=\"item.value\">{{item.value.username}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" style=\"padding: 10px 10px;\">\n        <mat-label>Assessment</mat-label>\n        <mat-select [(ngModel)]=\"selectedAssessment\" (selectionChange)=\"assessmentChange()\">\n          <mat-option value=\"Diagnostic\">Diagnostic</mat-option>\n          <mat-option value=\"Re-assessment\">Re-assessment</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div style=\"font-weight: bold; margin-bottom: 10px;\">Data Series</div>\n    <div *ngFor=\"let dimensionValue of filteredDimensions; let i = index;\">\n      <mat-form-field>\n        <mat-label>{{dimensionValue.dimension}}</mat-label>\n        <input *ngIf=\"selectedAssessment === 'Diagnostic'\" type=\"number\" [(ngModel)]=\"dimensionValue.diagnostic\" matInput>\n        <input *ngIf=\"selectedAssessment === 'Re-assessment'\" type=\"number\" [(ngModel)]=\"dimensionValue.reassessment\" matInput>\n        <!-- <mat-error *ngIf=\"formArray[i].hasError('required')\">\n          Value is required\n        </mat-error>\n        <mat-error *ngIf=\"formArray[i].hasError('min') || formArray[i].hasError('max')\">\n          Value must be between 0-100\n        </mat-error> -->\n      </mat-form-field>\n    </div>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onClose()\">Close</button>\n    <button mat-button *ngIf=\"data.isEditing && nameControl.valid\" (click)=\"updateModel()\">Update Model</button>\n    <button mat-button *ngIf=\"!data.isEditing && nameControl.valid\" (click)=\"createModel()\">Create Model</button>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}