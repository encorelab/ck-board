{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { CanvasComponent } from './components/canvas/canvas.component';\nimport { CkBucketsComponent } from './components/ck-buckets/ck-buckets.component';\nimport { CkMonitorComponent } from './components/ck-monitor/ck-monitor.component';\nimport { CkWorkspaceComponent } from './components/ck-workspace/ck-workspace.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProjectDashboardComponent } from './components/project-dashboard/project-dashboard.component';\nimport { ProjectTodoListModalComponent } from './components/project-todo-list-modal/project-todo-list-modal.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SsoLoginComponent } from './components/sso-login/sso-login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { BoardGuard } from './guards/board.guard';\nimport { ProjectGuard } from './guards/project.guard';\nimport { SsoGuard } from './guards/sso.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  canActivate: [SsoGuard],\n  component: LoginComponent\n}, {\n  path: 'login',\n  canActivate: [SsoGuard],\n  component: LoginComponent\n}, {\n  path: 'register',\n  canActivate: [SsoGuard],\n  component: RegisterComponent\n}, {\n  path: 'sso/login/:sso/:sig',\n  component: SsoLoginComponent\n}, {\n  path: 'dashboard',\n  component: DashboardComponent,\n  canActivate: [SsoGuard, AuthGuard]\n}, {\n  path: 'project/:projectID',\n  component: ProjectDashboardComponent,\n  canActivate: [SsoGuard, AuthGuard, ProjectGuard]\n}, {\n  path: 'project/:projectID/board/:boardID',\n  component: CanvasComponent,\n  canActivate: [SsoGuard, AuthGuard, ProjectGuard, BoardGuard]\n}, {\n  path: 'project/:projectID/my-personal-board',\n  component: CanvasComponent,\n  canActivate: [SsoGuard, AuthGuard, ProjectGuard]\n}, {\n  path: 'project/:projectID/board/:boardID/canvas',\n  component: CanvasComponent,\n  canActivate: [AuthGuard, ProjectGuard, BoardGuard]\n}, {\n  path: 'project/:projectID/board/:boardID/workspace',\n  component: CkWorkspaceComponent,\n  canActivate: [AuthGuard, ProjectGuard, BoardGuard]\n}, {\n  path: 'project/:projectID/board/:boardID/buckets',\n  component: CkBucketsComponent,\n  canActivate: [AuthGuard, ProjectGuard, BoardGuard]\n}, {\n  path: 'project/:projectID/board/:boardID/monitor',\n  component: CkMonitorComponent,\n  canActivate: [AuthGuard, ProjectGuard, BoardGuard]\n}, {\n  path: 'project/:projectID/todo',\n  component: ProjectTodoListModalComponent,\n  canActivate: [AuthGuard, ProjectGuard]\n}, {\n  path: 'error',\n  component: ErrorComponent\n}, {\n  path: '**',\n  redirectTo: 'error'\n}];\nexport class AppRoutingModule {\n  static ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"mappings":"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","names":["RouterModule","CanvasComponent","CkBucketsComponent","CkMonitorComponent","CkWorkspaceComponent","DashboardComponent","ErrorComponent","LoginComponent","ProjectDashboardComponent","ProjectTodoListModalComponent","RegisterComponent","SsoLoginComponent","AuthGuard","BoardGuard","ProjectGuard","SsoGuard","routes","path","canActivate","component","redirectTo","AppRoutingModule","forRoot","imports","exports"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CanvasComponent } from './components/canvas/canvas.component';\nimport { CkBucketsComponent } from './components/ck-buckets/ck-buckets.component';\nimport { CkMonitorComponent } from './components/ck-monitor/ck-monitor.component';\nimport { CkWorkspaceComponent } from './components/ck-workspace/ck-workspace.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProjectDashboardComponent } from './components/project-dashboard/project-dashboard.component';\nimport { ProjectTodoListModalComponent } from './components/project-todo-list-modal/project-todo-list-modal.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SsoLoginComponent } from './components/sso-login/sso-login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { BoardGuard } from './guards/board.guard';\nimport { ProjectGuard } from './guards/project.guard';\nimport { SsoGuard } from './guards/sso.guard';\n\nconst routes: Routes = [\n  { path: '', canActivate: [SsoGuard], component: LoginComponent },\n  { path: 'login', canActivate: [SsoGuard], component: LoginComponent },\n  { path: 'register', canActivate: [SsoGuard], component: RegisterComponent },\n  {\n    path: 'sso/login/:sso/:sig',\n    component: SsoLoginComponent,\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [SsoGuard, AuthGuard],\n  },\n  {\n    path: 'project/:projectID',\n    component: ProjectDashboardComponent,\n    canActivate: [SsoGuard, AuthGuard, ProjectGuard],\n  },\n  {\n    path: 'project/:projectID/board/:boardID',\n    component: CanvasComponent,\n    canActivate: [SsoGuard, AuthGuard, ProjectGuard, BoardGuard],\n  },\n  {\n    path: 'project/:projectID/my-personal-board',\n    component: CanvasComponent,\n    canActivate: [SsoGuard, AuthGuard, ProjectGuard],\n  },\n  {\n    path: 'project/:projectID/board/:boardID/canvas',\n    component: CanvasComponent,\n    canActivate: [AuthGuard, ProjectGuard, BoardGuard],\n  },\n  {\n    path: 'project/:projectID/board/:boardID/workspace',\n    component: CkWorkspaceComponent,\n    canActivate: [AuthGuard, ProjectGuard, BoardGuard],\n  },\n  {\n    path: 'project/:projectID/board/:boardID/buckets',\n    component: CkBucketsComponent,\n    canActivate: [AuthGuard, ProjectGuard, BoardGuard],\n  },\n  {\n    path: 'project/:projectID/board/:boardID/monitor',\n    component: CkMonitorComponent,\n    canActivate: [AuthGuard, ProjectGuard, BoardGuard],\n  },\n  {\n    path: 'project/:projectID/todo',\n    component: ProjectTodoListModalComponent,\n    canActivate: [AuthGuard, ProjectGuard],\n  },\n  { path: 'error', component: ErrorComponent },\n  { path: '**', redirectTo: 'error' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}