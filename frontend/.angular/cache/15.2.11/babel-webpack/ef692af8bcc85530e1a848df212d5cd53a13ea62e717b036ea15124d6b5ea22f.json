{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { shuffle } from 'src/app/utils/Utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"src/app/services/project.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/legacy-button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/legacy-tooltip\";\nimport * as i7 from \"@angular/cdk/drag-drop\";\nfunction MoveGroupMembersComponent_div_5_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function MoveGroupMembersComponent_div_5_div_8_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const j_r6 = restoredCtx.index;\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.removeMember(i_r3, j_r6));\n    });\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"close\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const member_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r5.username, \" \");\n  }\n}\nfunction MoveGroupMembersComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function MoveGroupMembersComponent_div_5_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r3 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.removeAllMembers(i_r3));\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"clear_all\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 7);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function MoveGroupMembersComponent_div_5_Template_div_cdkDropListDropped_7_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.drop($event));\n    });\n    i0.ɵɵtemplate(8, MoveGroupMembersComponent_div_5_div_8_Template, 5, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(group_r2.groupName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"cdkDropListData\", group_r2.members);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r2.members);\n  }\n}\nfunction MoveGroupMembersComponent_div_6_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const member_r14 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r14.username);\n  }\n}\nfunction MoveGroupMembersComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 5)(2, \"span\");\n    i0.ɵɵtext(3, \"Unassigned\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function MoveGroupMembersComponent_div_6_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.unassignAllMembers());\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"arrow_downward\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 7);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function MoveGroupMembersComponent_div_6_Template_div_cdkDropListDropped_7_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.drop($event));\n    });\n    i0.ɵɵtemplate(8, MoveGroupMembersComponent_div_6_div_8_Template, 3, 1, \"div\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"cdkDropListData\", ctx_r1.unassigned);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.unassigned);\n  }\n}\nexport class MoveGroupMembersComponent {\n  userService;\n  projectService;\n  groups;\n  projectID;\n  headerText;\n  updateGroups = new EventEmitter();\n  groupsChanged = new EventEmitter();\n  groupMembers = [];\n  projectMembers = [];\n  unassigned = [];\n  constructor(userService, projectService) {\n    this.userService = userService;\n    this.projectService = projectService;\n  }\n  ngOnInit() {}\n  ngOnChanges(changes) {\n    const promises = [];\n    if (changes.groups.firstChange) promises.push(this.updateProjectMembers());\n    promises.push(...this.updateGroupMembers());\n    Promise.all(promises).then(() => {\n      this.updateGroups.emit(this.getGroups());\n      this.updateUnassignedMembers();\n    });\n  }\n  updateGroupMembers() {\n    this.groupMembers.length = 0;\n    const promises = [];\n    this.groups.forEach(group => {\n      promises.push(this.userService.getMultipleByIds(group.members).then(users => {\n        if (users) {\n          const groupMembers = {\n            groupID: group.groupID,\n            groupName: group.name,\n            members: users\n          };\n          this.groupMembers.push(groupMembers);\n        }\n      }));\n    });\n    return promises;\n  }\n  updateProjectMembers() {\n    return this.projectService.get(this.projectID).then(project => {\n      if (project) this.projectMembers = project.members;\n    });\n  }\n  updateUnassignedMembers() {\n    this.unassigned = [];\n    const memberIDs = [];\n    this.projectMembers.forEach(member => {\n      const isUnassigned = !this.groupMembers.some(group => {\n        return group.members.map(gm => gm.userID).includes(member);\n      });\n      if (isUnassigned) memberIDs.push(member);\n    });\n    this.userService.getMultipleByIds(memberIDs).then(users => {\n      if (users) this.unassigned.push(...users);\n      this.updateGroups.emit(this.getGroups());\n    });\n  }\n  getGroups() {\n    const groups = [];\n    this.groupMembers.forEach(gm => {\n      const updatedGroup = {\n        groupID: gm.groupID,\n        projectID: this.projectID,\n        name: gm.groupName,\n        members: gm.members.map(member => member.userID)\n      };\n      groups.push(updatedGroup);\n    });\n    return groups;\n  }\n  unassignAllMembers() {\n    this.clearAllGroupMembers();\n    this.updateUnassignedMembers();\n  }\n  removeMember(groupIndex, memberIndex) {\n    const members = this.groupMembers[groupIndex].members;\n    this.unassigned.push(members[memberIndex]);\n    members.splice(memberIndex, 1);\n    this.updateGroups.emit(this.getGroups());\n    this.groupsChanged.emit(true);\n  }\n  removeAllMembers(groupIndex) {\n    const members = this.groupMembers[groupIndex].members;\n    if (members.length === 0) return;\n    this.unassigned.push(...members);\n    members.length = 0;\n    this.updateGroups.emit(this.getGroups());\n    this.groupsChanged.emit(true);\n  }\n  shuffleBetweenGroups() {\n    if (this.groupMembers.length == 0) return;\n    const members = this.removeDuplicateUsers(this.getAllMembersInSelectedGroups());\n    shuffle(members);\n    this.clearUnassignedMembers();\n    this.clearAllGroupMembers();\n    members.forEach((member, index) => {\n      this.groupMembers[index % this.groupMembers.length].members.push(member);\n    });\n    this.updateGroups.emit(this.getGroups());\n    this.groupsChanged.emit(true);\n  }\n  clearUnassignedMembers() {\n    this.unassigned = [];\n  }\n  clearAllGroupMembers() {\n    this.groupMembers.forEach(group => group.members = []);\n  }\n  getAllMembersInSelectedGroups() {\n    const members = [];\n    this.groupMembers.forEach(group => {\n      members.push(...group.members);\n    });\n    members.push(...this.unassigned);\n    return members;\n  }\n  removeDuplicateUsers(users) {\n    const ids = users.map(user => user.userID);\n    return users.filter(({\n      userID\n    }, index) => !ids.includes(userID, index + 1));\n  }\n  drop(event) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n      this.updateGroups.emit(this.getGroups());\n      this.groupsChanged.emit(true);\n    }\n  }\n  static ɵfac = function MoveGroupMembersComponent_Factory(t) {\n    return new (t || MoveGroupMembersComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ProjectService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MoveGroupMembersComponent,\n    selectors: [[\"app-move-group-members\"]],\n    inputs: {\n      groups: \"groups\",\n      projectID: \"projectID\",\n      headerText: \"headerText\"\n    },\n    outputs: {\n      updateGroups: \"updateGroups\",\n      groupsChanged: \"groupsChanged\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 7,\n    vars: 3,\n    consts: [[\"cdkDropListGroup\", \"\", 1, \"global-groups-list\"], [1, \"group-member-list\"], [\"class\", \"member-list-container\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"member-list-container left-margin\", 4, \"ngIf\"], [1, \"member-list-container\"], [1, \"member-list-header\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Remove all students from group\", 3, \"click\"], [\"cdkDropList\", \"\", 1, \"member-list\", 3, \"cdkDropListData\", \"cdkDropListDropped\"], [\"cdkDrag\", \"\", \"class\", \"group-member-box member-box\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"group-member-box\", \"member-box\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Remove student from group\", 1, \"icon-button\", 3, \"click\"], [1, \"member-list-container\", \"left-margin\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Unassign all students\", 3, \"click\"], [\"cdkDrag\", \"\", \"class\", \"member-box\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"member-box\"]],\n    template: function MoveGroupMembersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1);\n        i0.ɵɵtemplate(5, MoveGroupMembersComponent_div_5_Template, 9, 3, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, MoveGroupMembersComponent_div_6_Template, 9, 2, \"div\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.headerText);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.groupMembers);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.groups.length !== 0);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.MatLegacyButton, i5.MatIcon, i6.MatLegacyTooltip, i7.CdkDropList, i7.CdkDropListGroup, i7.CdkDrag],\n    styles: [\".global-groups-list[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\n.group-member-list[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: auto auto auto auto;\\n  column-gap: 1rem;\\n  width: 100%;\\n  margin-bottom: 10px;\\n  max-height: 400px;\\n  overflow-y: scroll;\\n}\\n\\n.member-list-container[_ngcontent-%COMP%] {\\n  min-width: 200px;\\n}\\n\\n.member-list-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.member-list[_ngcontent-%COMP%] {\\n  border: solid 1px #ccc;\\n  min-height: 60px;\\n  background: white;\\n  border-radius: 4px;\\n  overflow: hidden;\\n  display: block;\\n}\\n\\n.member-box[_ngcontent-%COMP%] {\\n  padding: 20px 10px;\\n  border-bottom: solid 1px #ccc;\\n  color: rgba(0, 0, 0, 0.87);\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  box-sizing: border-box;\\n  cursor: move;\\n  background: white;\\n  font-size: 14px;\\n}\\n\\n.group-member-box[_ngcontent-%COMP%] {\\n  padding: 10px 10px;\\n}\\n\\n.cdk-drag-preview[_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\n}\\n\\n.cdk-drag-placeholder[_ngcontent-%COMP%] {\\n  opacity: 0;\\n}\\n\\n.cdk-drag-animating[_ngcontent-%COMP%] {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.member-box[_ngcontent-%COMP%]:last-child {\\n  border: none;\\n}\\n\\n.member-list.cdk-drop-list-dragging[_ngcontent-%COMP%]   .member-box[_ngcontent-%COMP%]:not(.cdk-drag-placeholder) {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.left-margin[_ngcontent-%COMP%] {\\n  margin-left: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ncm91cHMvbW92ZS1ncm91cC1tZW1iZXJzL21vdmUtZ3JvdXAtbWVtYmVycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7RUFDQSwwQ0FBQTtFQUNBLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVBO0VBQ0ksZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0FBQ0o7O0FBRUE7RUFDSSxzQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0ksa0JBQUE7RUFDQSw2QkFBQTtFQUNBLDBCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSw4QkFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtBQUNKOztBQUVBO0VBQ0csa0JBQUE7QUFDSDs7QUFFQTtFQUNJLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxxSEFBQTtBQUNKOztBQUlBO0VBQ0ksVUFBQTtBQURKOztBQUlBO0VBQ0ksc0RBQUE7QUFESjs7QUFJQTtFQUNJLFlBQUE7QUFESjs7QUFJQTtFQUNJLHNEQUFBO0FBREo7O0FBSUE7RUFDSSxpQkFBQTtBQURKIiwic291cmNlc0NvbnRlbnQiOlsiLmdsb2JhbC1ncm91cHMtbGlzdHtcbiAgICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uZ3JvdXAtbWVtYmVyLWxpc3Qge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG8gYXV0byBhdXRvO1xuICAgIGNvbHVtbi1nYXA6IDFyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICBtYXgtaGVpZ2h0OiA0MDBweDtcbiAgICBvdmVyZmxvdy15OnNjcm9sbDtcbn1cblxuLm1lbWJlci1saXN0LWNvbnRhaW5lciB7XG4gICAgbWluLXdpZHRoOiAyMDBweDtcbn1cblxuLm1lbWJlci1saXN0LWhlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLm1lbWJlci1saXN0IHtcbiAgICBib3JkZXI6IHNvbGlkIDFweCAjY2NjO1xuICAgIG1pbi1oZWlnaHQ6IDYwcHg7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5tZW1iZXItYm94IHtcbiAgICBwYWRkaW5nOiAyMHB4IDEwcHg7XG4gICAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4ICNjY2M7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgY3Vyc29yOiBtb3ZlO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLmdyb3VwLW1lbWJlci1ib3gge1xuICAgcGFkZGluZzogMTBweCAxMHB4O1xufVxuXG4uY2RrLWRyYWctcHJldmlldyB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgYm94LXNoYWRvdzogMCA1cHggNXB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjIpLFxuICAgICAgICAgICAgICAgIDAgOHB4IDEwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xNCksXG4gICAgICAgICAgICAgICAgMCAzcHggMTRweCAycHggcmdiYSgwLCAwLCAwLCAwLjEyKTtcbn1cblxuLmNkay1kcmFnLXBsYWNlaG9sZGVyIHtcbiAgICBvcGFjaXR5OiAwO1xufVxuXG4uY2RrLWRyYWctYW5pbWF0aW5nIHtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XG59XG5cbi5tZW1iZXItYm94Omxhc3QtY2hpbGQge1xuICAgIGJvcmRlcjogbm9uZTtcbn1cblxuLm1lbWJlci1saXN0LmNkay1kcm9wLWxpc3QtZHJhZ2dpbmcgLm1lbWJlci1ib3g6bm90KC5jZGstZHJhZy1wbGFjZWhvbGRlcikge1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yLCAxKTtcbn1cblxuLmxlZnQtbWFyZ2lue1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","moveItemInArray","transferArrayItem","shuffle","i0","MoveGroupMembersComponent","userService","projectService","groups","projectID","headerText","updateGroups","groupsChanged","groupMembers","projectMembers","unassigned","constructor","ngOnInit","ngOnChanges","changes","promises","firstChange","push","updateProjectMembers","updateGroupMembers","Promise","all","then","emit","getGroups","updateUnassignedMembers","length","forEach","group","getMultipleByIds","members","users","groupID","groupName","name","get","project","memberIDs","member","isUnassigned","some","map","gm","userID","includes","updatedGroup","unassignAllMembers","clearAllGroupMembers","removeMember","groupIndex","memberIndex","splice","removeAllMembers","shuffleBetweenGroups","removeDuplicateUsers","getAllMembersInSelectedGroups","clearUnassignedMembers","index","ids","user","filter","drop","event","previousContainer","container","data","previousIndex","currentIndex","selectors","inputs","outputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/components/groups/move-group-members/move-group-members.component.ts","/Users/marieklinaeva/github/ck-board/frontend/src/app/components/groups/move-group-members/move-group-members.component.html"],"sourcesContent":["import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport { UserService } from 'src/app/services/user.service';\nimport { GroupMembers, Group } from 'src/app/models/group';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { shuffle } from 'src/app/utils/Utils';\nimport AuthUser from 'src/app/models/user';\n\n@Component({\n  selector: 'app-move-group-members',\n  templateUrl: './move-group-members.component.html',\n  styleUrls: ['./move-group-members.component.scss'],\n})\nexport class MoveGroupMembersComponent implements OnInit {\n  @Input() groups: Group[];\n  @Input() projectID: string;\n  @Input() headerText: string;\n  @Output() updateGroups: EventEmitter<Group[]> = new EventEmitter<Group[]>();\n  @Output() groupsChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  groupMembers: GroupMembers[] = [];\n  projectMembers: string[] = [];\n  unassigned: AuthUser[] = [];\n\n  constructor(\n    private userService: UserService,\n    private projectService: ProjectService\n  ) {}\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const promises: Promise<any>[] = [];\n    if (changes.groups.firstChange) promises.push(this.updateProjectMembers());\n\n    promises.push(...this.updateGroupMembers());\n\n    Promise.all(promises).then(() => {\n      this.updateGroups.emit(this.getGroups());\n      this.updateUnassignedMembers();\n    });\n  }\n\n  private updateGroupMembers(): Promise<any>[] {\n    this.groupMembers.length = 0;\n    const promises: Promise<any>[] = [];\n    this.groups.forEach((group) => {\n      promises.push(\n        this.userService.getMultipleByIds(group.members).then((users) => {\n          if (users) {\n            const groupMembers: GroupMembers = {\n              groupID: group.groupID,\n              groupName: group.name,\n              members: users,\n            };\n            this.groupMembers.push(groupMembers);\n          }\n        })\n      );\n    });\n    return promises;\n  }\n\n  private updateProjectMembers(): Promise<any> {\n    return this.projectService.get(this.projectID).then((project) => {\n      if (project) this.projectMembers = project.members;\n    });\n  }\n\n  private updateUnassignedMembers(): void {\n    this.unassigned = [];\n    const memberIDs: string[] = [];\n    this.projectMembers.forEach((member) => {\n      const isUnassigned = !this.groupMembers.some((group) => {\n        return group.members.map((gm) => gm.userID).includes(member);\n      });\n      if (isUnassigned) memberIDs.push(member);\n    });\n    this.userService.getMultipleByIds(memberIDs).then((users) => {\n      if (users) this.unassigned.push(...users);\n      this.updateGroups.emit(this.getGroups());\n    });\n  }\n\n  private getGroups(): Group[] {\n    const groups: Group[] = [];\n    this.groupMembers.forEach((gm) => {\n      const updatedGroup: Group = {\n        groupID: gm.groupID,\n        projectID: this.projectID,\n        name: gm.groupName,\n        members: gm.members.map((member) => member.userID),\n      };\n      groups.push(updatedGroup);\n    });\n    return groups;\n  }\n\n  unassignAllMembers() {\n    this.clearAllGroupMembers();\n    this.updateUnassignedMembers();\n  }\n\n  removeMember(groupIndex: number, memberIndex: number): void {\n    const members = this.groupMembers[groupIndex].members;\n    this.unassigned.push(members[memberIndex]);\n    members.splice(memberIndex, 1);\n    this.updateGroups.emit(this.getGroups());\n    this.groupsChanged.emit(true);\n  }\n\n  removeAllMembers(groupIndex: number): void {\n    const members = this.groupMembers[groupIndex].members;\n    if (members.length === 0) return;\n    this.unassigned.push(...members);\n    members.length = 0;\n    this.updateGroups.emit(this.getGroups());\n    this.groupsChanged.emit(true);\n  }\n\n  shuffleBetweenGroups(): void {\n    if (this.groupMembers.length == 0) return;\n\n    const members = this.removeDuplicateUsers(\n      this.getAllMembersInSelectedGroups()\n    );\n    shuffle(members);\n\n    this.clearUnassignedMembers();\n    this.clearAllGroupMembers();\n\n    members.forEach((member, index) => {\n      this.groupMembers[index % this.groupMembers.length].members.push(member);\n    });\n    this.updateGroups.emit(this.getGroups());\n    this.groupsChanged.emit(true);\n  }\n\n  private clearUnassignedMembers(): void {\n    this.unassigned = [];\n  }\n\n  private clearAllGroupMembers(): void {\n    this.groupMembers.forEach((group) => (group.members = []));\n  }\n\n  private getAllMembersInSelectedGroups(): AuthUser[] {\n    const members: AuthUser[] = [];\n    this.groupMembers.forEach((group) => {\n      members.push(...group.members);\n    });\n    members.push(...this.unassigned);\n    return members;\n  }\n\n  private removeDuplicateUsers(users: AuthUser[]): AuthUser[] {\n    const ids = users.map((user) => user.userID);\n    return users.filter(\n      ({ userID }, index) => !ids.includes(userID, index + 1)\n    );\n  }\n\n  drop(event: CdkDragDrop<AuthUser[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n      this.updateGroups.emit(this.getGroups());\n      this.groupsChanged.emit(true);\n    }\n  }\n}\n","<div>\n  <h4>{{ headerText }}</h4>\n  <div cdkDropListGroup class=\"global-groups-list\">\n    <div class=\"group-member-list\">\n      <div\n        *ngFor=\"let group of groupMembers; let i = index\"\n        class=\"member-list-container\"\n      >\n        <div class=\"member-list-header\">\n          <span>{{ group.groupName }}</span>\n          <button\n            mat-icon-button\n            matTooltip=\"Remove all students from group\"\n            (click)=\"removeAllMembers(i)\"\n          >\n            <mat-icon>clear_all</mat-icon>\n          </button>\n        </div>\n        <div\n          cdkDropList\n          [cdkDropListData]=\"group.members\"\n          (cdkDropListDropped)=\"drop($event)\"\n          class=\"member-list\"\n        >\n          <div\n            cdkDrag\n            *ngFor=\"let member of group.members; let j = index\"\n            class=\"group-member-box member-box\"\n          >\n            {{ member.username }}\n            <button \n              mat-icon-button\n              matTooltip=\"Remove student from group\"\n              (click)=\"removeMember(i, j)\"\n              class=\"icon-button\"\n            >\n              <mat-icon>close</mat-icon>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n      <div\n        *ngIf=\"groups.length !== 0\"\n        class=\"member-list-container left-margin\"\n      >\n        <div class=\"member-list-header\">\n          <span>Unassigned</span>\n          <button\n            mat-icon-button\n            matTooltip=\"Unassign all students\"\n            (click)=\"unassignAllMembers()\"\n          >\n            <mat-icon>arrow_downward</mat-icon>\n          </button>\n        </div>\n        <div\n          cdkDropList\n          [cdkDropListData]=\"unassigned\"\n          (cdkDropListDropped)=\"drop($event)\"\n          class=\"member-list\"\n        >\n          <div\n            cdkDrag\n            *ngFor=\"let member of unassigned\"\n            class=\"member-box\"\n          >\n            <span>{{ member.username }}</span>\n          </div>\n        </div>\n      </div>\n    \n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}