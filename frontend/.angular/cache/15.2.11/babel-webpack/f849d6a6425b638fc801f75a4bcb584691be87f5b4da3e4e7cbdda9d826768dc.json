{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport * as io from 'socket.io-client';\nclass WrappedSocket {\n  config;\n  subscribersCounter = {};\n  eventObservables$ = {};\n  ioSocket;\n  emptyConfig = {\n    url: '',\n    options: {}\n  };\n  constructor(config) {\n    this.config = config;\n    if (config === undefined) {\n      config = this.emptyConfig;\n    }\n    const url = config.url;\n    const options = config.options;\n    const ioFunc = io.default ? io.default : io;\n    this.ioSocket = ioFunc(url, options);\n  }\n  of(namespace) {\n    this.ioSocket.of(namespace);\n  }\n  on(eventName, callback) {\n    this.ioSocket.on(eventName, callback);\n  }\n  once(eventName, callback) {\n    this.ioSocket.once(eventName, callback);\n  }\n  connect(callback) {\n    return this.ioSocket.connect(callback);\n  }\n  disconnect(_close) {\n    return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\n  }\n  emit(_eventName, ..._args) {\n    return this.ioSocket.emit.apply(this.ioSocket, arguments);\n  }\n  removeListener(_eventName, _callback) {\n    return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\n  }\n  removeAllListeners(_eventName) {\n    return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\n  }\n  fromEvent(eventName) {\n    if (!this.subscribersCounter[eventName]) {\n      this.subscribersCounter[eventName] = 0;\n    }\n    this.subscribersCounter[eventName]++;\n    if (!this.eventObservables$[eventName]) {\n      this.eventObservables$[eventName] = new Observable(observer => {\n        const listener = data => {\n          observer.next(data);\n        };\n        this.ioSocket.on(eventName, listener);\n        return () => {\n          this.subscribersCounter[eventName]--;\n          if (this.subscribersCounter[eventName] === 0) {\n            this.ioSocket.removeListener(eventName, listener);\n            delete this.eventObservables$[eventName];\n          }\n        };\n      }).pipe(share());\n    }\n    return this.eventObservables$[eventName];\n  }\n  fromOneTimeEvent(eventName) {\n    return new Promise(resolve => this.once(eventName, resolve));\n  }\n  listeners(eventName) {\n    return this.ioSocket.listeners(eventName);\n  }\n  listenersAny() {\n    return this.ioSocket.listenersAny();\n  }\n  listenersAnyOutgoing() {\n    return this.ioSocket.listenersAnyOutgoing();\n  }\n  off(eventName, listener) {\n    if (!eventName) {\n      // Remove all listeners for all events\n      return this.ioSocket.offAny();\n    }\n    if (eventName && !listener) {\n      // Remove all listeners for that event\n      return this.ioSocket.off(eventName);\n    }\n    // Removes the specified listener from the listener array for the event named\n    return this.ioSocket.off(eventName, listener);\n  }\n  onAny(callback) {\n    return this.ioSocket.onAny(callback);\n  }\n  onAnyOutgoing(callback) {\n    return this.ioSocket.onAnyOutgoing(callback);\n  }\n  prependAny(callback) {\n    return this.ioSocket.prependAny(callback);\n  }\n  prependAnyOutgoing(callback) {\n    return this.ioSocket.prependAnyOutgoing(callback);\n  }\n  timeout(value) {\n    return this.ioSocket.timeout(value);\n  }\n  volatile() {\n    return this.ioSocket.volatile;\n  }\n}\n\n/** Socket factory */\nfunction SocketFactory(config) {\n  return new WrappedSocket(config);\n}\nconst SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG__');\nclass SocketIoModule {\n  static forRoot(config) {\n    return {\n      ngModule: SocketIoModule,\n      providers: [{\n        provide: SOCKET_CONFIG_TOKEN,\n        useValue: config\n      }, {\n        provide: WrappedSocket,\n        useFactory: SocketFactory,\n        deps: [SOCKET_CONFIG_TOKEN]\n      }]\n    };\n  }\n  static ɵfac = function SocketIoModule_Factory(t) {\n    return new (t || SocketIoModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SocketIoModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SocketIoModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { WrappedSocket as Socket, SocketIoModule };","map":{"version":3,"names":["i0","InjectionToken","NgModule","Observable","share","io","WrappedSocket","config","subscribersCounter","eventObservables$","ioSocket","emptyConfig","url","options","constructor","undefined","ioFunc","default","of","namespace","on","eventName","callback","once","connect","disconnect","_close","apply","arguments","emit","_eventName","_args","removeListener","_callback","removeAllListeners","fromEvent","observer","listener","data","next","pipe","fromOneTimeEvent","Promise","resolve","listeners","listenersAny","listenersAnyOutgoing","off","offAny","onAny","onAnyOutgoing","prependAny","prependAnyOutgoing","timeout","value","volatile","SocketFactory","SOCKET_CONFIG_TOKEN","SocketIoModule","forRoot","ngModule","providers","provide","useValue","useFactory","deps","ɵfac","ɵmod","ɵinj","type","args","Socket"],"sources":["/Users/marieklinaeva/github/ck-board/frontend/node_modules/ngx-socket-io/fesm2022/ngx-socket-io.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport * as io from 'socket.io-client';\n\nclass WrappedSocket {\n    config;\n    subscribersCounter = {};\n    eventObservables$ = {};\n    ioSocket;\n    emptyConfig = {\n        url: '',\n        options: {},\n    };\n    constructor(config) {\n        this.config = config;\n        if (config === undefined) {\n            config = this.emptyConfig;\n        }\n        const url = config.url;\n        const options = config.options;\n        const ioFunc = io.default ? io.default : io;\n        this.ioSocket = ioFunc(url, options);\n    }\n    of(namespace) {\n        this.ioSocket.of(namespace);\n    }\n    on(eventName, callback) {\n        this.ioSocket.on(eventName, callback);\n    }\n    once(eventName, callback) {\n        this.ioSocket.once(eventName, callback);\n    }\n    connect(callback) {\n        return this.ioSocket.connect(callback);\n    }\n    disconnect(_close) {\n        return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\n    }\n    emit(_eventName, ..._args) {\n        return this.ioSocket.emit.apply(this.ioSocket, arguments);\n    }\n    removeListener(_eventName, _callback) {\n        return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\n    }\n    removeAllListeners(_eventName) {\n        return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\n    }\n    fromEvent(eventName) {\n        if (!this.subscribersCounter[eventName]) {\n            this.subscribersCounter[eventName] = 0;\n        }\n        this.subscribersCounter[eventName]++;\n        if (!this.eventObservables$[eventName]) {\n            this.eventObservables$[eventName] = new Observable((observer) => {\n                const listener = (data) => {\n                    observer.next(data);\n                };\n                this.ioSocket.on(eventName, listener);\n                return () => {\n                    this.subscribersCounter[eventName]--;\n                    if (this.subscribersCounter[eventName] === 0) {\n                        this.ioSocket.removeListener(eventName, listener);\n                        delete this.eventObservables$[eventName];\n                    }\n                };\n            }).pipe(share());\n        }\n        return this.eventObservables$[eventName];\n    }\n    fromOneTimeEvent(eventName) {\n        return new Promise(resolve => this.once(eventName, resolve));\n    }\n    listeners(eventName) {\n        return this.ioSocket.listeners(eventName);\n    }\n    listenersAny() {\n        return this.ioSocket.listenersAny();\n    }\n    listenersAnyOutgoing() {\n        return this.ioSocket.listenersAnyOutgoing();\n    }\n    off(eventName, listener) {\n        if (!eventName) {\n            // Remove all listeners for all events\n            return this.ioSocket.offAny();\n        }\n        if (eventName && !listener) {\n            // Remove all listeners for that event\n            return this.ioSocket.off(eventName);\n        }\n        // Removes the specified listener from the listener array for the event named\n        return this.ioSocket.off(eventName, listener);\n    }\n    onAny(callback) {\n        return this.ioSocket.onAny(callback);\n    }\n    onAnyOutgoing(callback) {\n        return this.ioSocket.onAnyOutgoing(callback);\n    }\n    prependAny(callback) {\n        return this.ioSocket.prependAny(callback);\n    }\n    prependAnyOutgoing(callback) {\n        return this.ioSocket.prependAnyOutgoing(callback);\n    }\n    timeout(value) {\n        return this.ioSocket.timeout(value);\n    }\n    volatile() {\n        return this.ioSocket.volatile;\n    }\n}\n\n/** Socket factory */\nfunction SocketFactory(config) {\n    return new WrappedSocket(config);\n}\nconst SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG__');\nclass SocketIoModule {\n    static forRoot(config) {\n        return {\n            ngModule: SocketIoModule,\n            providers: [\n                { provide: SOCKET_CONFIG_TOKEN, useValue: config },\n                {\n                    provide: WrappedSocket,\n                    useFactory: SocketFactory,\n                    deps: [SOCKET_CONFIG_TOKEN],\n                },\n            ],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: SocketIoModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: SocketIoModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: SocketIoModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: SocketIoModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { WrappedSocket as Socket, SocketIoModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}