{"ast":null,"code":"// this is needed to allow sorting on nested properties\nconst nestedProperty = (data, sortHeaderId) => {\n  return sortHeaderId.split('.').reduce((accumulator, key) => accumulator && accumulator[key], data);\n};\n// this is needed to have caseInsensitive sorting\nconst caseInsensitive = (data, sortHeaderId) => {\n  const value = data[sortHeaderId];\n  return typeof value === 'string' ? value.toUpperCase() : value;\n};\nconst nestedCaseInsensitive = (data, sortHeaderId) => {\n  const value = sortHeaderId.split('.').reduce((accumulator, key) => accumulator && accumulator[key], data);\n  return typeof value === 'string' ? value.toUpperCase() : value;\n};\nconst groupItemBy = (array, property) => {\n  const hash = {};\n  const props = property.split('.');\n  for (let i = 0; i < array.length; i++) {\n    const key = props.reduce(function (acc, prop) {\n      return acc && acc[prop];\n    }, array[i]);\n    if (!hash[key]) hash[key] = [];\n    hash[key].push(array[i]);\n  }\n  return hash;\n};\nconst sorting = {\n  nestedProperty,\n  caseInsensitive,\n  nestedCaseInsensitive,\n  groupItemBy\n};\nexport default sorting;","map":{"version":3,"mappings":"AAAA;AACA,MAAMA,cAAc,GAAG,CAACC,IAAS,EAAEC,YAAoB,KAAqB;EAC1E,OAAOA,YAAY,CAChBC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,CAACC,WAAW,EAAEC,GAAG,KAAKD,WAAW,IAAIA,WAAW,CAACC,GAAG,CAAC,EAAEL,IAAI,CAE3D;AACZ,CAAC;AAED;AACA,MAAMM,eAAe,GAAG,CAACN,IAAS,EAAEC,YAAoB,KAAqB;EAC3E,MAAMM,KAAK,GAAGP,IAAI,CAACC,YAAY,CAAC;EAChC,OAAO,OAAOM,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACC,WAAW,EAAE,GAAGD,KAAK;AAChE,CAAC;AAED,MAAME,qBAAqB,GAAG,CAC5BT,IAAS,EACTC,YAAoB,KACD;EACnB,MAAMM,KAAK,GAAGN,YAAY,CACvBC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,CAACC,WAAW,EAAEC,GAAG,KAAKD,WAAW,IAAIA,WAAW,CAACC,GAAG,CAAC,EAAEL,IAAI,CAE3D;EACV,OAAO,OAAOO,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACC,WAAW,EAAE,GAAGD,KAAK;AAChE,CAAC;AAED,MAAMG,WAAW,GAAG,CAACC,KAAY,EAAEC,QAAgB,KAAS;EAC1D,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,KAAK,GAAGF,QAAQ,CAACV,KAAK,CAAC,GAAG,CAAC;EACjC,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,MAAMV,GAAG,GAAGS,KAAK,CAACX,MAAM,CAAC,UAAUc,GAAG,EAAEC,IAAI;MAC1C,OAAOD,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;IACzB,CAAC,EAAEP,KAAK,CAACI,CAAC,CAAC,CAAC;IACZ,IAAI,CAACF,IAAI,CAACR,GAAG,CAAC,EAAEQ,IAAI,CAACR,GAAG,CAAC,GAAG,EAAE;IAC9BQ,IAAI,CAACR,GAAG,CAAC,CAACc,IAAI,CAACR,KAAK,CAACI,CAAC,CAAC,CAAC;;EAE1B,OAAOF,IAAI;AACb,CAAC;AAED,MAAMO,OAAO,GAAG;EACdrB,cAAc;EACdO,eAAe;EACfG,qBAAqB;EACrBC;CACD;AAED,eAAeU,OAAO","names":["nestedProperty","data","sortHeaderId","split","reduce","accumulator","key","caseInsensitive","value","toUpperCase","nestedCaseInsensitive","groupItemBy","array","property","hash","props","i","length","acc","prop","push","sorting"],"sourceRoot":"","sources":["/Users/marieklinaeva/github/ck-board/frontend/src/app/utils/sorting.ts"],"sourcesContent":["// this is needed to allow sorting on nested properties\nconst nestedProperty = (data: any, sortHeaderId: string): string | number => {\n  return sortHeaderId\n    .split('.')\n    .reduce((accumulator, key) => accumulator && accumulator[key], data) as\n    | string\n    | number;\n};\n\n// this is needed to have caseInsensitive sorting\nconst caseInsensitive = (data: any, sortHeaderId: string): string | number => {\n  const value = data[sortHeaderId];\n  return typeof value === 'string' ? value.toUpperCase() : value;\n};\n\nconst nestedCaseInsensitive = (\n  data: any,\n  sortHeaderId: string\n): string | number => {\n  const value = sortHeaderId\n    .split('.')\n    .reduce((accumulator, key) => accumulator && accumulator[key], data) as\n    | string\n    | number;\n  return typeof value === 'string' ? value.toUpperCase() : value;\n};\n\nconst groupItemBy = (array: any[], property: string): any => {\n  const hash = {};\n  const props = property.split('.');\n  for (let i = 0; i < array.length; i++) {\n    const key = props.reduce(function (acc, prop) {\n      return acc && acc[prop];\n    }, array[i]);\n    if (!hash[key]) hash[key] = [];\n    hash[key].push(array[i]);\n  }\n  return hash;\n};\n\nconst sorting = {\n  nestedProperty,\n  caseInsensitive,\n  nestedCaseInsensitive,\n  groupItemBy,\n};\n\nexport default sorting;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}